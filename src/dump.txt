
kernel.o:     file format elf32-i386


Disassembly of section .text:

00100000 <_start>:
  100000:	bc 00 7c 00 00       	mov    $0x7c00,%esp
  100005:	0f 01 05 88 44 11 00 	sgdtl  0x114488
  10000c:	e8 36 00 00 00       	call   100047 <init_gdt_idt>
  100011:	e8 2e 01 00 00       	call   100144 <init_pic>
  100016:	e8 ec 01 00 00       	call   100207 <setup_idt>
  10001b:	e8 28 05 00 00       	call   100548 <init_tss>
  100020:	0f 01 15 88 44 11 00 	lgdtl  0x114488
  100027:	0f 01 1d 00 40 11 00 	lidtl  0x114000
  10002e:	ea 35 00 10 00 08 00 	ljmp   $0x8,$0x100035

00100035 <flush>:
  100035:	31 c0                	xor    %eax,%eax
  100037:	66 b8 20 00          	mov    $0x20,%ax
  10003b:	0f 00 d8             	ltr    %ax
  10003e:	e8 f6 0c 00 00       	call   100d39 <main>
  100043:	fb                   	sti    

00100044 <end>:
  100044:	f4                   	hlt    
  100045:	eb fd                	jmp    100044 <end>

00100047 <init_gdt_idt>:
  100047:	55                   	push   %ebp
  100048:	89 e5                	mov    %esp,%ebp
  10004a:	53                   	push   %ebx
  10004b:	83 ec 04             	sub    $0x4,%esp
  10004e:	e8 70 05 00 00       	call   1005c3 <__x86.get_pc_thunk.bx>
  100053:	81 c3 ad 2f 01 00    	add    $0x12fad,%ebx
  100059:	c7 c0 88 44 11 00    	mov    $0x114488,%eax
  10005f:	0f b7 00             	movzwl (%eax),%eax
  100062:	0f b7 c0             	movzwl %ax,%eax
  100065:	8d 50 01             	lea    0x1(%eax),%edx
  100068:	c7 c0 88 44 11 00    	mov    $0x114488,%eax
  10006e:	8b 40 02             	mov    0x2(%eax),%eax
  100071:	83 ec 04             	sub    $0x4,%esp
  100074:	52                   	push   %edx
  100075:	50                   	push   %eax
  100076:	c7 c0 20 40 11 00    	mov    $0x114020,%eax
  10007c:	50                   	push   %eax
  10007d:	e8 f6 24 00 00       	call   102578 <memcpy>
  100082:	83 c4 10             	add    $0x10,%esp
  100085:	c7 c0 88 44 11 00    	mov    $0x114488,%eax
  10008b:	66 c7 00 ff 03       	movw   $0x3ff,(%eax)
  100090:	c7 c0 20 40 11 00    	mov    $0x114020,%eax
  100096:	89 c2                	mov    %eax,%edx
  100098:	c7 c0 88 44 11 00    	mov    $0x114488,%eax
  10009e:	89 50 02             	mov    %edx,0x2(%eax)
  1000a1:	c7 c0 00 40 11 00    	mov    $0x114000,%eax
  1000a7:	66 c7 00 ff 07       	movw   $0x7ff,(%eax)
  1000ac:	c7 c0 a0 44 11 00    	mov    $0x1144a0,%eax
  1000b2:	89 c2                	mov    %eax,%edx
  1000b4:	c7 c0 00 40 11 00    	mov    $0x114000,%eax
  1000ba:	89 50 02             	mov    %edx,0x2(%eax)
  1000bd:	90                   	nop
  1000be:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  1000c1:	c9                   	leave  
  1000c2:	c3                   	ret    

001000c3 <init_igate>:
  1000c3:	55                   	push   %ebp
  1000c4:	89 e5                	mov    %esp,%ebp
  1000c6:	53                   	push   %ebx
  1000c7:	83 ec 1c             	sub    $0x1c,%esp
  1000ca:	e8 f0 04 00 00       	call   1005bf <__x86.get_pc_thunk.ax>
  1000cf:	05 31 2f 01 00       	add    $0x12f31,%eax
  1000d4:	8b 5d 08             	mov    0x8(%ebp),%ebx
  1000d7:	8b 4d 0c             	mov    0xc(%ebp),%ecx
  1000da:	8b 55 14             	mov    0x14(%ebp),%edx
  1000dd:	88 5d e8             	mov    %bl,-0x18(%ebp)
  1000e0:	88 4d e4             	mov    %cl,-0x1c(%ebp)
  1000e3:	88 55 e0             	mov    %dl,-0x20(%ebp)
  1000e6:	0f b6 55 e8          	movzbl -0x18(%ebp),%edx
  1000ea:	c1 e2 03             	shl    $0x3,%edx
  1000ed:	c7 c0 a0 44 11 00    	mov    $0x1144a0,%eax
  1000f3:	01 d0                	add    %edx,%eax
  1000f5:	89 45 f8             	mov    %eax,-0x8(%ebp)
  1000f8:	8b 45 10             	mov    0x10(%ebp),%eax
  1000fb:	89 45 f4             	mov    %eax,-0xc(%ebp)
  1000fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
  100101:	89 c2                	mov    %eax,%edx
  100103:	8b 45 f8             	mov    -0x8(%ebp),%eax
  100106:	66 89 10             	mov    %dx,(%eax)
  100109:	8b 45 f8             	mov    -0x8(%ebp),%eax
  10010c:	66 c7 40 02 08 00    	movw   $0x8,0x2(%eax)
  100112:	8b 45 f8             	mov    -0x8(%ebp),%eax
  100115:	c6 40 04 00          	movb   $0x0,0x4(%eax)
  100119:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax
  10011d:	c1 e0 05             	shl    $0x5,%eax
  100120:	0a 45 e4             	or     -0x1c(%ebp),%al
  100123:	83 c8 80             	or     $0xffffff80,%eax
  100126:	89 c2                	mov    %eax,%edx
  100128:	8b 45 f8             	mov    -0x8(%ebp),%eax
  10012b:	88 50 05             	mov    %dl,0x5(%eax)
  10012e:	8b 45 f4             	mov    -0xc(%ebp),%eax
  100131:	c1 e8 10             	shr    $0x10,%eax
  100134:	89 c2                	mov    %eax,%edx
  100136:	8b 45 f8             	mov    -0x8(%ebp),%eax
  100139:	66 89 50 06          	mov    %dx,0x6(%eax)
  10013d:	90                   	nop
  10013e:	83 c4 1c             	add    $0x1c,%esp
  100141:	5b                   	pop    %ebx
  100142:	5d                   	pop    %ebp
  100143:	c3                   	ret    

00100144 <init_pic>:
  100144:	55                   	push   %ebp
  100145:	89 e5                	mov    %esp,%ebp
  100147:	53                   	push   %ebx
  100148:	83 ec 04             	sub    $0x4,%esp
  10014b:	e8 73 04 00 00       	call   1005c3 <__x86.get_pc_thunk.bx>
  100150:	81 c3 b0 2e 01 00    	add    $0x12eb0,%ebx
  100156:	83 ec 08             	sub    $0x8,%esp
  100159:	6a 11                	push   $0x11
  10015b:	6a 20                	push   $0x20
  10015d:	e8 f6 23 00 00       	call   102558 <out8>
  100162:	83 c4 10             	add    $0x10,%esp
  100165:	83 ec 08             	sub    $0x8,%esp
  100168:	6a 11                	push   $0x11
  10016a:	68 a0 00 00 00       	push   $0xa0
  10016f:	e8 e4 23 00 00       	call   102558 <out8>
  100174:	83 c4 10             	add    $0x10,%esp
  100177:	83 ec 08             	sub    $0x8,%esp
  10017a:	6a 20                	push   $0x20
  10017c:	6a 21                	push   $0x21
  10017e:	e8 d5 23 00 00       	call   102558 <out8>
  100183:	83 c4 10             	add    $0x10,%esp
  100186:	83 ec 08             	sub    $0x8,%esp
  100189:	6a 28                	push   $0x28
  10018b:	68 a1 00 00 00       	push   $0xa1
  100190:	e8 c3 23 00 00       	call   102558 <out8>
  100195:	83 c4 10             	add    $0x10,%esp
  100198:	83 ec 08             	sub    $0x8,%esp
  10019b:	6a 04                	push   $0x4
  10019d:	6a 21                	push   $0x21
  10019f:	e8 b4 23 00 00       	call   102558 <out8>
  1001a4:	83 c4 10             	add    $0x10,%esp
  1001a7:	83 ec 08             	sub    $0x8,%esp
  1001aa:	6a 02                	push   $0x2
  1001ac:	68 a1 00 00 00       	push   $0xa1
  1001b1:	e8 a2 23 00 00       	call   102558 <out8>
  1001b6:	83 c4 10             	add    $0x10,%esp
  1001b9:	83 ec 08             	sub    $0x8,%esp
  1001bc:	6a 01                	push   $0x1
  1001be:	6a 21                	push   $0x21
  1001c0:	e8 93 23 00 00       	call   102558 <out8>
  1001c5:	83 c4 10             	add    $0x10,%esp
  1001c8:	83 ec 08             	sub    $0x8,%esp
  1001cb:	6a 01                	push   $0x1
  1001cd:	68 a1 00 00 00       	push   $0xa1
  1001d2:	e8 81 23 00 00       	call   102558 <out8>
  1001d7:	83 c4 10             	add    $0x10,%esp
  1001da:	83 ec 08             	sub    $0x8,%esp
  1001dd:	68 fb 00 00 00       	push   $0xfb
  1001e2:	6a 21                	push   $0x21
  1001e4:	e8 6f 23 00 00       	call   102558 <out8>
  1001e9:	83 c4 10             	add    $0x10,%esp
  1001ec:	83 ec 08             	sub    $0x8,%esp
  1001ef:	68 ff 00 00 00       	push   $0xff
  1001f4:	68 a1 00 00 00       	push   $0xa1
  1001f9:	e8 5a 23 00 00       	call   102558 <out8>
  1001fe:	83 c4 10             	add    $0x10,%esp
  100201:	90                   	nop
  100202:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100205:	c9                   	leave  
  100206:	c3                   	ret    

00100207 <setup_idt>:
  100207:	55                   	push   %ebp
  100208:	89 e5                	mov    %esp,%ebp
  10020a:	53                   	push   %ebx
  10020b:	e8 b3 03 00 00       	call   1005c3 <__x86.get_pc_thunk.bx>
  100210:	81 c3 f0 2d 01 00    	add    $0x12df0,%ebx
  100216:	6a 00                	push   $0x0
  100218:	c7 c0 d0 05 10 00    	mov    $0x1005d0,%eax
  10021e:	50                   	push   %eax
  10021f:	6a 0e                	push   $0xe
  100221:	6a 00                	push   $0x0
  100223:	e8 9b fe ff ff       	call   1000c3 <init_igate>
  100228:	83 c4 10             	add    $0x10,%esp
  10022b:	6a 00                	push   $0x0
  10022d:	c7 c0 d6 05 10 00    	mov    $0x1005d6,%eax
  100233:	50                   	push   %eax
  100234:	6a 0e                	push   $0xe
  100236:	6a 01                	push   $0x1
  100238:	e8 86 fe ff ff       	call   1000c3 <init_igate>
  10023d:	83 c4 10             	add    $0x10,%esp
  100240:	6a 00                	push   $0x0
  100242:	c7 c0 dc 05 10 00    	mov    $0x1005dc,%eax
  100248:	50                   	push   %eax
  100249:	6a 0e                	push   $0xe
  10024b:	6a 02                	push   $0x2
  10024d:	e8 71 fe ff ff       	call   1000c3 <init_igate>
  100252:	83 c4 10             	add    $0x10,%esp
  100255:	6a 03                	push   $0x3
  100257:	c7 c0 e2 05 10 00    	mov    $0x1005e2,%eax
  10025d:	50                   	push   %eax
  10025e:	6a 0e                	push   $0xe
  100260:	6a 03                	push   $0x3
  100262:	e8 5c fe ff ff       	call   1000c3 <init_igate>
  100267:	83 c4 10             	add    $0x10,%esp
  10026a:	6a 03                	push   $0x3
  10026c:	c7 c0 e8 05 10 00    	mov    $0x1005e8,%eax
  100272:	50                   	push   %eax
  100273:	6a 0e                	push   $0xe
  100275:	6a 04                	push   $0x4
  100277:	e8 47 fe ff ff       	call   1000c3 <init_igate>
  10027c:	83 c4 10             	add    $0x10,%esp
  10027f:	6a 00                	push   $0x0
  100281:	c7 c0 ee 05 10 00    	mov    $0x1005ee,%eax
  100287:	50                   	push   %eax
  100288:	6a 0e                	push   $0xe
  10028a:	6a 05                	push   $0x5
  10028c:	e8 32 fe ff ff       	call   1000c3 <init_igate>
  100291:	83 c4 10             	add    $0x10,%esp
  100294:	6a 00                	push   $0x0
  100296:	c7 c0 f4 05 10 00    	mov    $0x1005f4,%eax
  10029c:	50                   	push   %eax
  10029d:	6a 0e                	push   $0xe
  10029f:	6a 06                	push   $0x6
  1002a1:	e8 1d fe ff ff       	call   1000c3 <init_igate>
  1002a6:	83 c4 10             	add    $0x10,%esp
  1002a9:	6a 00                	push   $0x0
  1002ab:	c7 c0 fa 05 10 00    	mov    $0x1005fa,%eax
  1002b1:	50                   	push   %eax
  1002b2:	6a 0e                	push   $0xe
  1002b4:	6a 07                	push   $0x7
  1002b6:	e8 08 fe ff ff       	call   1000c3 <init_igate>
  1002bb:	83 c4 10             	add    $0x10,%esp
  1002be:	6a 00                	push   $0x0
  1002c0:	c7 c0 00 06 10 00    	mov    $0x100600,%eax
  1002c6:	50                   	push   %eax
  1002c7:	6a 0e                	push   $0xe
  1002c9:	6a 08                	push   $0x8
  1002cb:	e8 f3 fd ff ff       	call   1000c3 <init_igate>
  1002d0:	83 c4 10             	add    $0x10,%esp
  1002d3:	6a 00                	push   $0x0
  1002d5:	c7 c0 04 06 10 00    	mov    $0x100604,%eax
  1002db:	50                   	push   %eax
  1002dc:	6a 0e                	push   $0xe
  1002de:	6a 09                	push   $0x9
  1002e0:	e8 de fd ff ff       	call   1000c3 <init_igate>
  1002e5:	83 c4 10             	add    $0x10,%esp
  1002e8:	6a 00                	push   $0x0
  1002ea:	c7 c0 0a 06 10 00    	mov    $0x10060a,%eax
  1002f0:	50                   	push   %eax
  1002f1:	6a 0e                	push   $0xe
  1002f3:	6a 0a                	push   $0xa
  1002f5:	e8 c9 fd ff ff       	call   1000c3 <init_igate>
  1002fa:	83 c4 10             	add    $0x10,%esp
  1002fd:	6a 00                	push   $0x0
  1002ff:	c7 c0 0e 06 10 00    	mov    $0x10060e,%eax
  100305:	50                   	push   %eax
  100306:	6a 0e                	push   $0xe
  100308:	6a 0b                	push   $0xb
  10030a:	e8 b4 fd ff ff       	call   1000c3 <init_igate>
  10030f:	83 c4 10             	add    $0x10,%esp
  100312:	6a 00                	push   $0x0
  100314:	c7 c0 12 06 10 00    	mov    $0x100612,%eax
  10031a:	50                   	push   %eax
  10031b:	6a 0e                	push   $0xe
  10031d:	6a 0c                	push   $0xc
  10031f:	e8 9f fd ff ff       	call   1000c3 <init_igate>
  100324:	83 c4 10             	add    $0x10,%esp
  100327:	6a 00                	push   $0x0
  100329:	c7 c0 16 06 10 00    	mov    $0x100616,%eax
  10032f:	50                   	push   %eax
  100330:	6a 0e                	push   $0xe
  100332:	6a 0d                	push   $0xd
  100334:	e8 8a fd ff ff       	call   1000c3 <init_igate>
  100339:	83 c4 10             	add    $0x10,%esp
  10033c:	6a 00                	push   $0x0
  10033e:	c7 c0 1a 06 10 00    	mov    $0x10061a,%eax
  100344:	50                   	push   %eax
  100345:	6a 0e                	push   $0xe
  100347:	6a 0e                	push   $0xe
  100349:	e8 75 fd ff ff       	call   1000c3 <init_igate>
  10034e:	83 c4 10             	add    $0x10,%esp
  100351:	6a 00                	push   $0x0
  100353:	c7 c0 1e 06 10 00    	mov    $0x10061e,%eax
  100359:	50                   	push   %eax
  10035a:	6a 0e                	push   $0xe
  10035c:	6a 10                	push   $0x10
  10035e:	e8 60 fd ff ff       	call   1000c3 <init_igate>
  100363:	83 c4 10             	add    $0x10,%esp
  100366:	6a 00                	push   $0x0
  100368:	c7 c0 30 06 10 00    	mov    $0x100630,%eax
  10036e:	50                   	push   %eax
  10036f:	6a 0e                	push   $0xe
  100371:	6a 20                	push   $0x20
  100373:	e8 4b fd ff ff       	call   1000c3 <init_igate>
  100378:	83 c4 10             	add    $0x10,%esp
  10037b:	6a 00                	push   $0x0
  10037d:	c7 c0 60 06 10 00    	mov    $0x100660,%eax
  100383:	50                   	push   %eax
  100384:	6a 0e                	push   $0xe
  100386:	6a 21                	push   $0x21
  100388:	e8 36 fd ff ff       	call   1000c3 <init_igate>
  10038d:	83 c4 10             	add    $0x10,%esp
  100390:	6a 00                	push   $0x0
  100392:	c7 c0 90 06 10 00    	mov    $0x100690,%eax
  100398:	50                   	push   %eax
  100399:	6a 0e                	push   $0xe
  10039b:	6a 22                	push   $0x22
  10039d:	e8 21 fd ff ff       	call   1000c3 <init_igate>
  1003a2:	83 c4 10             	add    $0x10,%esp
  1003a5:	6a 00                	push   $0x0
  1003a7:	c7 c0 c0 06 10 00    	mov    $0x1006c0,%eax
  1003ad:	50                   	push   %eax
  1003ae:	6a 0e                	push   $0xe
  1003b0:	6a 23                	push   $0x23
  1003b2:	e8 0c fd ff ff       	call   1000c3 <init_igate>
  1003b7:	83 c4 10             	add    $0x10,%esp
  1003ba:	6a 00                	push   $0x0
  1003bc:	c7 c0 f0 06 10 00    	mov    $0x1006f0,%eax
  1003c2:	50                   	push   %eax
  1003c3:	6a 0e                	push   $0xe
  1003c5:	6a 24                	push   $0x24
  1003c7:	e8 f7 fc ff ff       	call   1000c3 <init_igate>
  1003cc:	83 c4 10             	add    $0x10,%esp
  1003cf:	6a 00                	push   $0x0
  1003d1:	c7 c0 20 07 10 00    	mov    $0x100720,%eax
  1003d7:	50                   	push   %eax
  1003d8:	6a 0e                	push   $0xe
  1003da:	6a 25                	push   $0x25
  1003dc:	e8 e2 fc ff ff       	call   1000c3 <init_igate>
  1003e1:	83 c4 10             	add    $0x10,%esp
  1003e4:	6a 00                	push   $0x0
  1003e6:	c7 c0 50 07 10 00    	mov    $0x100750,%eax
  1003ec:	50                   	push   %eax
  1003ed:	6a 0e                	push   $0xe
  1003ef:	6a 26                	push   $0x26
  1003f1:	e8 cd fc ff ff       	call   1000c3 <init_igate>
  1003f6:	83 c4 10             	add    $0x10,%esp
  1003f9:	6a 00                	push   $0x0
  1003fb:	c7 c0 80 07 10 00    	mov    $0x100780,%eax
  100401:	50                   	push   %eax
  100402:	6a 0e                	push   $0xe
  100404:	6a 27                	push   $0x27
  100406:	e8 b8 fc ff ff       	call   1000c3 <init_igate>
  10040b:	83 c4 10             	add    $0x10,%esp
  10040e:	6a 00                	push   $0x0
  100410:	c7 c0 b0 07 10 00    	mov    $0x1007b0,%eax
  100416:	50                   	push   %eax
  100417:	6a 0e                	push   $0xe
  100419:	6a 28                	push   $0x28
  10041b:	e8 a3 fc ff ff       	call   1000c3 <init_igate>
  100420:	83 c4 10             	add    $0x10,%esp
  100423:	6a 00                	push   $0x0
  100425:	c7 c0 e0 07 10 00    	mov    $0x1007e0,%eax
  10042b:	50                   	push   %eax
  10042c:	6a 0e                	push   $0xe
  10042e:	6a 29                	push   $0x29
  100430:	e8 8e fc ff ff       	call   1000c3 <init_igate>
  100435:	83 c4 10             	add    $0x10,%esp
  100438:	6a 00                	push   $0x0
  10043a:	c7 c0 10 08 10 00    	mov    $0x100810,%eax
  100440:	50                   	push   %eax
  100441:	6a 0e                	push   $0xe
  100443:	6a 2a                	push   $0x2a
  100445:	e8 79 fc ff ff       	call   1000c3 <init_igate>
  10044a:	83 c4 10             	add    $0x10,%esp
  10044d:	6a 00                	push   $0x0
  10044f:	c7 c0 40 08 10 00    	mov    $0x100840,%eax
  100455:	50                   	push   %eax
  100456:	6a 0e                	push   $0xe
  100458:	6a 2b                	push   $0x2b
  10045a:	e8 64 fc ff ff       	call   1000c3 <init_igate>
  10045f:	83 c4 10             	add    $0x10,%esp
  100462:	6a 00                	push   $0x0
  100464:	c7 c0 70 08 10 00    	mov    $0x100870,%eax
  10046a:	50                   	push   %eax
  10046b:	6a 0e                	push   $0xe
  10046d:	6a 2c                	push   $0x2c
  10046f:	e8 4f fc ff ff       	call   1000c3 <init_igate>
  100474:	83 c4 10             	add    $0x10,%esp
  100477:	6a 00                	push   $0x0
  100479:	c7 c0 a0 08 10 00    	mov    $0x1008a0,%eax
  10047f:	50                   	push   %eax
  100480:	6a 0e                	push   $0xe
  100482:	6a 2d                	push   $0x2d
  100484:	e8 3a fc ff ff       	call   1000c3 <init_igate>
  100489:	83 c4 10             	add    $0x10,%esp
  10048c:	6a 00                	push   $0x0
  10048e:	c7 c0 d0 08 10 00    	mov    $0x1008d0,%eax
  100494:	50                   	push   %eax
  100495:	6a 0e                	push   $0xe
  100497:	6a 2e                	push   $0x2e
  100499:	e8 25 fc ff ff       	call   1000c3 <init_igate>
  10049e:	83 c4 10             	add    $0x10,%esp
  1004a1:	6a 00                	push   $0x0
  1004a3:	c7 c0 00 09 10 00    	mov    $0x100900,%eax
  1004a9:	50                   	push   %eax
  1004aa:	6a 0e                	push   $0xe
  1004ac:	6a 2f                	push   $0x2f
  1004ae:	e8 10 fc ff ff       	call   1000c3 <init_igate>
  1004b3:	83 c4 10             	add    $0x10,%esp
  1004b6:	6a 03                	push   $0x3
  1004b8:	c7 c0 30 09 10 00    	mov    $0x100930,%eax
  1004be:	50                   	push   %eax
  1004bf:	6a 0e                	push   $0xe
  1004c1:	68 90 00 00 00       	push   $0x90
  1004c6:	e8 f8 fb ff ff       	call   1000c3 <init_igate>
  1004cb:	83 c4 10             	add    $0x10,%esp
  1004ce:	90                   	nop
  1004cf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  1004d2:	c9                   	leave  
  1004d3:	c3                   	ret    

001004d4 <init_proc_ldts>:
  1004d4:	55                   	push   %ebp
  1004d5:	89 e5                	mov    %esp,%ebp
  1004d7:	53                   	push   %ebx
  1004d8:	83 ec 14             	sub    $0x14,%esp
  1004db:	e8 e3 00 00 00       	call   1005c3 <__x86.get_pc_thunk.bx>
  1004e0:	81 c3 20 2b 01 00    	add    $0x12b20,%ebx
  1004e6:	c7 c0 c0 cc 12 00    	mov    $0x12ccc0,%eax
  1004ec:	89 45 f4             	mov    %eax,-0xc(%ebp)
  1004ef:	66 c7 45 f2 28 00    	movw   $0x28,-0xe(%ebp)
  1004f5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
  1004fc:	eb 3e                	jmp    10053c <init_proc_ldts+0x68>
  1004fe:	83 ec 0c             	sub    $0xc,%esp
  100501:	6a 10                	push   $0x10
  100503:	e8 4c 07 00 00       	call   100c54 <seg2phys>
  100508:	83 c4 10             	add    $0x10,%esp
  10050b:	89 c2                	mov    %eax,%edx
  10050d:	8b 45 f4             	mov    -0xc(%ebp),%eax
  100510:	83 c0 4c             	add    $0x4c,%eax
  100513:	01 d0                	add    %edx,%eax
  100515:	68 82 00 00 00       	push   $0x82
  10051a:	6a 0f                	push   $0xf
  10051c:	50                   	push   %eax
  10051d:	c7 c0 20 40 11 00    	mov    $0x114020,%eax
  100523:	8d 40 28             	lea    0x28(%eax),%eax
  100526:	50                   	push   %eax
  100527:	e8 b1 06 00 00       	call   100bdd <set_desc>
  10052c:	83 c4 10             	add    $0x10,%esp
  10052f:	83 45 f4 70          	addl   $0x70,-0xc(%ebp)
  100533:	66 83 45 f2 08       	addw   $0x8,-0xe(%ebp)
  100538:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
  10053c:	83 7d ec 02          	cmpl   $0x2,-0x14(%ebp)
  100540:	7e bc                	jle    1004fe <init_proc_ldts+0x2a>
  100542:	90                   	nop
  100543:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100546:	c9                   	leave  
  100547:	c3                   	ret    

00100548 <init_tss>:
  100548:	55                   	push   %ebp
  100549:	89 e5                	mov    %esp,%ebp
  10054b:	53                   	push   %ebx
  10054c:	83 ec 04             	sub    $0x4,%esp
  10054f:	e8 6f 00 00 00       	call   1005c3 <__x86.get_pc_thunk.bx>
  100554:	81 c3 ac 2a 01 00    	add    $0x12aac,%ebx
  10055a:	83 ec 04             	sub    $0x4,%esp
  10055d:	6a 68                	push   $0x68
  10055f:	6a 00                	push   $0x0
  100561:	c7 c0 20 44 11 00    	mov    $0x114420,%eax
  100567:	50                   	push   %eax
  100568:	e8 4a 20 00 00       	call   1025b7 <memset>
  10056d:	83 c4 10             	add    $0x10,%esp
  100570:	c7 c0 20 44 11 00    	mov    $0x114420,%eax
  100576:	66 c7 40 08 10 00    	movw   $0x10,0x8(%eax)
  10057c:	c7 c0 20 44 11 00    	mov    $0x114420,%eax
  100582:	66 c7 40 66 68 00    	movw   $0x68,0x66(%eax)
  100588:	83 ec 0c             	sub    $0xc,%esp
  10058b:	6a 10                	push   $0x10
  10058d:	e8 c2 06 00 00       	call   100c54 <seg2phys>
  100592:	83 c4 10             	add    $0x10,%esp
  100595:	89 c2                	mov    %eax,%edx
  100597:	c7 c0 20 44 11 00    	mov    $0x114420,%eax
  10059d:	01 d0                	add    %edx,%eax
  10059f:	68 89 00 00 00       	push   $0x89
  1005a4:	6a 67                	push   $0x67
  1005a6:	50                   	push   %eax
  1005a7:	c7 c0 20 40 11 00    	mov    $0x114020,%eax
  1005ad:	8d 40 20             	lea    0x20(%eax),%eax
  1005b0:	50                   	push   %eax
  1005b1:	e8 27 06 00 00       	call   100bdd <set_desc>
  1005b6:	83 c4 10             	add    $0x10,%esp
  1005b9:	90                   	nop
  1005ba:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  1005bd:	c9                   	leave  
  1005be:	c3                   	ret    

001005bf <__x86.get_pc_thunk.ax>:
  1005bf:	8b 04 24             	mov    (%esp),%eax
  1005c2:	c3                   	ret    

001005c3 <__x86.get_pc_thunk.bx>:
  1005c3:	8b 1c 24             	mov    (%esp),%ebx
  1005c6:	c3                   	ret    
  1005c7:	66 90                	xchg   %ax,%ax
  1005c9:	66 90                	xchg   %ax,%ax
  1005cb:	66 90                	xchg   %ax,%ax
  1005cd:	66 90                	xchg   %ax,%ax
  1005cf:	90                   	nop

001005d0 <divide_error>:
  1005d0:	6a ff                	push   $0xffffffff
  1005d2:	6a 00                	push   $0x0
  1005d4:	eb 4e                	jmp    100624 <exception>

001005d6 <single_step_exception>:
  1005d6:	6a ff                	push   $0xffffffff
  1005d8:	6a 01                	push   $0x1
  1005da:	eb 48                	jmp    100624 <exception>

001005dc <nmi>:
  1005dc:	6a ff                	push   $0xffffffff
  1005de:	6a 02                	push   $0x2
  1005e0:	eb 42                	jmp    100624 <exception>

001005e2 <breakpoint_exception>:
  1005e2:	6a ff                	push   $0xffffffff
  1005e4:	6a 03                	push   $0x3
  1005e6:	eb 3c                	jmp    100624 <exception>

001005e8 <overflow>:
  1005e8:	6a ff                	push   $0xffffffff
  1005ea:	6a 04                	push   $0x4
  1005ec:	eb 36                	jmp    100624 <exception>

001005ee <bounds_check>:
  1005ee:	6a ff                	push   $0xffffffff
  1005f0:	6a 05                	push   $0x5
  1005f2:	eb 30                	jmp    100624 <exception>

001005f4 <inval_opcode>:
  1005f4:	6a ff                	push   $0xffffffff
  1005f6:	6a 06                	push   $0x6
  1005f8:	eb 2a                	jmp    100624 <exception>

001005fa <copr_not_available>:
  1005fa:	6a ff                	push   $0xffffffff
  1005fc:	6a 07                	push   $0x7
  1005fe:	eb 24                	jmp    100624 <exception>

00100600 <double_fault>:
  100600:	6a 08                	push   $0x8
  100602:	eb 20                	jmp    100624 <exception>

00100604 <copr_seg_overrun>:
  100604:	6a ff                	push   $0xffffffff
  100606:	6a 09                	push   $0x9
  100608:	eb 1a                	jmp    100624 <exception>

0010060a <inval_tss>:
  10060a:	6a 0a                	push   $0xa
  10060c:	eb 16                	jmp    100624 <exception>

0010060e <segment_not_present>:
  10060e:	6a 0b                	push   $0xb
  100610:	eb 12                	jmp    100624 <exception>

00100612 <stack_exception>:
  100612:	6a 0c                	push   $0xc
  100614:	eb 0e                	jmp    100624 <exception>

00100616 <general_protection>:
  100616:	6a 0d                	push   $0xd
  100618:	eb 0a                	jmp    100624 <exception>

0010061a <page_fault>:
  10061a:	6a 0e                	push   $0xe
  10061c:	eb 06                	jmp    100624 <exception>

0010061e <copr_error>:
  10061e:	6a ff                	push   $0xffffffff
  100620:	6a 10                	push   $0x10
  100622:	eb 00                	jmp    100624 <exception>

00100624 <exception>:
  100624:	e8 7b 03 00 00       	call   1009a4 <exception_handler>
  100629:	83 c4 08             	add    $0x8,%esp
  10062c:	f4                   	hlt    
  10062d:	90                   	nop
  10062e:	90                   	nop
  10062f:	90                   	nop

00100630 <hwint00>:
  100630:	e8 ab 06 00 00       	call   100ce0 <save>
  100635:	e4 21                	in     $0x21,%al
  100637:	0c 01                	or     $0x1,%al
  100639:	e6 21                	out    %al,$0x21
  10063b:	b0 20                	mov    $0x20,%al
  10063d:	e6 20                	out    %al,$0x20
  10063f:	fb                   	sti    
  100640:	6a 00                	push   $0x0
  100642:	ff 15 80 30 11 00    	call   *0x113080
  100648:	59                   	pop    %ecx
  100649:	fa                   	cli    
  10064a:	e4 21                	in     $0x21,%al
  10064c:	24 fe                	and    $0xfe,%al
  10064e:	e6 21                	out    %al,$0x21
  100650:	c3                   	ret    
  100651:	90                   	nop
  100652:	90                   	nop
  100653:	90                   	nop
  100654:	90                   	nop
  100655:	90                   	nop
  100656:	90                   	nop
  100657:	90                   	nop
  100658:	90                   	nop
  100659:	90                   	nop
  10065a:	90                   	nop
  10065b:	90                   	nop
  10065c:	90                   	nop
  10065d:	90                   	nop
  10065e:	90                   	nop
  10065f:	90                   	nop

00100660 <hwint01>:
  100660:	e8 7b 06 00 00       	call   100ce0 <save>
  100665:	e4 21                	in     $0x21,%al
  100667:	0c 02                	or     $0x2,%al
  100669:	e6 21                	out    %al,$0x21
  10066b:	b0 20                	mov    $0x20,%al
  10066d:	e6 20                	out    %al,$0x20
  10066f:	fb                   	sti    
  100670:	6a 01                	push   $0x1
  100672:	ff 15 84 30 11 00    	call   *0x113084
  100678:	59                   	pop    %ecx
  100679:	fa                   	cli    
  10067a:	e4 21                	in     $0x21,%al
  10067c:	24 fd                	and    $0xfd,%al
  10067e:	e6 21                	out    %al,$0x21
  100680:	c3                   	ret    
  100681:	90                   	nop
  100682:	90                   	nop
  100683:	90                   	nop
  100684:	90                   	nop
  100685:	90                   	nop
  100686:	90                   	nop
  100687:	90                   	nop
  100688:	90                   	nop
  100689:	90                   	nop
  10068a:	90                   	nop
  10068b:	90                   	nop
  10068c:	90                   	nop
  10068d:	90                   	nop
  10068e:	90                   	nop
  10068f:	90                   	nop

00100690 <hwint02>:
  100690:	e8 4b 06 00 00       	call   100ce0 <save>
  100695:	e4 21                	in     $0x21,%al
  100697:	0c 04                	or     $0x4,%al
  100699:	e6 21                	out    %al,$0x21
  10069b:	b0 20                	mov    $0x20,%al
  10069d:	e6 20                	out    %al,$0x20
  10069f:	fb                   	sti    
  1006a0:	6a 02                	push   $0x2
  1006a2:	ff 15 88 30 11 00    	call   *0x113088
  1006a8:	59                   	pop    %ecx
  1006a9:	fa                   	cli    
  1006aa:	e4 21                	in     $0x21,%al
  1006ac:	24 fb                	and    $0xfb,%al
  1006ae:	e6 21                	out    %al,$0x21
  1006b0:	c3                   	ret    
  1006b1:	90                   	nop
  1006b2:	90                   	nop
  1006b3:	90                   	nop
  1006b4:	90                   	nop
  1006b5:	90                   	nop
  1006b6:	90                   	nop
  1006b7:	90                   	nop
  1006b8:	90                   	nop
  1006b9:	90                   	nop
  1006ba:	90                   	nop
  1006bb:	90                   	nop
  1006bc:	90                   	nop
  1006bd:	90                   	nop
  1006be:	90                   	nop
  1006bf:	90                   	nop

001006c0 <hwint03>:
  1006c0:	e8 1b 06 00 00       	call   100ce0 <save>
  1006c5:	e4 21                	in     $0x21,%al
  1006c7:	0c 08                	or     $0x8,%al
  1006c9:	e6 21                	out    %al,$0x21
  1006cb:	b0 20                	mov    $0x20,%al
  1006cd:	e6 20                	out    %al,$0x20
  1006cf:	fb                   	sti    
  1006d0:	6a 03                	push   $0x3
  1006d2:	ff 15 8c 30 11 00    	call   *0x11308c
  1006d8:	59                   	pop    %ecx
  1006d9:	fa                   	cli    
  1006da:	e4 21                	in     $0x21,%al
  1006dc:	24 f7                	and    $0xf7,%al
  1006de:	e6 21                	out    %al,$0x21
  1006e0:	c3                   	ret    
  1006e1:	90                   	nop
  1006e2:	90                   	nop
  1006e3:	90                   	nop
  1006e4:	90                   	nop
  1006e5:	90                   	nop
  1006e6:	90                   	nop
  1006e7:	90                   	nop
  1006e8:	90                   	nop
  1006e9:	90                   	nop
  1006ea:	90                   	nop
  1006eb:	90                   	nop
  1006ec:	90                   	nop
  1006ed:	90                   	nop
  1006ee:	90                   	nop
  1006ef:	90                   	nop

001006f0 <hwint04>:
  1006f0:	e8 eb 05 00 00       	call   100ce0 <save>
  1006f5:	e4 21                	in     $0x21,%al
  1006f7:	0c 10                	or     $0x10,%al
  1006f9:	e6 21                	out    %al,$0x21
  1006fb:	b0 20                	mov    $0x20,%al
  1006fd:	e6 20                	out    %al,$0x20
  1006ff:	fb                   	sti    
  100700:	6a 04                	push   $0x4
  100702:	ff 15 90 30 11 00    	call   *0x113090
  100708:	59                   	pop    %ecx
  100709:	fa                   	cli    
  10070a:	e4 21                	in     $0x21,%al
  10070c:	24 ef                	and    $0xef,%al
  10070e:	e6 21                	out    %al,$0x21
  100710:	c3                   	ret    
  100711:	90                   	nop
  100712:	90                   	nop
  100713:	90                   	nop
  100714:	90                   	nop
  100715:	90                   	nop
  100716:	90                   	nop
  100717:	90                   	nop
  100718:	90                   	nop
  100719:	90                   	nop
  10071a:	90                   	nop
  10071b:	90                   	nop
  10071c:	90                   	nop
  10071d:	90                   	nop
  10071e:	90                   	nop
  10071f:	90                   	nop

00100720 <hwint05>:
  100720:	e8 bb 05 00 00       	call   100ce0 <save>
  100725:	e4 21                	in     $0x21,%al
  100727:	0c 20                	or     $0x20,%al
  100729:	e6 21                	out    %al,$0x21
  10072b:	b0 20                	mov    $0x20,%al
  10072d:	e6 20                	out    %al,$0x20
  10072f:	fb                   	sti    
  100730:	6a 05                	push   $0x5
  100732:	ff 15 94 30 11 00    	call   *0x113094
  100738:	59                   	pop    %ecx
  100739:	fa                   	cli    
  10073a:	e4 21                	in     $0x21,%al
  10073c:	24 df                	and    $0xdf,%al
  10073e:	e6 21                	out    %al,$0x21
  100740:	c3                   	ret    
  100741:	90                   	nop
  100742:	90                   	nop
  100743:	90                   	nop
  100744:	90                   	nop
  100745:	90                   	nop
  100746:	90                   	nop
  100747:	90                   	nop
  100748:	90                   	nop
  100749:	90                   	nop
  10074a:	90                   	nop
  10074b:	90                   	nop
  10074c:	90                   	nop
  10074d:	90                   	nop
  10074e:	90                   	nop
  10074f:	90                   	nop

00100750 <hwint06>:
  100750:	e8 8b 05 00 00       	call   100ce0 <save>
  100755:	e4 21                	in     $0x21,%al
  100757:	0c 40                	or     $0x40,%al
  100759:	e6 21                	out    %al,$0x21
  10075b:	b0 20                	mov    $0x20,%al
  10075d:	e6 20                	out    %al,$0x20
  10075f:	fb                   	sti    
  100760:	6a 06                	push   $0x6
  100762:	ff 15 98 30 11 00    	call   *0x113098
  100768:	59                   	pop    %ecx
  100769:	fa                   	cli    
  10076a:	e4 21                	in     $0x21,%al
  10076c:	24 bf                	and    $0xbf,%al
  10076e:	e6 21                	out    %al,$0x21
  100770:	c3                   	ret    
  100771:	90                   	nop
  100772:	90                   	nop
  100773:	90                   	nop
  100774:	90                   	nop
  100775:	90                   	nop
  100776:	90                   	nop
  100777:	90                   	nop
  100778:	90                   	nop
  100779:	90                   	nop
  10077a:	90                   	nop
  10077b:	90                   	nop
  10077c:	90                   	nop
  10077d:	90                   	nop
  10077e:	90                   	nop
  10077f:	90                   	nop

00100780 <hwint07>:
  100780:	e8 5b 05 00 00       	call   100ce0 <save>
  100785:	e4 21                	in     $0x21,%al
  100787:	0c 80                	or     $0x80,%al
  100789:	e6 21                	out    %al,$0x21
  10078b:	b0 20                	mov    $0x20,%al
  10078d:	e6 20                	out    %al,$0x20
  10078f:	fb                   	sti    
  100790:	6a 07                	push   $0x7
  100792:	ff 15 9c 30 11 00    	call   *0x11309c
  100798:	59                   	pop    %ecx
  100799:	fa                   	cli    
  10079a:	e4 21                	in     $0x21,%al
  10079c:	24 7f                	and    $0x7f,%al
  10079e:	e6 21                	out    %al,$0x21
  1007a0:	c3                   	ret    
  1007a1:	90                   	nop
  1007a2:	90                   	nop
  1007a3:	90                   	nop
  1007a4:	90                   	nop
  1007a5:	90                   	nop
  1007a6:	90                   	nop
  1007a7:	90                   	nop
  1007a8:	90                   	nop
  1007a9:	90                   	nop
  1007aa:	90                   	nop
  1007ab:	90                   	nop
  1007ac:	90                   	nop
  1007ad:	90                   	nop
  1007ae:	90                   	nop
  1007af:	90                   	nop

001007b0 <hwint08>:
  1007b0:	e8 2b 05 00 00       	call   100ce0 <save>
  1007b5:	e4 a1                	in     $0xa1,%al
  1007b7:	0c 01                	or     $0x1,%al
  1007b9:	e6 a1                	out    %al,$0xa1
  1007bb:	b0 20                	mov    $0x20,%al
  1007bd:	e6 20                	out    %al,$0x20
  1007bf:	90                   	nop
  1007c0:	e6 a0                	out    %al,$0xa0
  1007c2:	90                   	nop
  1007c3:	fb                   	sti    
  1007c4:	6a 08                	push   $0x8
  1007c6:	ff 15 a0 30 11 00    	call   *0x1130a0
  1007cc:	59                   	pop    %ecx
  1007cd:	fa                   	cli    
  1007ce:	e4 a1                	in     $0xa1,%al
  1007d0:	24 fe                	and    $0xfe,%al
  1007d2:	e6 a1                	out    %al,$0xa1
  1007d4:	c3                   	ret    
  1007d5:	90                   	nop
  1007d6:	90                   	nop
  1007d7:	90                   	nop
  1007d8:	90                   	nop
  1007d9:	90                   	nop
  1007da:	90                   	nop
  1007db:	90                   	nop
  1007dc:	90                   	nop
  1007dd:	90                   	nop
  1007de:	90                   	nop
  1007df:	90                   	nop

001007e0 <hwint09>:
  1007e0:	e8 fb 04 00 00       	call   100ce0 <save>
  1007e5:	e4 a1                	in     $0xa1,%al
  1007e7:	0c 02                	or     $0x2,%al
  1007e9:	e6 a1                	out    %al,$0xa1
  1007eb:	b0 20                	mov    $0x20,%al
  1007ed:	e6 20                	out    %al,$0x20
  1007ef:	90                   	nop
  1007f0:	e6 a0                	out    %al,$0xa0
  1007f2:	90                   	nop
  1007f3:	fb                   	sti    
  1007f4:	6a 09                	push   $0x9
  1007f6:	ff 15 a4 30 11 00    	call   *0x1130a4
  1007fc:	59                   	pop    %ecx
  1007fd:	fa                   	cli    
  1007fe:	e4 a1                	in     $0xa1,%al
  100800:	24 fd                	and    $0xfd,%al
  100802:	e6 a1                	out    %al,$0xa1
  100804:	c3                   	ret    
  100805:	90                   	nop
  100806:	90                   	nop
  100807:	90                   	nop
  100808:	90                   	nop
  100809:	90                   	nop
  10080a:	90                   	nop
  10080b:	90                   	nop
  10080c:	90                   	nop
  10080d:	90                   	nop
  10080e:	90                   	nop
  10080f:	90                   	nop

00100810 <hwint10>:
  100810:	e8 cb 04 00 00       	call   100ce0 <save>
  100815:	e4 a1                	in     $0xa1,%al
  100817:	0c 04                	or     $0x4,%al
  100819:	e6 a1                	out    %al,$0xa1
  10081b:	b0 20                	mov    $0x20,%al
  10081d:	e6 20                	out    %al,$0x20
  10081f:	90                   	nop
  100820:	e6 a0                	out    %al,$0xa0
  100822:	90                   	nop
  100823:	fb                   	sti    
  100824:	6a 0a                	push   $0xa
  100826:	ff 15 a8 30 11 00    	call   *0x1130a8
  10082c:	59                   	pop    %ecx
  10082d:	fa                   	cli    
  10082e:	e4 a1                	in     $0xa1,%al
  100830:	24 fb                	and    $0xfb,%al
  100832:	e6 a1                	out    %al,$0xa1
  100834:	c3                   	ret    
  100835:	90                   	nop
  100836:	90                   	nop
  100837:	90                   	nop
  100838:	90                   	nop
  100839:	90                   	nop
  10083a:	90                   	nop
  10083b:	90                   	nop
  10083c:	90                   	nop
  10083d:	90                   	nop
  10083e:	90                   	nop
  10083f:	90                   	nop

00100840 <hwint11>:
  100840:	e8 9b 04 00 00       	call   100ce0 <save>
  100845:	e4 a1                	in     $0xa1,%al
  100847:	0c 08                	or     $0x8,%al
  100849:	e6 a1                	out    %al,$0xa1
  10084b:	b0 20                	mov    $0x20,%al
  10084d:	e6 20                	out    %al,$0x20
  10084f:	90                   	nop
  100850:	e6 a0                	out    %al,$0xa0
  100852:	90                   	nop
  100853:	fb                   	sti    
  100854:	6a 0b                	push   $0xb
  100856:	ff 15 ac 30 11 00    	call   *0x1130ac
  10085c:	59                   	pop    %ecx
  10085d:	fa                   	cli    
  10085e:	e4 a1                	in     $0xa1,%al
  100860:	24 f7                	and    $0xf7,%al
  100862:	e6 a1                	out    %al,$0xa1
  100864:	c3                   	ret    
  100865:	90                   	nop
  100866:	90                   	nop
  100867:	90                   	nop
  100868:	90                   	nop
  100869:	90                   	nop
  10086a:	90                   	nop
  10086b:	90                   	nop
  10086c:	90                   	nop
  10086d:	90                   	nop
  10086e:	90                   	nop
  10086f:	90                   	nop

00100870 <hwint12>:
  100870:	e8 6b 04 00 00       	call   100ce0 <save>
  100875:	e4 a1                	in     $0xa1,%al
  100877:	0c 10                	or     $0x10,%al
  100879:	e6 a1                	out    %al,$0xa1
  10087b:	b0 20                	mov    $0x20,%al
  10087d:	e6 20                	out    %al,$0x20
  10087f:	90                   	nop
  100880:	e6 a0                	out    %al,$0xa0
  100882:	90                   	nop
  100883:	fb                   	sti    
  100884:	6a 0c                	push   $0xc
  100886:	ff 15 b0 30 11 00    	call   *0x1130b0
  10088c:	59                   	pop    %ecx
  10088d:	fa                   	cli    
  10088e:	e4 a1                	in     $0xa1,%al
  100890:	24 ef                	and    $0xef,%al
  100892:	e6 a1                	out    %al,$0xa1
  100894:	c3                   	ret    
  100895:	90                   	nop
  100896:	90                   	nop
  100897:	90                   	nop
  100898:	90                   	nop
  100899:	90                   	nop
  10089a:	90                   	nop
  10089b:	90                   	nop
  10089c:	90                   	nop
  10089d:	90                   	nop
  10089e:	90                   	nop
  10089f:	90                   	nop

001008a0 <hwint13>:
  1008a0:	e8 3b 04 00 00       	call   100ce0 <save>
  1008a5:	e4 a1                	in     $0xa1,%al
  1008a7:	0c 20                	or     $0x20,%al
  1008a9:	e6 a1                	out    %al,$0xa1
  1008ab:	b0 20                	mov    $0x20,%al
  1008ad:	e6 20                	out    %al,$0x20
  1008af:	90                   	nop
  1008b0:	e6 a0                	out    %al,$0xa0
  1008b2:	90                   	nop
  1008b3:	fb                   	sti    
  1008b4:	6a 0d                	push   $0xd
  1008b6:	ff 15 b4 30 11 00    	call   *0x1130b4
  1008bc:	59                   	pop    %ecx
  1008bd:	fa                   	cli    
  1008be:	e4 a1                	in     $0xa1,%al
  1008c0:	24 df                	and    $0xdf,%al
  1008c2:	e6 a1                	out    %al,$0xa1
  1008c4:	c3                   	ret    
  1008c5:	90                   	nop
  1008c6:	90                   	nop
  1008c7:	90                   	nop
  1008c8:	90                   	nop
  1008c9:	90                   	nop
  1008ca:	90                   	nop
  1008cb:	90                   	nop
  1008cc:	90                   	nop
  1008cd:	90                   	nop
  1008ce:	90                   	nop
  1008cf:	90                   	nop

001008d0 <hwint14>:
  1008d0:	e8 0b 04 00 00       	call   100ce0 <save>
  1008d5:	e4 a1                	in     $0xa1,%al
  1008d7:	0c 40                	or     $0x40,%al
  1008d9:	e6 a1                	out    %al,$0xa1
  1008db:	b0 20                	mov    $0x20,%al
  1008dd:	e6 20                	out    %al,$0x20
  1008df:	90                   	nop
  1008e0:	e6 a0                	out    %al,$0xa0
  1008e2:	90                   	nop
  1008e3:	fb                   	sti    
  1008e4:	6a 0e                	push   $0xe
  1008e6:	ff 15 b8 30 11 00    	call   *0x1130b8
  1008ec:	59                   	pop    %ecx
  1008ed:	fa                   	cli    
  1008ee:	e4 a1                	in     $0xa1,%al
  1008f0:	24 bf                	and    $0xbf,%al
  1008f2:	e6 a1                	out    %al,$0xa1
  1008f4:	c3                   	ret    
  1008f5:	90                   	nop
  1008f6:	90                   	nop
  1008f7:	90                   	nop
  1008f8:	90                   	nop
  1008f9:	90                   	nop
  1008fa:	90                   	nop
  1008fb:	90                   	nop
  1008fc:	90                   	nop
  1008fd:	90                   	nop
  1008fe:	90                   	nop
  1008ff:	90                   	nop

00100900 <hwint15>:
  100900:	e8 db 03 00 00       	call   100ce0 <save>
  100905:	e4 a1                	in     $0xa1,%al
  100907:	0c 80                	or     $0x80,%al
  100909:	e6 a1                	out    %al,$0xa1
  10090b:	b0 20                	mov    $0x20,%al
  10090d:	e6 20                	out    %al,$0x20
  10090f:	90                   	nop
  100910:	e6 a0                	out    %al,$0xa0
  100912:	90                   	nop
  100913:	fb                   	sti    
  100914:	6a 0f                	push   $0xf
  100916:	ff 15 bc 30 11 00    	call   *0x1130bc
  10091c:	59                   	pop    %ecx
  10091d:	fa                   	cli    
  10091e:	e4 a1                	in     $0xa1,%al
  100920:	24 7f                	and    $0x7f,%al
  100922:	e6 a1                	out    %al,$0xa1
  100924:	c3                   	ret    
  100925:	90                   	nop
  100926:	90                   	nop
  100927:	90                   	nop
  100928:	90                   	nop
  100929:	90                   	nop
  10092a:	90                   	nop
  10092b:	90                   	nop
  10092c:	90                   	nop
  10092d:	90                   	nop
  10092e:	90                   	nop
  10092f:	90                   	nop

00100930 <syscall_entry>:
  100930:	e8 ab 03 00 00       	call   100ce0 <save>
  100935:	fb                   	sti    
  100936:	ff 14 85 c0 30 11 00 	call   *0x1130c0(,%eax,4)
  10093d:	89 46 2c             	mov    %eax,0x2c(%esi)
  100940:	fa                   	cli    
  100941:	c3                   	ret    
  100942:	66 90                	xchg   %ax,%ax
  100944:	66 90                	xchg   %ax,%ax
  100946:	66 90                	xchg   %ax,%ax
  100948:	66 90                	xchg   %ax,%ax
  10094a:	66 90                	xchg   %ax,%ax
  10094c:	66 90                	xchg   %ax,%ax
  10094e:	66 90                	xchg   %ax,%ax

00100950 <disable_irq>:
  100950:	8b 4c 24 04          	mov    0x4(%esp),%ecx
  100954:	9c                   	pushf  
  100955:	fa                   	cli    
  100956:	b4 01                	mov    $0x1,%ah
  100958:	d2 c4                	rol    %cl,%ah
  10095a:	80 f9 08             	cmp    $0x8,%cl
  10095d:	73 11                	jae    100970 <disable_8>

0010095f <disable_0>:
  10095f:	e4 21                	in     $0x21,%al
  100961:	84 e0                	test   %ah,%al
  100963:	75 1c                	jne    100981 <dis_already>
  100965:	08 e0                	or     %ah,%al
  100967:	e6 21                	out    %al,$0x21
  100969:	9d                   	popf   
  10096a:	b8 01 00 00 00       	mov    $0x1,%eax
  10096f:	c3                   	ret    

00100970 <disable_8>:
  100970:	e4 a1                	in     $0xa1,%al
  100972:	84 e0                	test   %ah,%al
  100974:	75 0b                	jne    100981 <dis_already>
  100976:	08 e0                	or     %ah,%al
  100978:	e6 a1                	out    %al,$0xa1
  10097a:	9d                   	popf   
  10097b:	b8 01 00 00 00       	mov    $0x1,%eax
  100980:	c3                   	ret    

00100981 <dis_already>:
  100981:	9d                   	popf   
  100982:	31 c0                	xor    %eax,%eax
  100984:	c3                   	ret    

00100985 <enable_irq>:
  100985:	8b 4c 24 04          	mov    0x4(%esp),%ecx
  100989:	9c                   	pushf  
  10098a:	fa                   	cli    
  10098b:	b4 fe                	mov    $0xfe,%ah
  10098d:	d2 c4                	rol    %cl,%ah
  10098f:	80 f9 08             	cmp    $0x8,%cl
  100992:	73 08                	jae    10099c <enable_8>

00100994 <enable_0>:
  100994:	e4 21                	in     $0x21,%al
  100996:	20 e0                	and    %ah,%al
  100998:	e6 21                	out    %al,$0x21
  10099a:	9d                   	popf   
  10099b:	c3                   	ret    

0010099c <enable_8>:
  10099c:	e4 a1                	in     $0xa1,%al
  10099e:	20 e0                	and    %ah,%al
  1009a0:	e6 a1                	out    %al,$0xa1
  1009a2:	9d                   	popf   
  1009a3:	c3                   	ret    

001009a4 <exception_handler>:
  1009a4:	55                   	push   %ebp
  1009a5:	89 e5                	mov    %esp,%ebp
  1009a7:	56                   	push   %esi
  1009a8:	53                   	push   %ebx
  1009a9:	83 ec 10             	sub    $0x10,%esp
  1009ac:	e8 12 fc ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  1009b1:	81 c3 4f 26 01 00    	add    $0x1264f,%ebx
  1009b7:	c7 45 f4 07 00 00 00 	movl   $0x7,-0xc(%ebp)
  1009be:	c7 c0 f0 2f 11 00    	mov    $0x112ff0,%eax
  1009c4:	0f b6 40 01          	movzbl 0x1(%eax),%eax
  1009c8:	0f b6 d0             	movzbl %al,%edx
  1009cb:	89 d0                	mov    %edx,%eax
  1009cd:	c1 e0 02             	shl    $0x2,%eax
  1009d0:	01 c2                	add    %eax,%edx
  1009d2:	c7 c0 e8 cf 12 00    	mov    $0x12cfe8,%eax
  1009d8:	8b 00                	mov    (%eax),%eax
  1009da:	83 ec 0c             	sub    $0xc,%esp
  1009dd:	6a 00                	push   $0x0
  1009df:	52                   	push   %edx
  1009e0:	50                   	push   %eax
  1009e1:	6a 00                	push   $0x0
  1009e3:	6a 00                	push   $0x0
  1009e5:	e8 9e 10 00 00       	call   101a88 <fillRect>
  1009ea:	83 c4 20             	add    $0x20,%esp
  1009ed:	83 ec 08             	sub    $0x8,%esp
  1009f0:	6a 00                	push   $0x0
  1009f2:	6a 00                	push   $0x0
  1009f4:	e8 e2 12 00 00       	call   101cdb <gotoxy>
  1009f9:	83 c4 10             	add    $0x10,%esp
  1009fc:	8b 45 f4             	mov    -0xc(%ebp),%eax
  1009ff:	0f b6 c0             	movzbl %al,%eax
  100a02:	83 ec 08             	sub    $0x8,%esp
  100a05:	50                   	push   %eax
  100a06:	8d 83 c0 ff fe ff    	lea    -0x10040(%ebx),%eax
  100a0c:	50                   	push   %eax
  100a0d:	e8 17 14 00 00       	call   101e29 <printstr>
  100a12:	83 c4 10             	add    $0x10,%esp
  100a15:	8b 45 f4             	mov    -0xc(%ebp),%eax
  100a18:	0f b6 d0             	movzbl %al,%edx
  100a1b:	8b 45 08             	mov    0x8(%ebp),%eax
  100a1e:	8b 84 83 20 00 00 00 	mov    0x20(%ebx,%eax,4),%eax
  100a25:	83 ec 08             	sub    $0x8,%esp
  100a28:	52                   	push   %edx
  100a29:	50                   	push   %eax
  100a2a:	e8 fa 13 00 00       	call   101e29 <printstr>
  100a2f:	83 c4 10             	add    $0x10,%esp
  100a32:	8b 45 f4             	mov    -0xc(%ebp),%eax
  100a35:	0f b6 c0             	movzbl %al,%eax
  100a38:	83 ec 08             	sub    $0x8,%esp
  100a3b:	50                   	push   %eax
  100a3c:	8d 83 d0 ff fe ff    	lea    -0x10030(%ebx),%eax
  100a42:	50                   	push   %eax
  100a43:	e8 e1 13 00 00       	call   101e29 <printstr>
  100a48:	83 c4 10             	add    $0x10,%esp
  100a4b:	8b 45 f4             	mov    -0xc(%ebp),%eax
  100a4e:	0f b6 f0             	movzbl %al,%esi
  100a51:	8b 45 18             	mov    0x18(%ebp),%eax
  100a54:	83 ec 08             	sub    $0x8,%esp
  100a57:	6a 10                	push   $0x10
  100a59:	50                   	push   %eax
  100a5a:	e8 c8 1b 00 00       	call   102627 <itoa>
  100a5f:	83 c4 10             	add    $0x10,%esp
  100a62:	83 ec 08             	sub    $0x8,%esp
  100a65:	56                   	push   %esi
  100a66:	50                   	push   %eax
  100a67:	e8 bd 13 00 00       	call   101e29 <printstr>
  100a6c:	83 c4 10             	add    $0x10,%esp
  100a6f:	8b 45 f4             	mov    -0xc(%ebp),%eax
  100a72:	0f b6 c0             	movzbl %al,%eax
  100a75:	83 ec 08             	sub    $0x8,%esp
  100a78:	50                   	push   %eax
  100a79:	8d 83 dc ff fe ff    	lea    -0x10024(%ebx),%eax
  100a7f:	50                   	push   %eax
  100a80:	e8 a4 13 00 00       	call   101e29 <printstr>
  100a85:	83 c4 10             	add    $0x10,%esp
  100a88:	8b 45 f4             	mov    -0xc(%ebp),%eax
  100a8b:	0f b6 f0             	movzbl %al,%esi
  100a8e:	8b 45 14             	mov    0x14(%ebp),%eax
  100a91:	83 ec 08             	sub    $0x8,%esp
  100a94:	6a 10                	push   $0x10
  100a96:	50                   	push   %eax
  100a97:	e8 8b 1b 00 00       	call   102627 <itoa>
  100a9c:	83 c4 10             	add    $0x10,%esp
  100a9f:	83 ec 08             	sub    $0x8,%esp
  100aa2:	56                   	push   %esi
  100aa3:	50                   	push   %eax
  100aa4:	e8 80 13 00 00       	call   101e29 <printstr>
  100aa9:	83 c4 10             	add    $0x10,%esp
  100aac:	8b 45 f4             	mov    -0xc(%ebp),%eax
  100aaf:	0f b6 c0             	movzbl %al,%eax
  100ab2:	83 ec 08             	sub    $0x8,%esp
  100ab5:	50                   	push   %eax
  100ab6:	8d 83 e4 ff fe ff    	lea    -0x1001c(%ebx),%eax
  100abc:	50                   	push   %eax
  100abd:	e8 67 13 00 00       	call   101e29 <printstr>
  100ac2:	83 c4 10             	add    $0x10,%esp
  100ac5:	8b 45 f4             	mov    -0xc(%ebp),%eax
  100ac8:	0f b6 f0             	movzbl %al,%esi
  100acb:	8b 45 10             	mov    0x10(%ebp),%eax
  100ace:	83 ec 08             	sub    $0x8,%esp
  100ad1:	6a 10                	push   $0x10
  100ad3:	50                   	push   %eax
  100ad4:	e8 4e 1b 00 00       	call   102627 <itoa>
  100ad9:	83 c4 10             	add    $0x10,%esp
  100adc:	83 ec 08             	sub    $0x8,%esp
  100adf:	56                   	push   %esi
  100ae0:	50                   	push   %eax
  100ae1:	e8 43 13 00 00       	call   101e29 <printstr>
  100ae6:	83 c4 10             	add    $0x10,%esp
  100ae9:	83 7d 0c ff          	cmpl   $0xffffffff,0xc(%ebp)
  100aed:	74 3d                	je     100b2c <exception_handler+0x188>
  100aef:	8b 45 f4             	mov    -0xc(%ebp),%eax
  100af2:	0f b6 c0             	movzbl %al,%eax
  100af5:	83 ec 08             	sub    $0x8,%esp
  100af8:	50                   	push   %eax
  100af9:	8d 83 ed ff fe ff    	lea    -0x10013(%ebx),%eax
  100aff:	50                   	push   %eax
  100b00:	e8 24 13 00 00       	call   101e29 <printstr>
  100b05:	83 c4 10             	add    $0x10,%esp
  100b08:	8b 45 f4             	mov    -0xc(%ebp),%eax
  100b0b:	0f b6 f0             	movzbl %al,%esi
  100b0e:	8b 45 0c             	mov    0xc(%ebp),%eax
  100b11:	83 ec 08             	sub    $0x8,%esp
  100b14:	6a 10                	push   $0x10
  100b16:	50                   	push   %eax
  100b17:	e8 0b 1b 00 00       	call   102627 <itoa>
  100b1c:	83 c4 10             	add    $0x10,%esp
  100b1f:	83 ec 08             	sub    $0x8,%esp
  100b22:	56                   	push   %esi
  100b23:	50                   	push   %eax
  100b24:	e8 00 13 00 00       	call   101e29 <printstr>
  100b29:	83 c4 10             	add    $0x10,%esp
  100b2c:	90                   	nop
  100b2d:	8d 65 f8             	lea    -0x8(%ebp),%esp
  100b30:	5b                   	pop    %ebx
  100b31:	5e                   	pop    %esi
  100b32:	5d                   	pop    %ebp
  100b33:	c3                   	ret    

00100b34 <put_irq_handler>:
  100b34:	55                   	push   %ebp
  100b35:	89 e5                	mov    %esp,%ebp
  100b37:	53                   	push   %ebx
  100b38:	83 ec 04             	sub    $0x4,%esp
  100b3b:	e8 83 fa ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  100b40:	81 c3 c0 24 01 00    	add    $0x124c0,%ebx
  100b46:	83 ec 0c             	sub    $0xc,%esp
  100b49:	ff 75 08             	pushl  0x8(%ebp)
  100b4c:	e8 ff fd ff ff       	call   100950 <disable_irq>
  100b51:	83 c4 10             	add    $0x10,%esp
  100b54:	8b 45 08             	mov    0x8(%ebp),%eax
  100b57:	8b 55 0c             	mov    0xc(%ebp),%edx
  100b5a:	89 94 83 80 00 00 00 	mov    %edx,0x80(%ebx,%eax,4)
  100b61:	90                   	nop
  100b62:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100b65:	c9                   	leave  
  100b66:	c3                   	ret    

00100b67 <default_irq_handler>:
  100b67:	55                   	push   %ebp
  100b68:	89 e5                	mov    %esp,%ebp
  100b6a:	53                   	push   %ebx
  100b6b:	83 ec 04             	sub    $0x4,%esp
  100b6e:	e8 50 fa ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  100b73:	81 c3 8d 24 01 00    	add    $0x1248d,%ebx
  100b79:	83 ec 08             	sub    $0x8,%esp
  100b7c:	6a 07                	push   $0x7
  100b7e:	8d 83 fa 01 ff ff    	lea    -0xfe06(%ebx),%eax
  100b84:	50                   	push   %eax
  100b85:	e8 9f 12 00 00       	call   101e29 <printstr>
  100b8a:	83 c4 10             	add    $0x10,%esp
  100b8d:	8b 45 08             	mov    0x8(%ebp),%eax
  100b90:	83 ec 08             	sub    $0x8,%esp
  100b93:	6a 10                	push   $0x10
  100b95:	50                   	push   %eax
  100b96:	e8 8c 1a 00 00       	call   102627 <itoa>
  100b9b:	83 c4 10             	add    $0x10,%esp
  100b9e:	83 ec 08             	sub    $0x8,%esp
  100ba1:	6a 07                	push   $0x7
  100ba3:	50                   	push   %eax
  100ba4:	e8 80 12 00 00       	call   101e29 <printstr>
  100ba9:	83 c4 10             	add    $0x10,%esp
  100bac:	90                   	nop
  100bad:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100bb0:	c9                   	leave  
  100bb1:	c3                   	ret    

00100bb2 <sys_get_ticks>:
  100bb2:	55                   	push   %ebp
  100bb3:	89 e5                	mov    %esp,%ebp
  100bb5:	e8 05 fa ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  100bba:	05 46 24 01 00       	add    $0x12446,%eax
  100bbf:	c7 c0 10 ce 12 00    	mov    $0x12ce10,%eax
  100bc5:	8b 00                	mov    (%eax),%eax
  100bc7:	5d                   	pop    %ebp
  100bc8:	c3                   	ret    

00100bc9 <sys_nothing>:
  100bc9:	55                   	push   %ebp
  100bca:	89 e5                	mov    %esp,%ebp
  100bcc:	e8 ee f9 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  100bd1:	05 2f 24 01 00       	add    $0x1242f,%eax
  100bd6:	b8 00 00 00 00       	mov    $0x0,%eax
  100bdb:	5d                   	pop    %ebp
  100bdc:	c3                   	ret    

00100bdd <set_desc>:
  100bdd:	55                   	push   %ebp
  100bde:	89 e5                	mov    %esp,%ebp
  100be0:	83 ec 04             	sub    $0x4,%esp
  100be3:	e8 d7 f9 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  100be8:	05 18 24 01 00       	add    $0x12418,%eax
  100bed:	8b 45 14             	mov    0x14(%ebp),%eax
  100bf0:	66 89 45 fc          	mov    %ax,-0x4(%ebp)
  100bf4:	8b 45 10             	mov    0x10(%ebp),%eax
  100bf7:	89 c2                	mov    %eax,%edx
  100bf9:	8b 45 08             	mov    0x8(%ebp),%eax
  100bfc:	66 89 10             	mov    %dx,(%eax)
  100bff:	8b 45 0c             	mov    0xc(%ebp),%eax
  100c02:	89 c2                	mov    %eax,%edx
  100c04:	8b 45 08             	mov    0x8(%ebp),%eax
  100c07:	66 89 50 02          	mov    %dx,0x2(%eax)
  100c0b:	8b 45 0c             	mov    0xc(%ebp),%eax
  100c0e:	c1 e8 10             	shr    $0x10,%eax
  100c11:	89 c2                	mov    %eax,%edx
  100c13:	8b 45 08             	mov    0x8(%ebp),%eax
  100c16:	88 50 04             	mov    %dl,0x4(%eax)
  100c19:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax
  100c1d:	89 c2                	mov    %eax,%edx
  100c1f:	8b 45 08             	mov    0x8(%ebp),%eax
  100c22:	88 50 05             	mov    %dl,0x5(%eax)
  100c25:	8b 45 10             	mov    0x10(%ebp),%eax
  100c28:	c1 e8 10             	shr    $0x10,%eax
  100c2b:	83 e0 0f             	and    $0xf,%eax
  100c2e:	89 c2                	mov    %eax,%edx
  100c30:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax
  100c34:	66 c1 e8 08          	shr    $0x8,%ax
  100c38:	83 e0 f0             	and    $0xfffffff0,%eax
  100c3b:	09 c2                	or     %eax,%edx
  100c3d:	8b 45 08             	mov    0x8(%ebp),%eax
  100c40:	88 50 06             	mov    %dl,0x6(%eax)
  100c43:	8b 45 0c             	mov    0xc(%ebp),%eax
  100c46:	c1 e8 18             	shr    $0x18,%eax
  100c49:	89 c2                	mov    %eax,%edx
  100c4b:	8b 45 08             	mov    0x8(%ebp),%eax
  100c4e:	88 50 07             	mov    %dl,0x7(%eax)
  100c51:	90                   	nop
  100c52:	c9                   	leave  
  100c53:	c3                   	ret    

00100c54 <seg2phys>:
  100c54:	55                   	push   %ebp
  100c55:	89 e5                	mov    %esp,%ebp
  100c57:	83 ec 14             	sub    $0x14,%esp
  100c5a:	e8 60 f9 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  100c5f:	05 a1 23 01 00       	add    $0x123a1,%eax
  100c64:	8b 55 08             	mov    0x8(%ebp),%edx
  100c67:	66 89 55 ec          	mov    %dx,-0x14(%ebp)
  100c6b:	0f b7 55 ec          	movzwl -0x14(%ebp),%edx
  100c6f:	66 c1 ea 03          	shr    $0x3,%dx
  100c73:	0f b7 d2             	movzwl %dx,%edx
  100c76:	c1 e2 03             	shl    $0x3,%edx
  100c79:	c7 c0 20 40 11 00    	mov    $0x114020,%eax
  100c7f:	01 d0                	add    %edx,%eax
  100c81:	89 45 fc             	mov    %eax,-0x4(%ebp)
  100c84:	8b 45 fc             	mov    -0x4(%ebp),%eax
  100c87:	0f b6 40 07          	movzbl 0x7(%eax),%eax
  100c8b:	0f b6 c0             	movzbl %al,%eax
  100c8e:	c1 e0 18             	shl    $0x18,%eax
  100c91:	89 c2                	mov    %eax,%edx
  100c93:	8b 45 fc             	mov    -0x4(%ebp),%eax
  100c96:	0f b6 40 04          	movzbl 0x4(%eax),%eax
  100c9a:	0f b6 c0             	movzbl %al,%eax
  100c9d:	c1 e0 10             	shl    $0x10,%eax
  100ca0:	09 c2                	or     %eax,%edx
  100ca2:	8b 45 fc             	mov    -0x4(%ebp),%eax
  100ca5:	0f b7 40 02          	movzwl 0x2(%eax),%eax
  100ca9:	0f b7 c0             	movzwl %ax,%eax
  100cac:	09 d0                	or     %edx,%eax
  100cae:	c9                   	leave  
  100caf:	c3                   	ret    

00100cb0 <panic>:
  100cb0:	55                   	push   %ebp
  100cb1:	89 e5                	mov    %esp,%ebp
  100cb3:	53                   	push   %ebx
  100cb4:	83 ec 04             	sub    $0x4,%esp
  100cb7:	e8 03 f9 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  100cbc:	05 44 23 01 00       	add    $0x12344,%eax
  100cc1:	83 ec 08             	sub    $0x8,%esp
  100cc4:	6a 01                	push   $0x1
  100cc6:	8d 90 00 02 ff ff    	lea    -0xfe00(%eax),%edx
  100ccc:	52                   	push   %edx
  100ccd:	89 c3                	mov    %eax,%ebx
  100ccf:	e8 55 11 00 00       	call   101e29 <printstr>
  100cd4:	83 c4 10             	add    $0x10,%esp
  100cd7:	eb fe                	jmp    100cd7 <panic+0x27>
  100cd9:	66 90                	xchg   %ax,%ax
  100cdb:	66 90                	xchg   %ax,%ax
  100cdd:	66 90                	xchg   %ax,%ax
  100cdf:	90                   	nop

00100ce0 <save>:
  100ce0:	60                   	pusha  
  100ce1:	1e                   	push   %ds
  100ce2:	06                   	push   %es
  100ce3:	0f a0                	push   %fs
  100ce5:	0f a8                	push   %gs
  100ce7:	66 8c d2             	mov    %ss,%dx
  100cea:	8e da                	mov    %edx,%ds
  100cec:	8e c2                	mov    %edx,%es
  100cee:	89 e6                	mov    %esp,%esi
  100cf0:	ff 05 a0 cc 12 00    	incl   0x12cca0
  100cf6:	83 3d a0 cc 12 00 00 	cmpl   $0x0,0x12cca0
  100cfd:	75 0d                	jne    100d0c <save.1>
  100cff:	bc a0 3f 11 00       	mov    $0x113fa0,%esp
  100d04:	68 14 0d 10 00       	push   $0x100d14
  100d09:	ff 66 30             	jmp    *0x30(%esi)

00100d0c <save.1>:
  100d0c:	68 28 0d 10 00       	push   $0x100d28
  100d11:	ff 66 30             	jmp    *0x30(%esi)

00100d14 <restart>:
  100d14:	8b 25 a4 cc 12 00    	mov    0x12cca4,%esp
  100d1a:	0f 00 54 24 48       	lldt   0x48(%esp)
  100d1f:	8d 44 24 48          	lea    0x48(%esp),%eax
  100d23:	a3 24 44 11 00       	mov    %eax,0x114424

00100d28 <restart_reenter>:
  100d28:	ff 0d a0 cc 12 00    	decl   0x12cca0
  100d2e:	0f a9                	pop    %gs
  100d30:	0f a1                	pop    %fs
  100d32:	07                   	pop    %es
  100d33:	1f                   	pop    %ds
  100d34:	61                   	popa   
  100d35:	83 c4 04             	add    $0x4,%esp
  100d38:	cf                   	iret   

00100d39 <main>:
  100d39:	8d 4c 24 04          	lea    0x4(%esp),%ecx
  100d3d:	83 e4 f0             	and    $0xfffffff0,%esp
  100d40:	ff 71 fc             	pushl  -0x4(%ecx)
  100d43:	55                   	push   %ebp
  100d44:	89 e5                	mov    %esp,%ebp
  100d46:	53                   	push   %ebx
  100d47:	51                   	push   %ecx
  100d48:	83 ec 20             	sub    $0x20,%esp
  100d4b:	e8 73 f8 ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  100d50:	81 c3 b0 22 01 00    	add    $0x122b0,%ebx
  100d56:	e8 3c 1c 00 00       	call   102997 <mm_init>
  100d5b:	89 45 e0             	mov    %eax,-0x20(%ebp)
  100d5e:	e8 1a 0a 00 00       	call   10177d <init_video>
  100d63:	83 ec 08             	sub    $0x8,%esp
  100d66:	6a 06                	push   $0x6
  100d68:	8d 83 0e 02 ff ff    	lea    -0xfdf2(%ebx),%eax
  100d6e:	50                   	push   %eax
  100d6f:	e8 b5 10 00 00       	call   101e29 <printstr>
  100d74:	83 c4 10             	add    $0x10,%esp
  100d77:	8b 45 e0             	mov    -0x20(%ebp),%eax
  100d7a:	83 ec 08             	sub    $0x8,%esp
  100d7d:	6a 0a                	push   $0xa
  100d7f:	50                   	push   %eax
  100d80:	e8 a2 18 00 00       	call   102627 <itoa>
  100d85:	83 c4 10             	add    $0x10,%esp
  100d88:	83 ec 08             	sub    $0x8,%esp
  100d8b:	6a 06                	push   $0x6
  100d8d:	50                   	push   %eax
  100d8e:	e8 96 10 00 00       	call   101e29 <printstr>
  100d93:	83 c4 10             	add    $0x10,%esp
  100d96:	83 ec 08             	sub    $0x8,%esp
  100d99:	6a 06                	push   $0x6
  100d9b:	8d 83 18 02 ff ff    	lea    -0xfde8(%ebx),%eax
  100da1:	50                   	push   %eax
  100da2:	e8 82 10 00 00       	call   101e29 <printstr>
  100da7:	83 c4 10             	add    $0x10,%esp
  100daa:	e8 04 02 00 00       	call   100fb3 <init_clock>
  100daf:	e8 ae 02 00 00       	call   101062 <init_keyboard>
  100db4:	e8 33 05 00 00       	call   1012ec <init_mouse>
  100db9:	8d 83 00 01 00 00    	lea    0x100(%ebx),%eax
  100dbf:	89 45 f4             	mov    %eax,-0xc(%ebp)
  100dc2:	c7 c0 c0 cc 12 00    	mov    $0x12ccc0,%eax
  100dc8:	89 45 f0             	mov    %eax,-0x10(%ebp)
  100dcb:	c7 c0 a0 4c 11 00    	mov    $0x114ca0,%eax
  100dd1:	8d 80 00 80 01 00    	lea    0x18000(%eax),%eax
  100dd7:	89 45 ec             	mov    %eax,-0x14(%ebp)
  100dda:	66 c7 45 ea 28 00    	movw   $0x28,-0x16(%ebp)
  100de0:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
  100de7:	e9 2d 01 00 00       	jmp    100f19 <main+0x1e0>
  100dec:	8b 55 e4             	mov    -0x1c(%ebp),%edx
  100def:	8b 45 f0             	mov    -0x10(%ebp),%eax
  100df2:	89 50 5c             	mov    %edx,0x5c(%eax)
  100df5:	8b 45 f4             	mov    -0xc(%ebp),%eax
  100df8:	8d 50 08             	lea    0x8(%eax),%edx
  100dfb:	8b 45 f0             	mov    -0x10(%ebp),%eax
  100dfe:	83 c0 60             	add    $0x60,%eax
  100e01:	83 ec 08             	sub    $0x8,%esp
  100e04:	52                   	push   %edx
  100e05:	50                   	push   %eax
  100e06:	e8 e9 17 00 00       	call   1025f4 <strcpy>
  100e0b:	83 c4 10             	add    $0x10,%esp
  100e0e:	8b 45 f0             	mov    -0x10(%ebp),%eax
  100e11:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx
  100e15:	66 89 50 48          	mov    %dx,0x48(%eax)
  100e19:	83 ec 0c             	sub    $0xc,%esp
  100e1c:	6a 10                	push   $0x10
  100e1e:	e8 31 fe ff ff       	call   100c54 <seg2phys>
  100e23:	83 c4 10             	add    $0x10,%esp
  100e26:	89 c2                	mov    %eax,%edx
  100e28:	8b 45 f0             	mov    -0x10(%ebp),%eax
  100e2b:	83 c0 4c             	add    $0x4c,%eax
  100e2e:	01 c2                	add    %eax,%edx
  100e30:	8b 45 f0             	mov    -0x10(%ebp),%eax
  100e33:	0f b7 40 48          	movzwl 0x48(%eax),%eax
  100e37:	66 c1 e8 03          	shr    $0x3,%ax
  100e3b:	0f b7 c0             	movzwl %ax,%eax
  100e3e:	8d 0c c5 00 00 00 00 	lea    0x0(,%eax,8),%ecx
  100e45:	c7 c0 20 40 11 00    	mov    $0x114020,%eax
  100e4b:	01 c8                	add    %ecx,%eax
  100e4d:	68 82 00 00 00       	push   $0x82
  100e52:	6a 0f                	push   $0xf
  100e54:	52                   	push   %edx
  100e55:	50                   	push   %eax
  100e56:	e8 82 fd ff ff       	call   100bdd <set_desc>
  100e5b:	83 c4 10             	add    $0x10,%esp
  100e5e:	8b 45 f0             	mov    -0x10(%ebp),%eax
  100e61:	8d 50 4c             	lea    0x4c(%eax),%edx
  100e64:	83 ec 04             	sub    $0x4,%esp
  100e67:	6a 08                	push   $0x8
  100e69:	c7 c0 20 40 11 00    	mov    $0x114020,%eax
  100e6f:	8d 40 08             	lea    0x8(%eax),%eax
  100e72:	50                   	push   %eax
  100e73:	52                   	push   %edx
  100e74:	e8 ff 16 00 00       	call   102578 <memcpy>
  100e79:	83 c4 10             	add    $0x10,%esp
  100e7c:	8b 45 f0             	mov    -0x10(%ebp),%eax
  100e7f:	c6 40 51 b8          	movb   $0xb8,0x51(%eax)
  100e83:	8b 45 f0             	mov    -0x10(%ebp),%eax
  100e86:	8d 50 54             	lea    0x54(%eax),%edx
  100e89:	83 ec 04             	sub    $0x4,%esp
  100e8c:	6a 08                	push   $0x8
  100e8e:	c7 c0 20 40 11 00    	mov    $0x114020,%eax
  100e94:	8d 40 10             	lea    0x10(%eax),%eax
  100e97:	50                   	push   %eax
  100e98:	52                   	push   %edx
  100e99:	e8 da 16 00 00       	call   102578 <memcpy>
  100e9e:	83 c4 10             	add    $0x10,%esp
  100ea1:	8b 45 f0             	mov    -0x10(%ebp),%eax
  100ea4:	c6 40 59 b2          	movb   $0xb2,0x59(%eax)
  100ea8:	8b 45 f0             	mov    -0x10(%ebp),%eax
  100eab:	66 c7 40 38 05 00    	movw   $0x5,0x38(%eax)
  100eb1:	8b 45 f0             	mov    -0x10(%ebp),%eax
  100eb4:	66 c7 40 0c 0d 00    	movw   $0xd,0xc(%eax)
  100eba:	8b 45 f0             	mov    -0x10(%ebp),%eax
  100ebd:	66 c7 40 08 0d 00    	movw   $0xd,0x8(%eax)
  100ec3:	8b 45 f0             	mov    -0x10(%ebp),%eax
  100ec6:	66 c7 40 04 0d 00    	movw   $0xd,0x4(%eax)
  100ecc:	8b 45 f0             	mov    -0x10(%ebp),%eax
  100ecf:	66 c7 40 44 0d 00    	movw   $0xd,0x44(%eax)
  100ed5:	8b 45 f0             	mov    -0x10(%ebp),%eax
  100ed8:	66 c7 00 01 00       	movw   $0x1,(%eax)
  100edd:	8b 45 f4             	mov    -0xc(%ebp),%eax
  100ee0:	8b 00                	mov    (%eax),%eax
  100ee2:	89 c2                	mov    %eax,%edx
  100ee4:	8b 45 f0             	mov    -0x10(%ebp),%eax
  100ee7:	89 50 34             	mov    %edx,0x34(%eax)
  100eea:	8b 55 ec             	mov    -0x14(%ebp),%edx
  100eed:	8b 45 f0             	mov    -0x10(%ebp),%eax
  100ef0:	89 50 40             	mov    %edx,0x40(%eax)
  100ef3:	8b 45 f0             	mov    -0x10(%ebp),%eax
  100ef6:	c7 40 3c 02 12 00 00 	movl   $0x1202,0x3c(%eax)
  100efd:	8b 45 f4             	mov    -0xc(%ebp),%eax
  100f00:	8b 40 04             	mov    0x4(%eax),%eax
  100f03:	f7 d8                	neg    %eax
  100f05:	01 45 ec             	add    %eax,-0x14(%ebp)
  100f08:	83 45 f0 70          	addl   $0x70,-0x10(%ebp)
  100f0c:	83 45 f4 28          	addl   $0x28,-0xc(%ebp)
  100f10:	66 83 45 ea 08       	addw   $0x8,-0x16(%ebp)
  100f15:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
  100f19:	83 7d e4 02          	cmpl   $0x2,-0x1c(%ebp)
  100f1d:	0f 8e c9 fe ff ff    	jle    100dec <main+0xb3>
  100f23:	c7 c0 a0 cc 12 00    	mov    $0x12cca0,%eax
  100f29:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
  100f2f:	c7 c0 a4 cc 12 00    	mov    $0x12cca4,%eax
  100f35:	c7 c2 c0 cc 12 00    	mov    $0x12ccc0,%edx
  100f3b:	89 10                	mov    %edx,(%eax)
  100f3d:	e8 d2 fd ff ff       	call   100d14 <restart>
  100f42:	eb fe                	jmp    100f42 <main+0x209>

00100f44 <delay>:
  100f44:	55                   	push   %ebp
  100f45:	89 e5                	mov    %esp,%ebp
  100f47:	83 ec 10             	sub    $0x10,%esp
  100f4a:	e8 70 f6 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  100f4f:	05 b1 20 01 00       	add    $0x120b1,%eax
  100f54:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  100f5b:	eb 04                	jmp    100f61 <delay+0x1d>
  100f5d:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
  100f61:	81 7d fc 9f 86 01 00 	cmpl   $0x1869f,-0x4(%ebp)
  100f68:	7e f3                	jle    100f5d <delay+0x19>
  100f6a:	90                   	nop
  100f6b:	c9                   	leave  
  100f6c:	c3                   	ret    

00100f6d <fooA>:
  100f6d:	55                   	push   %ebp
  100f6e:	89 e5                	mov    %esp,%ebp
  100f70:	53                   	push   %ebx
  100f71:	83 ec 04             	sub    $0x4,%esp
  100f74:	e8 4a f6 ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  100f79:	81 c3 87 20 01 00    	add    $0x12087,%ebx
  100f7f:	e8 6d 01 00 00       	call   1010f1 <keyboard_read>
  100f84:	eb f9                	jmp    100f7f <fooA+0x12>

00100f86 <fooB>:
  100f86:	55                   	push   %ebp
  100f87:	89 e5                	mov    %esp,%ebp
  100f89:	53                   	push   %ebx
  100f8a:	83 ec 04             	sub    $0x4,%esp
  100f8d:	e8 31 f6 ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  100f92:	81 c3 6e 20 01 00    	add    $0x1206e,%ebx
  100f98:	e8 9c 06 00 00       	call   101639 <mouse_read>
  100f9d:	eb f9                	jmp    100f98 <fooB+0x12>

00100f9f <fooC>:
  100f9f:	55                   	push   %ebp
  100fa0:	89 e5                	mov    %esp,%ebp
  100fa2:	e8 18 f6 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  100fa7:	05 59 20 01 00       	add    $0x12059,%eax
  100fac:	e8 93 ff ff ff       	call   100f44 <delay>
  100fb1:	eb f9                	jmp    100fac <fooC+0xd>

00100fb3 <init_clock>:
  100fb3:	55                   	push   %ebp
  100fb4:	89 e5                	mov    %esp,%ebp
  100fb6:	53                   	push   %ebx
  100fb7:	83 ec 04             	sub    $0x4,%esp
  100fba:	e8 04 f6 ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  100fbf:	81 c3 41 20 01 00    	add    $0x12041,%ebx
  100fc5:	c7 c0 10 ce 12 00    	mov    $0x12ce10,%eax
  100fcb:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
  100fd1:	83 ec 08             	sub    $0x8,%esp
  100fd4:	8d 83 f8 df fe ff    	lea    -0x12008(%ebx),%eax
  100fda:	50                   	push   %eax
  100fdb:	6a 00                	push   $0x0
  100fdd:	e8 52 fb ff ff       	call   100b34 <put_irq_handler>
  100fe2:	83 c4 10             	add    $0x10,%esp
  100fe5:	83 ec 0c             	sub    $0xc,%esp
  100fe8:	6a 00                	push   $0x0
  100fea:	e8 96 f9 ff ff       	call   100985 <enable_irq>
  100fef:	83 c4 10             	add    $0x10,%esp
  100ff2:	90                   	nop
  100ff3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100ff6:	c9                   	leave  
  100ff7:	c3                   	ret    

00100ff8 <clock_handler>:
  100ff8:	55                   	push   %ebp
  100ff9:	89 e5                	mov    %esp,%ebp
  100ffb:	e8 bf f5 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  101000:	05 00 20 01 00       	add    $0x12000,%eax
  101005:	c7 c2 10 ce 12 00    	mov    $0x12ce10,%edx
  10100b:	8b 12                	mov    (%edx),%edx
  10100d:	8d 4a 01             	lea    0x1(%edx),%ecx
  101010:	c7 c2 10 ce 12 00    	mov    $0x12ce10,%edx
  101016:	89 0a                	mov    %ecx,(%edx)
  101018:	c7 c2 a0 cc 12 00    	mov    $0x12cca0,%edx
  10101e:	8b 12                	mov    (%edx),%edx
  101020:	85 d2                	test   %edx,%edx
  101022:	75 3b                	jne    10105f <clock_handler+0x67>
  101024:	c7 c2 a4 cc 12 00    	mov    $0x12cca4,%edx
  10102a:	8b 12                	mov    (%edx),%edx
  10102c:	8d 4a 70             	lea    0x70(%edx),%ecx
  10102f:	c7 c2 a4 cc 12 00    	mov    $0x12cca4,%edx
  101035:	89 0a                	mov    %ecx,(%edx)
  101037:	c7 c2 a4 cc 12 00    	mov    $0x12cca4,%edx
  10103d:	8b 0a                	mov    (%edx),%ecx
  10103f:	c7 c2 c0 cc 12 00    	mov    $0x12ccc0,%edx
  101045:	8d 92 50 01 00 00    	lea    0x150(%edx),%edx
  10104b:	39 d1                	cmp    %edx,%ecx
  10104d:	75 11                	jne    101060 <clock_handler+0x68>
  10104f:	c7 c2 a4 cc 12 00    	mov    $0x12cca4,%edx
  101055:	c7 c0 c0 cc 12 00    	mov    $0x12ccc0,%eax
  10105b:	89 02                	mov    %eax,(%edx)
  10105d:	eb 01                	jmp    101060 <clock_handler+0x68>
  10105f:	90                   	nop
  101060:	5d                   	pop    %ebp
  101061:	c3                   	ret    

00101062 <init_keyboard>:
  101062:	55                   	push   %ebp
  101063:	89 e5                	mov    %esp,%ebp
  101065:	53                   	push   %ebx
  101066:	83 ec 04             	sub    $0x4,%esp
  101069:	e8 55 f5 ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  10106e:	81 c3 92 1f 01 00    	add    $0x11f92,%ebx
  101074:	83 ec 04             	sub    $0x4,%esp
  101077:	c7 c0 20 ce 12 00    	mov    $0x12ce20,%eax
  10107d:	50                   	push   %eax
  10107e:	6a 20                	push   $0x20
  101080:	c7 c0 64 ce 12 00    	mov    $0x12ce64,%eax
  101086:	50                   	push   %eax
  101087:	e8 ca 17 00 00       	call   102856 <fifo_init>
  10108c:	83 c4 10             	add    $0x10,%esp
  10108f:	83 ec 08             	sub    $0x8,%esp
  101092:	8d 83 b6 e0 fe ff    	lea    -0x11f4a(%ebx),%eax
  101098:	50                   	push   %eax
  101099:	6a 01                	push   $0x1
  10109b:	e8 94 fa ff ff       	call   100b34 <put_irq_handler>
  1010a0:	83 c4 10             	add    $0x10,%esp
  1010a3:	83 ec 0c             	sub    $0xc,%esp
  1010a6:	6a 01                	push   $0x1
  1010a8:	e8 d8 f8 ff ff       	call   100985 <enable_irq>
  1010ad:	83 c4 10             	add    $0x10,%esp
  1010b0:	90                   	nop
  1010b1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  1010b4:	c9                   	leave  
  1010b5:	c3                   	ret    

001010b6 <keyboard_handler>:
  1010b6:	55                   	push   %ebp
  1010b7:	89 e5                	mov    %esp,%ebp
  1010b9:	53                   	push   %ebx
  1010ba:	83 ec 04             	sub    $0x4,%esp
  1010bd:	e8 01 f5 ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  1010c2:	81 c3 3e 1f 01 00    	add    $0x11f3e,%ebx
  1010c8:	83 ec 0c             	sub    $0xc,%esp
  1010cb:	6a 60                	push   $0x60
  1010cd:	e8 69 14 00 00       	call   10253b <in8>
  1010d2:	83 c4 10             	add    $0x10,%esp
  1010d5:	0f b6 c0             	movzbl %al,%eax
  1010d8:	83 ec 08             	sub    $0x8,%esp
  1010db:	50                   	push   %eax
  1010dc:	c7 c0 64 ce 12 00    	mov    $0x12ce64,%eax
  1010e2:	50                   	push   %eax
  1010e3:	e8 b5 17 00 00       	call   10289d <fifo_push>
  1010e8:	83 c4 10             	add    $0x10,%esp
  1010eb:	90                   	nop
  1010ec:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  1010ef:	c9                   	leave  
  1010f0:	c3                   	ret    

001010f1 <keyboard_read>:
  1010f1:	55                   	push   %ebp
  1010f2:	89 e5                	mov    %esp,%ebp
  1010f4:	53                   	push   %ebx
  1010f5:	83 ec 24             	sub    $0x24,%esp
  1010f8:	e8 c6 f4 ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  1010fd:	81 c3 03 1f 01 00    	add    $0x11f03,%ebx
  101103:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  10110a:	c7 c0 64 ce 12 00    	mov    $0x12ce64,%eax
  101110:	8b 40 10             	mov    0x10(%eax),%eax
  101113:	85 c0                	test   %eax,%eax
  101115:	0f 84 99 01 00 00    	je     1012b4 <.L16+0x43>
  10111b:	e8 03 14 00 00       	call   102523 <io_cli>
  101120:	83 ec 0c             	sub    $0xc,%esp
  101123:	c7 c0 64 ce 12 00    	mov    $0x12ce64,%eax
  101129:	50                   	push   %eax
  10112a:	e8 f9 17 00 00       	call   102928 <fifo_pop>
  10112f:	83 c4 10             	add    $0x10,%esp
  101132:	88 45 f3             	mov    %al,-0xd(%ebp)
  101135:	e8 e7 13 00 00       	call   102521 <io_sti>
  10113a:	80 7d f3 e1          	cmpb   $0xe1,-0xd(%ebp)
  10113e:	0f 84 70 01 00 00    	je     1012b4 <.L16+0x43>
  101144:	80 7d f3 e0          	cmpb   $0xe0,-0xd(%ebp)
  101148:	75 0f                	jne    101159 <keyboard_read+0x68>
  10114a:	c7 83 a0 0f 00 00 01 	movl   $0x1,0xfa0(%ebx)
  101151:	00 00 00 
  101154:	e9 5b 01 00 00       	jmp    1012b4 <.L16+0x43>
  101159:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax
  10115d:	f7 d0                	not    %eax
  10115f:	c0 e8 07             	shr    $0x7,%al
  101162:	0f b6 c0             	movzbl %al,%eax
  101165:	89 45 ec             	mov    %eax,-0x14(%ebp)
  101168:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax
  10116c:	83 e0 7f             	and    $0x7f,%eax
  10116f:	89 c2                	mov    %eax,%edx
  101171:	89 d0                	mov    %edx,%eax
  101173:	01 c0                	add    %eax,%eax
  101175:	01 d0                	add    %edx,%eax
  101177:	c1 e0 02             	shl    $0x2,%eax
  10117a:	8d 93 80 01 00 00    	lea    0x180(%ebx),%edx
  101180:	01 d0                	add    %edx,%eax
  101182:	89 45 e8             	mov    %eax,-0x18(%ebp)
  101185:	c7 c0 48 ce 12 00    	mov    $0x12ce48,%eax
  10118b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
  101191:	c7 c0 60 ce 12 00    	mov    $0x12ce60,%eax
  101197:	8b 00                	mov    (%eax),%eax
  101199:	85 c0                	test   %eax,%eax
  10119b:	75 0c                	jne    1011a9 <keyboard_read+0xb8>
  10119d:	c7 c0 44 ce 12 00    	mov    $0x12ce44,%eax
  1011a3:	8b 00                	mov    (%eax),%eax
  1011a5:	85 c0                	test   %eax,%eax
  1011a7:	74 0c                	je     1011b5 <keyboard_read+0xc4>
  1011a9:	c7 c0 48 ce 12 00    	mov    $0x12ce48,%eax
  1011af:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
  1011b5:	8b 83 a0 0f 00 00    	mov    0xfa0(%ebx),%eax
  1011bb:	85 c0                	test   %eax,%eax
  1011bd:	74 16                	je     1011d5 <keyboard_read+0xe4>
  1011bf:	c7 c0 48 ce 12 00    	mov    $0x12ce48,%eax
  1011c5:	c7 00 02 00 00 00    	movl   $0x2,(%eax)
  1011cb:	c7 83 a0 0f 00 00 00 	movl   $0x0,0xfa0(%ebx)
  1011d2:	00 00 00 
  1011d5:	c7 c0 48 ce 12 00    	mov    $0x12ce48,%eax
  1011db:	8b 00                	mov    (%eax),%eax
  1011dd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
  1011e4:	8b 45 e8             	mov    -0x18(%ebp),%eax
  1011e7:	01 d0                	add    %edx,%eax
  1011e9:	8b 00                	mov    (%eax),%eax
  1011eb:	89 45 f4             	mov    %eax,-0xc(%ebp)
  1011ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
  1011f1:	2d 08 01 00 00       	sub    $0x108,%eax
  1011f6:	83 f8 05             	cmp    $0x5,%eax
  1011f9:	0f 87 86 00 00 00    	ja     101285 <.L16+0x14>
  1011ff:	c1 e0 02             	shl    $0x2,%eax
  101202:	8b 84 18 20 02 ff ff 	mov    -0xfde0(%eax,%ebx,1),%eax
  101209:	01 d8                	add    %ebx,%eax
  10120b:	ff e0                	jmp    *%eax

0010120d <.L10>:
  10120d:	c7 c0 60 ce 12 00    	mov    $0x12ce60,%eax
  101213:	8b 55 ec             	mov    -0x14(%ebp),%edx
  101216:	89 10                	mov    %edx,(%eax)
  101218:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  10121f:	eb 72                	jmp    101293 <.L16+0x22>

00101221 <.L12>:
  101221:	c7 c0 44 ce 12 00    	mov    $0x12ce44,%eax
  101227:	8b 55 ec             	mov    -0x14(%ebp),%edx
  10122a:	89 10                	mov    %edx,(%eax)
  10122c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  101233:	eb 5e                	jmp    101293 <.L16+0x22>

00101235 <.L13>:
  101235:	c7 c0 54 ce 12 00    	mov    $0x12ce54,%eax
  10123b:	8b 55 ec             	mov    -0x14(%ebp),%edx
  10123e:	89 10                	mov    %edx,(%eax)
  101240:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  101247:	eb 4a                	jmp    101293 <.L16+0x22>

00101249 <.L14>:
  101249:	c7 c0 40 ce 12 00    	mov    $0x12ce40,%eax
  10124f:	8b 55 ec             	mov    -0x14(%ebp),%edx
  101252:	89 10                	mov    %edx,(%eax)
  101254:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  10125b:	eb 36                	jmp    101293 <.L16+0x22>

0010125d <.L15>:
  10125d:	c7 c0 4c ce 12 00    	mov    $0x12ce4c,%eax
  101263:	8b 55 ec             	mov    -0x14(%ebp),%edx
  101266:	89 10                	mov    %edx,(%eax)
  101268:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  10126f:	eb 22                	jmp    101293 <.L16+0x22>

00101271 <.L16>:
  101271:	c7 c0 4c ce 12 00    	mov    $0x12ce4c,%eax
  101277:	8b 55 ec             	mov    -0x14(%ebp),%edx
  10127a:	89 10                	mov    %edx,(%eax)
  10127c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  101283:	eb 0e                	jmp    101293 <.L16+0x22>
  101285:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
  101289:	75 07                	jne    101292 <.L16+0x21>
  10128b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  101292:	90                   	nop
  101293:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
  101297:	74 1b                	je     1012b4 <.L16+0x43>
  101299:	8b 45 f4             	mov    -0xc(%ebp),%eax
  10129c:	88 45 e6             	mov    %al,-0x1a(%ebp)
  10129f:	0f b6 45 e6          	movzbl -0x1a(%ebp),%eax
  1012a3:	0f be c0             	movsbl %al,%eax
  1012a6:	83 ec 08             	sub    $0x8,%esp
  1012a9:	6a 01                	push   $0x1
  1012ab:	50                   	push   %eax
  1012ac:	e8 50 0a 00 00       	call   101d01 <putchar>
  1012b1:	83 c4 10             	add    $0x10,%esp
  1012b4:	90                   	nop
  1012b5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  1012b8:	c9                   	leave  
  1012b9:	c3                   	ret    

001012ba <wait_KBC_sendready>:
  1012ba:	55                   	push   %ebp
  1012bb:	89 e5                	mov    %esp,%ebp
  1012bd:	53                   	push   %ebx
  1012be:	83 ec 04             	sub    $0x4,%esp
  1012c1:	e8 fd f2 ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  1012c6:	81 c3 3a 1d 01 00    	add    $0x11d3a,%ebx
  1012cc:	83 ec 0c             	sub    $0xc,%esp
  1012cf:	6a 64                	push   $0x64
  1012d1:	e8 65 12 00 00       	call   10253b <in8>
  1012d6:	83 c4 10             	add    $0x10,%esp
  1012d9:	0f b6 c0             	movzbl %al,%eax
  1012dc:	83 e0 02             	and    $0x2,%eax
  1012df:	85 c0                	test   %eax,%eax
  1012e1:	74 02                	je     1012e5 <wait_KBC_sendready+0x2b>
  1012e3:	eb e7                	jmp    1012cc <wait_KBC_sendready+0x12>
  1012e5:	90                   	nop
  1012e6:	90                   	nop
  1012e7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  1012ea:	c9                   	leave  
  1012eb:	c3                   	ret    

001012ec <init_mouse>:
  1012ec:	55                   	push   %ebp
  1012ed:	89 e5                	mov    %esp,%ebp
  1012ef:	53                   	push   %ebx
  1012f0:	83 ec 04             	sub    $0x4,%esp
  1012f3:	e8 cb f2 ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  1012f8:	81 c3 08 1d 01 00    	add    $0x11d08,%ebx
  1012fe:	e8 b7 ff ff ff       	call   1012ba <wait_KBC_sendready>
  101303:	83 ec 08             	sub    $0x8,%esp
  101306:	6a 60                	push   $0x60
  101308:	6a 64                	push   $0x64
  10130a:	e8 49 12 00 00       	call   102558 <out8>
  10130f:	83 c4 10             	add    $0x10,%esp
  101312:	e8 a3 ff ff ff       	call   1012ba <wait_KBC_sendready>
  101317:	83 ec 08             	sub    $0x8,%esp
  10131a:	6a 47                	push   $0x47
  10131c:	6a 60                	push   $0x60
  10131e:	e8 35 12 00 00       	call   102558 <out8>
  101323:	83 c4 10             	add    $0x10,%esp
  101326:	e8 8f ff ff ff       	call   1012ba <wait_KBC_sendready>
  10132b:	83 ec 08             	sub    $0x8,%esp
  10132e:	68 d4 00 00 00       	push   $0xd4
  101333:	6a 64                	push   $0x64
  101335:	e8 1e 12 00 00       	call   102558 <out8>
  10133a:	83 c4 10             	add    $0x10,%esp
  10133d:	e8 78 ff ff ff       	call   1012ba <wait_KBC_sendready>
  101342:	83 ec 08             	sub    $0x8,%esp
  101345:	68 f4 00 00 00       	push   $0xf4
  10134a:	6a 60                	push   $0x60
  10134c:	e8 07 12 00 00       	call   102558 <out8>
  101351:	83 c4 10             	add    $0x10,%esp
  101354:	c7 c0 e8 cf 12 00    	mov    $0x12cfe8,%eax
  10135a:	8b 00                	mov    (%eax),%eax
  10135c:	d1 e8                	shr    %eax
  10135e:	89 c2                	mov    %eax,%edx
  101360:	c7 c0 80 ce 12 00    	mov    $0x12ce80,%eax
  101366:	89 10                	mov    %edx,(%eax)
  101368:	c7 c0 ec cf 12 00    	mov    $0x12cfec,%eax
  10136e:	8b 00                	mov    (%eax),%eax
  101370:	d1 e8                	shr    %eax
  101372:	89 c2                	mov    %eax,%edx
  101374:	c7 c0 d0 cf 12 00    	mov    $0x12cfd0,%eax
  10137a:	89 10                	mov    %edx,(%eax)
  10137c:	c7 c0 c0 cf 12 00    	mov    $0x12cfc0,%eax
  101382:	c6 40 03 00          	movb   $0x0,0x3(%eax)
  101386:	83 ec 04             	sub    $0x4,%esp
  101389:	c7 c0 40 cf 12 00    	mov    $0x12cf40,%eax
  10138f:	50                   	push   %eax
  101390:	68 80 00 00 00       	push   $0x80
  101395:	c7 c0 24 cf 12 00    	mov    $0x12cf24,%eax
  10139b:	50                   	push   %eax
  10139c:	e8 b5 14 00 00       	call   102856 <fifo_init>
  1013a1:	83 c4 10             	add    $0x10,%esp
  1013a4:	e8 72 0b 00 00       	call   101f1b <sheet_alloc>
  1013a9:	89 c2                	mov    %eax,%edx
  1013ab:	c7 c0 20 cf 12 00    	mov    $0x12cf20,%eax
  1013b1:	89 10                	mov    %edx,(%eax)
  1013b3:	c7 c0 20 cf 12 00    	mov    $0x12cf20,%eax
  1013b9:	8b 00                	mov    (%eax),%eax
  1013bb:	83 ec 0c             	sub    $0xc,%esp
  1013be:	6a 63                	push   $0x63
  1013c0:	6a 10                	push   $0x10
  1013c2:	6a 08                	push   $0x8
  1013c4:	c7 c2 a0 ce 12 00    	mov    $0x12cea0,%edx
  1013ca:	52                   	push   %edx
  1013cb:	50                   	push   %eax
  1013cc:	e8 c5 0b 00 00       	call   101f96 <sheet_setbuf>
  1013d1:	83 c4 20             	add    $0x20,%esp
  1013d4:	83 ec 04             	sub    $0x4,%esp
  1013d7:	6a 63                	push   $0x63
  1013d9:	6a 0f                	push   $0xf
  1013db:	6a 07                	push   $0x7
  1013dd:	6a 00                	push   $0x0
  1013df:	6a 00                	push   $0x0
  1013e1:	6a 08                	push   $0x8
  1013e3:	c7 c0 a0 ce 12 00    	mov    $0x12cea0,%eax
  1013e9:	50                   	push   %eax
  1013ea:	e8 3f 06 00 00       	call   101a2e <fillRectTo>
  1013ef:	83 c4 20             	add    $0x20,%esp
  1013f2:	83 ec 08             	sub    $0x8,%esp
  1013f5:	6a 07                	push   $0x7
  1013f7:	c7 c0 40 32 10 00    	mov    $0x103240,%eax
  1013fd:	50                   	push   %eax
  1013fe:	6a 00                	push   $0x0
  101400:	6a 00                	push   $0x0
  101402:	6a 08                	push   $0x8
  101404:	c7 c0 a0 ce 12 00    	mov    $0x12cea0,%eax
  10140a:	50                   	push   %eax
  10140b:	e8 cf 06 00 00       	call   101adf <drawGlyphTo>
  101410:	83 c4 20             	add    $0x20,%esp
  101413:	c7 c0 20 cf 12 00    	mov    $0x12cf20,%eax
  101419:	8b 00                	mov    (%eax),%eax
  10141b:	83 ec 08             	sub    $0x8,%esp
  10141e:	6a 01                	push   $0x1
  101420:	50                   	push   %eax
  101421:	e8 a3 0b 00 00       	call   101fc9 <sheet_updown>
  101426:	83 c4 10             	add    $0x10,%esp
  101429:	c7 c0 d0 cf 12 00    	mov    $0x12cfd0,%eax
  10142f:	8b 08                	mov    (%eax),%ecx
  101431:	c7 c0 80 ce 12 00    	mov    $0x12ce80,%eax
  101437:	8b 10                	mov    (%eax),%edx
  101439:	c7 c0 20 cf 12 00    	mov    $0x12cf20,%eax
  10143f:	8b 00                	mov    (%eax),%eax
  101441:	83 ec 04             	sub    $0x4,%esp
  101444:	51                   	push   %ecx
  101445:	52                   	push   %edx
  101446:	50                   	push   %eax
  101447:	e8 02 10 00 00       	call   10244e <sheet_slide>
  10144c:	83 c4 10             	add    $0x10,%esp
  10144f:	83 ec 08             	sub    $0x8,%esp
  101452:	8d 83 76 e4 fe ff    	lea    -0x11b8a(%ebx),%eax
  101458:	50                   	push   %eax
  101459:	6a 0c                	push   $0xc
  10145b:	e8 d4 f6 ff ff       	call   100b34 <put_irq_handler>
  101460:	83 c4 10             	add    $0x10,%esp
  101463:	83 ec 0c             	sub    $0xc,%esp
  101466:	6a 0c                	push   $0xc
  101468:	e8 18 f5 ff ff       	call   100985 <enable_irq>
  10146d:	83 c4 10             	add    $0x10,%esp
  101470:	90                   	nop
  101471:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  101474:	c9                   	leave  
  101475:	c3                   	ret    

00101476 <mouse_handler>:
  101476:	55                   	push   %ebp
  101477:	89 e5                	mov    %esp,%ebp
  101479:	53                   	push   %ebx
  10147a:	83 ec 04             	sub    $0x4,%esp
  10147d:	e8 41 f1 ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  101482:	81 c3 7e 1b 01 00    	add    $0x11b7e,%ebx
  101488:	83 ec 0c             	sub    $0xc,%esp
  10148b:	6a 60                	push   $0x60
  10148d:	e8 a9 10 00 00       	call   10253b <in8>
  101492:	83 c4 10             	add    $0x10,%esp
  101495:	0f b6 c0             	movzbl %al,%eax
  101498:	83 ec 08             	sub    $0x8,%esp
  10149b:	50                   	push   %eax
  10149c:	c7 c0 24 cf 12 00    	mov    $0x12cf24,%eax
  1014a2:	50                   	push   %eax
  1014a3:	e8 f5 13 00 00       	call   10289d <fifo_push>
  1014a8:	83 c4 10             	add    $0x10,%esp
  1014ab:	90                   	nop
  1014ac:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  1014af:	c9                   	leave  
  1014b0:	c3                   	ret    

001014b1 <mouse_decode>:
  1014b1:	55                   	push   %ebp
  1014b2:	89 e5                	mov    %esp,%ebp
  1014b4:	83 ec 04             	sub    $0x4,%esp
  1014b7:	e8 03 f1 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  1014bc:	05 44 1b 01 00       	add    $0x11b44,%eax
  1014c1:	8b 55 08             	mov    0x8(%ebp),%edx
  1014c4:	88 55 fc             	mov    %dl,-0x4(%ebp)
  1014c7:	c7 c2 c0 cf 12 00    	mov    $0x12cfc0,%edx
  1014cd:	0f b6 52 03          	movzbl 0x3(%edx),%edx
  1014d1:	0f b6 d2             	movzbl %dl,%edx
  1014d4:	83 fa 01             	cmp    $0x1,%edx
  1014d7:	74 37                	je     101510 <mouse_decode+0x5f>
  1014d9:	83 fa 01             	cmp    $0x1,%edx
  1014dc:	7f 09                	jg     1014e7 <mouse_decode+0x36>
  1014de:	85 d2                	test   %edx,%edx
  1014e0:	74 14                	je     1014f6 <mouse_decode+0x45>
  1014e2:	e9 4b 01 00 00       	jmp    101632 <mouse_decode+0x181>
  1014e7:	83 fa 02             	cmp    $0x2,%edx
  1014ea:	74 53                	je     10153f <mouse_decode+0x8e>
  1014ec:	83 fa 03             	cmp    $0x3,%edx
  1014ef:	74 6f                	je     101560 <mouse_decode+0xaf>
  1014f1:	e9 3c 01 00 00       	jmp    101632 <mouse_decode+0x181>
  1014f6:	80 7d fc fa          	cmpb   $0xfa,-0x4(%ebp)
  1014fa:	75 0a                	jne    101506 <mouse_decode+0x55>
  1014fc:	c7 c0 c0 cf 12 00    	mov    $0x12cfc0,%eax
  101502:	c6 40 03 01          	movb   $0x1,0x3(%eax)
  101506:	b8 00 00 00 00       	mov    $0x0,%eax
  10150b:	e9 27 01 00 00       	jmp    101637 <mouse_decode+0x186>
  101510:	0f b6 55 fc          	movzbl -0x4(%ebp),%edx
  101514:	81 e2 c8 00 00 00    	and    $0xc8,%edx
  10151a:	83 fa 08             	cmp    $0x8,%edx
  10151d:	75 16                	jne    101535 <mouse_decode+0x84>
  10151f:	c7 c2 c0 cf 12 00    	mov    $0x12cfc0,%edx
  101525:	0f b6 4d fc          	movzbl -0x4(%ebp),%ecx
  101529:	88 0a                	mov    %cl,(%edx)
  10152b:	c7 c0 c0 cf 12 00    	mov    $0x12cfc0,%eax
  101531:	c6 40 03 02          	movb   $0x2,0x3(%eax)
  101535:	b8 00 00 00 00       	mov    $0x0,%eax
  10153a:	e9 f8 00 00 00       	jmp    101637 <mouse_decode+0x186>
  10153f:	c7 c2 c0 cf 12 00    	mov    $0x12cfc0,%edx
  101545:	0f b6 4d fc          	movzbl -0x4(%ebp),%ecx
  101549:	88 4a 01             	mov    %cl,0x1(%edx)
  10154c:	c7 c0 c0 cf 12 00    	mov    $0x12cfc0,%eax
  101552:	c6 40 03 03          	movb   $0x3,0x3(%eax)
  101556:	b8 00 00 00 00       	mov    $0x0,%eax
  10155b:	e9 d7 00 00 00       	jmp    101637 <mouse_decode+0x186>
  101560:	c7 c2 c0 cf 12 00    	mov    $0x12cfc0,%edx
  101566:	0f b6 4d fc          	movzbl -0x4(%ebp),%ecx
  10156a:	88 4a 02             	mov    %cl,0x2(%edx)
  10156d:	c7 c2 c0 cf 12 00    	mov    $0x12cfc0,%edx
  101573:	c6 42 03 01          	movb   $0x1,0x3(%edx)
  101577:	c7 c2 c0 cf 12 00    	mov    $0x12cfc0,%edx
  10157d:	0f b6 12             	movzbl (%edx),%edx
  101580:	0f b6 d2             	movzbl %dl,%edx
  101583:	89 d1                	mov    %edx,%ecx
  101585:	83 e1 07             	and    $0x7,%ecx
  101588:	c7 c2 c0 cf 12 00    	mov    $0x12cfc0,%edx
  10158e:	89 4a 0c             	mov    %ecx,0xc(%edx)
  101591:	c7 c2 c0 cf 12 00    	mov    $0x12cfc0,%edx
  101597:	0f b6 52 01          	movzbl 0x1(%edx),%edx
  10159b:	0f b6 ca             	movzbl %dl,%ecx
  10159e:	c7 c2 c0 cf 12 00    	mov    $0x12cfc0,%edx
  1015a4:	89 4a 04             	mov    %ecx,0x4(%edx)
  1015a7:	c7 c2 c0 cf 12 00    	mov    $0x12cfc0,%edx
  1015ad:	0f b6 52 02          	movzbl 0x2(%edx),%edx
  1015b1:	0f b6 ca             	movzbl %dl,%ecx
  1015b4:	c7 c2 c0 cf 12 00    	mov    $0x12cfc0,%edx
  1015ba:	89 4a 08             	mov    %ecx,0x8(%edx)
  1015bd:	c7 c2 c0 cf 12 00    	mov    $0x12cfc0,%edx
  1015c3:	0f b6 12             	movzbl (%edx),%edx
  1015c6:	0f b6 d2             	movzbl %dl,%edx
  1015c9:	83 e2 10             	and    $0x10,%edx
  1015cc:	85 d2                	test   %edx,%edx
  1015ce:	74 1a                	je     1015ea <mouse_decode+0x139>
  1015d0:	c7 c2 c0 cf 12 00    	mov    $0x12cfc0,%edx
  1015d6:	8b 52 04             	mov    0x4(%edx),%edx
  1015d9:	81 ca 00 ff ff ff    	or     $0xffffff00,%edx
  1015df:	89 d1                	mov    %edx,%ecx
  1015e1:	c7 c2 c0 cf 12 00    	mov    $0x12cfc0,%edx
  1015e7:	89 4a 04             	mov    %ecx,0x4(%edx)
  1015ea:	c7 c2 c0 cf 12 00    	mov    $0x12cfc0,%edx
  1015f0:	0f b6 12             	movzbl (%edx),%edx
  1015f3:	0f b6 d2             	movzbl %dl,%edx
  1015f6:	83 e2 20             	and    $0x20,%edx
  1015f9:	85 d2                	test   %edx,%edx
  1015fb:	74 1a                	je     101617 <mouse_decode+0x166>
  1015fd:	c7 c2 c0 cf 12 00    	mov    $0x12cfc0,%edx
  101603:	8b 52 08             	mov    0x8(%edx),%edx
  101606:	81 ca 00 ff ff ff    	or     $0xffffff00,%edx
  10160c:	89 d1                	mov    %edx,%ecx
  10160e:	c7 c2 c0 cf 12 00    	mov    $0x12cfc0,%edx
  101614:	89 4a 08             	mov    %ecx,0x8(%edx)
  101617:	c7 c2 c0 cf 12 00    	mov    $0x12cfc0,%edx
  10161d:	8b 52 08             	mov    0x8(%edx),%edx
  101620:	f7 da                	neg    %edx
  101622:	c7 c0 c0 cf 12 00    	mov    $0x12cfc0,%eax
  101628:	89 50 08             	mov    %edx,0x8(%eax)
  10162b:	b8 01 00 00 00       	mov    $0x1,%eax
  101630:	eb 05                	jmp    101637 <mouse_decode+0x186>
  101632:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  101637:	c9                   	leave  
  101638:	c3                   	ret    

00101639 <mouse_read>:
  101639:	55                   	push   %ebp
  10163a:	89 e5                	mov    %esp,%ebp
  10163c:	53                   	push   %ebx
  10163d:	83 ec 14             	sub    $0x14,%esp
  101640:	e8 7e ef ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  101645:	81 c3 bb 19 01 00    	add    $0x119bb,%ebx
  10164b:	c7 c0 24 cf 12 00    	mov    $0x12cf24,%eax
  101651:	8b 40 10             	mov    0x10(%eax),%eax
  101654:	85 c0                	test   %eax,%eax
  101656:	0f 84 1b 01 00 00    	je     101777 <mouse_read+0x13e>
  10165c:	e8 c2 0e 00 00       	call   102523 <io_cli>
  101661:	83 ec 0c             	sub    $0xc,%esp
  101664:	c7 c0 24 cf 12 00    	mov    $0x12cf24,%eax
  10166a:	50                   	push   %eax
  10166b:	e8 b8 12 00 00       	call   102928 <fifo_pop>
  101670:	83 c4 10             	add    $0x10,%esp
  101673:	89 45 f4             	mov    %eax,-0xc(%ebp)
  101676:	e8 a6 0e 00 00       	call   102521 <io_sti>
  10167b:	8b 45 f4             	mov    -0xc(%ebp),%eax
  10167e:	0f b6 c0             	movzbl %al,%eax
  101681:	83 ec 0c             	sub    $0xc,%esp
  101684:	50                   	push   %eax
  101685:	e8 27 fe ff ff       	call   1014b1 <mouse_decode>
  10168a:	83 c4 10             	add    $0x10,%esp
  10168d:	85 c0                	test   %eax,%eax
  10168f:	0f 84 e2 00 00 00    	je     101777 <mouse_read+0x13e>
  101695:	c7 c0 c0 cf 12 00    	mov    $0x12cfc0,%eax
  10169b:	8b 50 04             	mov    0x4(%eax),%edx
  10169e:	c7 c0 80 ce 12 00    	mov    $0x12ce80,%eax
  1016a4:	8b 00                	mov    (%eax),%eax
  1016a6:	01 c2                	add    %eax,%edx
  1016a8:	c7 c0 80 ce 12 00    	mov    $0x12ce80,%eax
  1016ae:	89 10                	mov    %edx,(%eax)
  1016b0:	c7 c0 c0 cf 12 00    	mov    $0x12cfc0,%eax
  1016b6:	8b 50 08             	mov    0x8(%eax),%edx
  1016b9:	c7 c0 d0 cf 12 00    	mov    $0x12cfd0,%eax
  1016bf:	8b 00                	mov    (%eax),%eax
  1016c1:	01 c2                	add    %eax,%edx
  1016c3:	c7 c0 d0 cf 12 00    	mov    $0x12cfd0,%eax
  1016c9:	89 10                	mov    %edx,(%eax)
  1016cb:	c7 c0 80 ce 12 00    	mov    $0x12ce80,%eax
  1016d1:	8b 00                	mov    (%eax),%eax
  1016d3:	85 c0                	test   %eax,%eax
  1016d5:	79 0c                	jns    1016e3 <mouse_read+0xaa>
  1016d7:	c7 c0 80 ce 12 00    	mov    $0x12ce80,%eax
  1016dd:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
  1016e3:	c7 c0 d0 cf 12 00    	mov    $0x12cfd0,%eax
  1016e9:	8b 00                	mov    (%eax),%eax
  1016eb:	85 c0                	test   %eax,%eax
  1016ed:	79 0c                	jns    1016fb <mouse_read+0xc2>
  1016ef:	c7 c0 d0 cf 12 00    	mov    $0x12cfd0,%eax
  1016f5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
  1016fb:	c7 c0 80 ce 12 00    	mov    $0x12ce80,%eax
  101701:	8b 00                	mov    (%eax),%eax
  101703:	89 c2                	mov    %eax,%edx
  101705:	c7 c0 e8 cf 12 00    	mov    $0x12cfe8,%eax
  10170b:	8b 00                	mov    (%eax),%eax
  10170d:	39 c2                	cmp    %eax,%edx
  10170f:	72 15                	jb     101726 <mouse_read+0xed>
  101711:	c7 c0 e8 cf 12 00    	mov    $0x12cfe8,%eax
  101717:	8b 00                	mov    (%eax),%eax
  101719:	83 e8 01             	sub    $0x1,%eax
  10171c:	89 c2                	mov    %eax,%edx
  10171e:	c7 c0 80 ce 12 00    	mov    $0x12ce80,%eax
  101724:	89 10                	mov    %edx,(%eax)
  101726:	c7 c0 d0 cf 12 00    	mov    $0x12cfd0,%eax
  10172c:	8b 00                	mov    (%eax),%eax
  10172e:	89 c2                	mov    %eax,%edx
  101730:	c7 c0 ec cf 12 00    	mov    $0x12cfec,%eax
  101736:	8b 00                	mov    (%eax),%eax
  101738:	39 c2                	cmp    %eax,%edx
  10173a:	72 15                	jb     101751 <mouse_read+0x118>
  10173c:	c7 c0 ec cf 12 00    	mov    $0x12cfec,%eax
  101742:	8b 00                	mov    (%eax),%eax
  101744:	83 e8 01             	sub    $0x1,%eax
  101747:	89 c2                	mov    %eax,%edx
  101749:	c7 c0 d0 cf 12 00    	mov    $0x12cfd0,%eax
  10174f:	89 10                	mov    %edx,(%eax)
  101751:	c7 c0 d0 cf 12 00    	mov    $0x12cfd0,%eax
  101757:	8b 08                	mov    (%eax),%ecx
  101759:	c7 c0 80 ce 12 00    	mov    $0x12ce80,%eax
  10175f:	8b 10                	mov    (%eax),%edx
  101761:	c7 c0 20 cf 12 00    	mov    $0x12cf20,%eax
  101767:	8b 00                	mov    (%eax),%eax
  101769:	83 ec 04             	sub    $0x4,%esp
  10176c:	51                   	push   %ecx
  10176d:	52                   	push   %edx
  10176e:	50                   	push   %eax
  10176f:	e8 da 0c 00 00       	call   10244e <sheet_slide>
  101774:	83 c4 10             	add    $0x10,%esp
  101777:	90                   	nop
  101778:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  10177b:	c9                   	leave  
  10177c:	c3                   	ret    

0010177d <init_video>:
  10177d:	55                   	push   %ebp
  10177e:	89 e5                	mov    %esp,%ebp
  101780:	53                   	push   %ebx
  101781:	83 ec 04             	sub    $0x4,%esp
  101784:	e8 3a ee ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  101789:	81 c3 77 18 01 00    	add    $0x11877,%ebx
  10178f:	c7 c0 e8 cf 12 00    	mov    $0x12cfe8,%eax
  101795:	c7 00 20 03 00 00    	movl   $0x320,(%eax)
  10179b:	c7 c0 ec cf 12 00    	mov    $0x12cfec,%eax
  1017a1:	c7 00 58 02 00 00    	movl   $0x258,(%eax)
  1017a7:	c7 c0 e0 cf 12 00    	mov    $0x12cfe0,%eax
  1017ad:	c7 00 08 00 00 00    	movl   $0x8,(%eax)
  1017b3:	c7 c0 e8 cf 12 00    	mov    $0x12cfe8,%eax
  1017b9:	8b 10                	mov    (%eax),%edx
  1017bb:	c7 c0 e0 cf 12 00    	mov    $0x12cfe0,%eax
  1017c1:	8b 00                	mov    (%eax),%eax
  1017c3:	0f af c2             	imul   %edx,%eax
  1017c6:	c1 e8 03             	shr    $0x3,%eax
  1017c9:	89 c2                	mov    %eax,%edx
  1017cb:	c7 c0 f0 cf 12 00    	mov    $0x12cff0,%eax
  1017d1:	89 10                	mov    %edx,(%eax)
  1017d3:	c7 c0 e0 cf 12 00    	mov    $0x12cfe0,%eax
  1017d9:	8b 08                	mov    (%eax),%ecx
  1017db:	c7 c0 ec cf 12 00    	mov    $0x12cfec,%eax
  1017e1:	8b 10                	mov    (%eax),%edx
  1017e3:	c7 c0 e8 cf 12 00    	mov    $0x12cfe8,%eax
  1017e9:	8b 00                	mov    (%eax),%eax
  1017eb:	83 ec 0c             	sub    $0xc,%esp
  1017ee:	6a 00                	push   $0x0
  1017f0:	6a 00                	push   $0x0
  1017f2:	51                   	push   %ecx
  1017f3:	52                   	push   %edx
  1017f4:	50                   	push   %eax
  1017f5:	e8 60 0f 00 00       	call   10275a <bga_set_video_mode>
  1017fa:	83 c4 20             	add    $0x20,%esp
  1017fd:	83 ec 0c             	sub    $0xc,%esp
  101800:	6a 00                	push   $0x0
  101802:	e8 e8 0f 00 00       	call   1027ef <bga_set_bank>
  101807:	83 c4 10             	add    $0x10,%esp
  10180a:	e8 2a 00 00 00       	call   101839 <initPalette>
  10180f:	e8 0d 01 00 00       	call   101921 <cacheFonts>
  101814:	c7 c0 ec cf 12 00    	mov    $0x12cfec,%eax
  10181a:	8b 00                	mov    (%eax),%eax
  10181c:	89 c2                	mov    %eax,%edx
  10181e:	c7 c0 e8 cf 12 00    	mov    $0x12cfe8,%eax
  101824:	8b 00                	mov    (%eax),%eax
  101826:	83 ec 08             	sub    $0x8,%esp
  101829:	52                   	push   %edx
  10182a:	50                   	push   %eax
  10182b:	e8 3e 06 00 00       	call   101e6e <shtctl_init>
  101830:	83 c4 10             	add    $0x10,%esp
  101833:	90                   	nop
  101834:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  101837:	c9                   	leave  
  101838:	c3                   	ret    

00101839 <initPalette>:
  101839:	55                   	push   %ebp
  10183a:	89 e5                	mov    %esp,%ebp
  10183c:	83 ec 08             	sub    $0x8,%esp
  10183f:	e8 7b ed ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  101844:	05 bc 17 01 00       	add    $0x117bc,%eax
  101849:	83 ec 04             	sub    $0x4,%esp
  10184c:	8d 80 60 02 ff ff    	lea    -0xfda0(%eax),%eax
  101852:	50                   	push   %eax
  101853:	6a 0f                	push   $0xf
  101855:	6a 00                	push   $0x0
  101857:	e8 06 00 00 00       	call   101862 <setPalette>
  10185c:	83 c4 10             	add    $0x10,%esp
  10185f:	90                   	nop
  101860:	c9                   	leave  
  101861:	c3                   	ret    

00101862 <setPalette>:
  101862:	55                   	push   %ebp
  101863:	89 e5                	mov    %esp,%ebp
  101865:	53                   	push   %ebx
  101866:	83 ec 14             	sub    $0x14,%esp
  101869:	e8 55 ed ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  10186e:	81 c3 92 17 01 00    	add    $0x11792,%ebx
  101874:	e8 ac 0c 00 00       	call   102525 <io_load_eflags>
  101879:	89 45 f0             	mov    %eax,-0x10(%ebp)
  10187c:	e8 a2 0c 00 00       	call   102523 <io_cli>
  101881:	8b 45 08             	mov    0x8(%ebp),%eax
  101884:	0f b6 c0             	movzbl %al,%eax
  101887:	83 ec 08             	sub    $0x8,%esp
  10188a:	50                   	push   %eax
  10188b:	68 c8 03 00 00       	push   $0x3c8
  101890:	e8 c3 0c 00 00       	call   102558 <out8>
  101895:	83 c4 10             	add    $0x10,%esp
  101898:	8b 45 08             	mov    0x8(%ebp),%eax
  10189b:	89 45 f4             	mov    %eax,-0xc(%ebp)
  10189e:	eb 65                	jmp    101905 <setPalette+0xa3>
  1018a0:	8b 45 10             	mov    0x10(%ebp),%eax
  1018a3:	0f b6 00             	movzbl (%eax),%eax
  1018a6:	c0 e8 02             	shr    $0x2,%al
  1018a9:	0f b6 c0             	movzbl %al,%eax
  1018ac:	83 ec 08             	sub    $0x8,%esp
  1018af:	50                   	push   %eax
  1018b0:	68 c9 03 00 00       	push   $0x3c9
  1018b5:	e8 9e 0c 00 00       	call   102558 <out8>
  1018ba:	83 c4 10             	add    $0x10,%esp
  1018bd:	8b 45 10             	mov    0x10(%ebp),%eax
  1018c0:	83 c0 01             	add    $0x1,%eax
  1018c3:	0f b6 00             	movzbl (%eax),%eax
  1018c6:	c0 e8 02             	shr    $0x2,%al
  1018c9:	0f b6 c0             	movzbl %al,%eax
  1018cc:	83 ec 08             	sub    $0x8,%esp
  1018cf:	50                   	push   %eax
  1018d0:	68 c9 03 00 00       	push   $0x3c9
  1018d5:	e8 7e 0c 00 00       	call   102558 <out8>
  1018da:	83 c4 10             	add    $0x10,%esp
  1018dd:	8b 45 10             	mov    0x10(%ebp),%eax
  1018e0:	83 c0 02             	add    $0x2,%eax
  1018e3:	0f b6 00             	movzbl (%eax),%eax
  1018e6:	c0 e8 02             	shr    $0x2,%al
  1018e9:	0f b6 c0             	movzbl %al,%eax
  1018ec:	83 ec 08             	sub    $0x8,%esp
  1018ef:	50                   	push   %eax
  1018f0:	68 c9 03 00 00       	push   $0x3c9
  1018f5:	e8 5e 0c 00 00       	call   102558 <out8>
  1018fa:	83 c4 10             	add    $0x10,%esp
  1018fd:	83 45 10 03          	addl   $0x3,0x10(%ebp)
  101901:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
  101905:	8b 45 f4             	mov    -0xc(%ebp),%eax
  101908:	3b 45 0c             	cmp    0xc(%ebp),%eax
  10190b:	7e 93                	jle    1018a0 <setPalette+0x3e>
  10190d:	83 ec 0c             	sub    $0xc,%esp
  101910:	ff 75 f0             	pushl  -0x10(%ebp)
  101913:	e8 10 0c 00 00       	call   102528 <io_store_eflags>
  101918:	83 c4 10             	add    $0x10,%esp
  10191b:	90                   	nop
  10191c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  10191f:	c9                   	leave  
  101920:	c3                   	ret    

00101921 <cacheFonts>:
  101921:	55                   	push   %ebp
  101922:	89 e5                	mov    %esp,%ebp
  101924:	53                   	push   %ebx
  101925:	83 ec 10             	sub    $0x10,%esp
  101928:	e8 92 ec ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  10192d:	05 d3 16 01 00       	add    $0x116d3,%eax
  101932:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
  101939:	eb 2b                	jmp    101966 <cacheFonts+0x45>
  10193b:	c7 c2 f0 2f 11 00    	mov    $0x112ff0,%edx
  101941:	8b 52 08             	mov    0x8(%edx),%edx
  101944:	8b 4d f8             	mov    -0x8(%ebp),%ecx
  101947:	01 c9                	add    %ecx,%ecx
  101949:	01 ca                	add    %ecx,%edx
  10194b:	0f b7 12             	movzwl (%edx),%edx
  10194e:	66 89 55 f6          	mov    %dx,-0xa(%ebp)
  101952:	0f b7 4d f6          	movzwl -0xa(%ebp),%ecx
  101956:	c7 c2 00 d0 12 00    	mov    $0x12d000,%edx
  10195c:	8b 5d f8             	mov    -0x8(%ebp),%ebx
  10195f:	89 1c 8a             	mov    %ebx,(%edx,%ecx,4)
  101962:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
  101966:	c7 c2 f0 2f 11 00    	mov    $0x112ff0,%edx
  10196c:	0f b7 52 02          	movzwl 0x2(%edx),%edx
  101970:	0f b7 d2             	movzwl %dx,%edx
  101973:	39 55 f8             	cmp    %edx,-0x8(%ebp)
  101976:	72 c3                	jb     10193b <cacheFonts+0x1a>
  101978:	90                   	nop
  101979:	83 c4 10             	add    $0x10,%esp
  10197c:	5b                   	pop    %ebx
  10197d:	5d                   	pop    %ebp
  10197e:	c3                   	ret    

0010197f <putPixelTo>:
  10197f:	55                   	push   %ebp
  101980:	89 e5                	mov    %esp,%ebp
  101982:	83 ec 14             	sub    $0x14,%esp
  101985:	e8 35 ec ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  10198a:	05 76 16 01 00       	add    $0x11676,%eax
  10198f:	8b 45 18             	mov    0x18(%ebp),%eax
  101992:	88 45 ec             	mov    %al,-0x14(%ebp)
  101995:	8b 45 14             	mov    0x14(%ebp),%eax
  101998:	0f af 45 0c          	imul   0xc(%ebp),%eax
  10199c:	89 c2                	mov    %eax,%edx
  10199e:	8b 45 10             	mov    0x10(%ebp),%eax
  1019a1:	01 d0                	add    %edx,%eax
  1019a3:	89 45 fc             	mov    %eax,-0x4(%ebp)
  1019a6:	8b 55 08             	mov    0x8(%ebp),%edx
  1019a9:	8b 45 fc             	mov    -0x4(%ebp),%eax
  1019ac:	01 c2                	add    %eax,%edx
  1019ae:	0f b6 45 ec          	movzbl -0x14(%ebp),%eax
  1019b2:	88 02                	mov    %al,(%edx)
  1019b4:	90                   	nop
  1019b5:	c9                   	leave  
  1019b6:	c3                   	ret    

001019b7 <putPixel>:
  1019b7:	55                   	push   %ebp
  1019b8:	89 e5                	mov    %esp,%ebp
  1019ba:	53                   	push   %ebx
  1019bb:	83 ec 24             	sub    $0x24,%esp
  1019be:	e8 00 ec ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  1019c3:	81 c3 3d 16 01 00    	add    $0x1163d,%ebx
  1019c9:	8b 45 10             	mov    0x10(%ebp),%eax
  1019cc:	88 45 e4             	mov    %al,-0x1c(%ebp)
  1019cf:	8b 55 0c             	mov    0xc(%ebp),%edx
  1019d2:	c7 c0 f0 cf 12 00    	mov    $0x12cff0,%eax
  1019d8:	8b 00                	mov    (%eax),%eax
  1019da:	0f af d0             	imul   %eax,%edx
  1019dd:	8b 45 08             	mov    0x8(%ebp),%eax
  1019e0:	01 d0                	add    %edx,%eax
  1019e2:	89 45 f4             	mov    %eax,-0xc(%ebp)
  1019e5:	c7 c0 08 d0 16 00    	mov    $0x16d008,%eax
  1019eb:	8b 00                	mov    (%eax),%eax
  1019ed:	39 45 f4             	cmp    %eax,-0xc(%ebp)
  1019f0:	72 0d                	jb     1019ff <putPixel+0x48>
  1019f2:	c7 c0 00 d0 16 00    	mov    $0x16d000,%eax
  1019f8:	8b 00                	mov    (%eax),%eax
  1019fa:	39 45 f4             	cmp    %eax,-0xc(%ebp)
  1019fd:	72 15                	jb     101a14 <putPixel+0x5d>
  1019ff:	8b 45 f4             	mov    -0xc(%ebp),%eax
  101a02:	c1 e8 10             	shr    $0x10,%eax
  101a05:	0f b7 c0             	movzwl %ax,%eax
  101a08:	83 ec 0c             	sub    $0xc,%esp
  101a0b:	50                   	push   %eax
  101a0c:	e8 de 0d 00 00       	call   1027ef <bga_set_bank>
  101a11:	83 c4 10             	add    $0x10,%esp
  101a14:	8b 93 80 07 00 00    	mov    0x780(%ebx),%edx
  101a1a:	8b 45 f4             	mov    -0xc(%ebp),%eax
  101a1d:	0f b7 c0             	movzwl %ax,%eax
  101a20:	01 c2                	add    %eax,%edx
  101a22:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax
  101a26:	88 02                	mov    %al,(%edx)
  101a28:	90                   	nop
  101a29:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  101a2c:	c9                   	leave  
  101a2d:	c3                   	ret    

00101a2e <fillRectTo>:
  101a2e:	55                   	push   %ebp
  101a2f:	89 e5                	mov    %esp,%ebp
  101a31:	83 ec 14             	sub    $0x14,%esp
  101a34:	e8 86 eb ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  101a39:	05 c7 15 01 00       	add    $0x115c7,%eax
  101a3e:	8b 45 20             	mov    0x20(%ebp),%eax
  101a41:	88 45 ec             	mov    %al,-0x14(%ebp)
  101a44:	8b 45 14             	mov    0x14(%ebp),%eax
  101a47:	89 45 fc             	mov    %eax,-0x4(%ebp)
  101a4a:	eb 31                	jmp    101a7d <fillRectTo+0x4f>
  101a4c:	8b 45 10             	mov    0x10(%ebp),%eax
  101a4f:	89 45 f8             	mov    %eax,-0x8(%ebp)
  101a52:	eb 1d                	jmp    101a71 <fillRectTo+0x43>
  101a54:	0f b6 45 ec          	movzbl -0x14(%ebp),%eax
  101a58:	50                   	push   %eax
  101a59:	ff 75 fc             	pushl  -0x4(%ebp)
  101a5c:	ff 75 f8             	pushl  -0x8(%ebp)
  101a5f:	ff 75 0c             	pushl  0xc(%ebp)
  101a62:	ff 75 08             	pushl  0x8(%ebp)
  101a65:	e8 15 ff ff ff       	call   10197f <putPixelTo>
  101a6a:	83 c4 14             	add    $0x14,%esp
  101a6d:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
  101a71:	8b 45 f8             	mov    -0x8(%ebp),%eax
  101a74:	3b 45 18             	cmp    0x18(%ebp),%eax
  101a77:	7e db                	jle    101a54 <fillRectTo+0x26>
  101a79:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
  101a7d:	8b 45 fc             	mov    -0x4(%ebp),%eax
  101a80:	3b 45 1c             	cmp    0x1c(%ebp),%eax
  101a83:	7e c7                	jle    101a4c <fillRectTo+0x1e>
  101a85:	90                   	nop
  101a86:	c9                   	leave  
  101a87:	c3                   	ret    

00101a88 <fillRect>:
  101a88:	55                   	push   %ebp
  101a89:	89 e5                	mov    %esp,%ebp
  101a8b:	83 ec 28             	sub    $0x28,%esp
  101a8e:	e8 2c eb ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  101a93:	05 6d 15 01 00       	add    $0x1156d,%eax
  101a98:	8b 45 18             	mov    0x18(%ebp),%eax
  101a9b:	88 45 e4             	mov    %al,-0x1c(%ebp)
  101a9e:	8b 45 0c             	mov    0xc(%ebp),%eax
  101aa1:	89 45 f4             	mov    %eax,-0xc(%ebp)
  101aa4:	eb 2e                	jmp    101ad4 <fillRect+0x4c>
  101aa6:	8b 45 08             	mov    0x8(%ebp),%eax
  101aa9:	89 45 f0             	mov    %eax,-0x10(%ebp)
  101aac:	eb 1a                	jmp    101ac8 <fillRect+0x40>
  101aae:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax
  101ab2:	83 ec 04             	sub    $0x4,%esp
  101ab5:	50                   	push   %eax
  101ab6:	ff 75 f4             	pushl  -0xc(%ebp)
  101ab9:	ff 75 f0             	pushl  -0x10(%ebp)
  101abc:	e8 f6 fe ff ff       	call   1019b7 <putPixel>
  101ac1:	83 c4 10             	add    $0x10,%esp
  101ac4:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
  101ac8:	8b 45 f0             	mov    -0x10(%ebp),%eax
  101acb:	3b 45 10             	cmp    0x10(%ebp),%eax
  101ace:	7e de                	jle    101aae <fillRect+0x26>
  101ad0:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
  101ad4:	8b 45 f4             	mov    -0xc(%ebp),%eax
  101ad7:	3b 45 14             	cmp    0x14(%ebp),%eax
  101ada:	7e ca                	jle    101aa6 <fillRect+0x1e>
  101adc:	90                   	nop
  101add:	c9                   	leave  
  101ade:	c3                   	ret    

00101adf <drawGlyphTo>:
  101adf:	55                   	push   %ebp
  101ae0:	89 e5                	mov    %esp,%ebp
  101ae2:	83 ec 24             	sub    $0x24,%esp
  101ae5:	e8 d5 ea ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  101aea:	05 16 15 01 00       	add    $0x11516,%eax
  101aef:	8b 45 1c             	mov    0x1c(%ebp),%eax
  101af2:	88 45 dc             	mov    %al,-0x24(%ebp)
  101af5:	8b 45 14             	mov    0x14(%ebp),%eax
  101af8:	0f af 45 0c          	imul   0xc(%ebp),%eax
  101afc:	89 c2                	mov    %eax,%edx
  101afe:	8b 45 10             	mov    0x10(%ebp),%eax
  101b01:	01 d0                	add    %edx,%eax
  101b03:	89 45 fc             	mov    %eax,-0x4(%ebp)
  101b06:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
  101b0d:	eb 4a                	jmp    101b59 <drawGlyphTo+0x7a>
  101b0f:	8b 55 f8             	mov    -0x8(%ebp),%edx
  101b12:	8b 45 18             	mov    0x18(%ebp),%eax
  101b15:	01 d0                	add    %edx,%eax
  101b17:	0f b6 00             	movzbl (%eax),%eax
  101b1a:	88 45 ef             	mov    %al,-0x11(%ebp)
  101b1d:	c6 45 f7 80          	movb   $0x80,-0x9(%ebp)
  101b21:	8b 45 fc             	mov    -0x4(%ebp),%eax
  101b24:	89 45 f0             	mov    %eax,-0x10(%ebp)
  101b27:	eb 20                	jmp    101b49 <drawGlyphTo+0x6a>
  101b29:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax
  101b2d:	22 45 f7             	and    -0x9(%ebp),%al
  101b30:	84 c0                	test   %al,%al
  101b32:	74 0e                	je     101b42 <drawGlyphTo+0x63>
  101b34:	8b 55 08             	mov    0x8(%ebp),%edx
  101b37:	8b 45 f0             	mov    -0x10(%ebp),%eax
  101b3a:	01 c2                	add    %eax,%edx
  101b3c:	0f b6 45 dc          	movzbl -0x24(%ebp),%eax
  101b40:	88 02                	mov    %al,(%edx)
  101b42:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
  101b46:	d0 6d f7             	shrb   -0x9(%ebp)
  101b49:	80 7d f7 00          	cmpb   $0x0,-0x9(%ebp)
  101b4d:	75 da                	jne    101b29 <drawGlyphTo+0x4a>
  101b4f:	8b 45 0c             	mov    0xc(%ebp),%eax
  101b52:	01 45 fc             	add    %eax,-0x4(%ebp)
  101b55:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
  101b59:	83 7d f8 0f          	cmpl   $0xf,-0x8(%ebp)
  101b5d:	7e b0                	jle    101b0f <drawGlyphTo+0x30>
  101b5f:	90                   	nop
  101b60:	c9                   	leave  
  101b61:	c3                   	ret    

00101b62 <drawGlyph>:
  101b62:	55                   	push   %ebp
  101b63:	89 e5                	mov    %esp,%ebp
  101b65:	53                   	push   %ebx
  101b66:	83 ec 34             	sub    $0x34,%esp
  101b69:	e8 55 ea ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  101b6e:	81 c3 92 14 01 00    	add    $0x11492,%ebx
  101b74:	8b 45 14             	mov    0x14(%ebp),%eax
  101b77:	88 45 d4             	mov    %al,-0x2c(%ebp)
  101b7a:	8b 55 0c             	mov    0xc(%ebp),%edx
  101b7d:	c7 c0 f0 cf 12 00    	mov    $0x12cff0,%eax
  101b83:	8b 00                	mov    (%eax),%eax
  101b85:	0f af d0             	imul   %eax,%edx
  101b88:	8b 45 08             	mov    0x8(%ebp),%eax
  101b8b:	01 d0                	add    %edx,%eax
  101b8d:	89 45 f4             	mov    %eax,-0xc(%ebp)
  101b90:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
  101b97:	e9 84 00 00 00       	jmp    101c20 <drawGlyph+0xbe>
  101b9c:	8b 55 f0             	mov    -0x10(%ebp),%edx
  101b9f:	8b 45 10             	mov    0x10(%ebp),%eax
  101ba2:	01 d0                	add    %edx,%eax
  101ba4:	0f b6 00             	movzbl (%eax),%eax
  101ba7:	88 45 e7             	mov    %al,-0x19(%ebp)
  101baa:	c6 45 ef 80          	movb   $0x80,-0x11(%ebp)
  101bae:	8b 45 f4             	mov    -0xc(%ebp),%eax
  101bb1:	89 45 e8             	mov    %eax,-0x18(%ebp)
  101bb4:	eb 55                	jmp    101c0b <drawGlyph+0xa9>
  101bb6:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax
  101bba:	22 45 ef             	and    -0x11(%ebp),%al
  101bbd:	84 c0                	test   %al,%al
  101bbf:	74 43                	je     101c04 <drawGlyph+0xa2>
  101bc1:	c7 c0 08 d0 16 00    	mov    $0x16d008,%eax
  101bc7:	8b 00                	mov    (%eax),%eax
  101bc9:	39 45 e8             	cmp    %eax,-0x18(%ebp)
  101bcc:	72 0d                	jb     101bdb <drawGlyph+0x79>
  101bce:	c7 c0 00 d0 16 00    	mov    $0x16d000,%eax
  101bd4:	8b 00                	mov    (%eax),%eax
  101bd6:	39 45 e8             	cmp    %eax,-0x18(%ebp)
  101bd9:	72 15                	jb     101bf0 <drawGlyph+0x8e>
  101bdb:	8b 45 e8             	mov    -0x18(%ebp),%eax
  101bde:	c1 e8 10             	shr    $0x10,%eax
  101be1:	0f b7 c0             	movzwl %ax,%eax
  101be4:	83 ec 0c             	sub    $0xc,%esp
  101be7:	50                   	push   %eax
  101be8:	e8 02 0c 00 00       	call   1027ef <bga_set_bank>
  101bed:	83 c4 10             	add    $0x10,%esp
  101bf0:	8b 93 80 07 00 00    	mov    0x780(%ebx),%edx
  101bf6:	8b 45 e8             	mov    -0x18(%ebp),%eax
  101bf9:	0f b7 c0             	movzwl %ax,%eax
  101bfc:	01 c2                	add    %eax,%edx
  101bfe:	0f b6 45 d4          	movzbl -0x2c(%ebp),%eax
  101c02:	88 02                	mov    %al,(%edx)
  101c04:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
  101c08:	d0 6d ef             	shrb   -0x11(%ebp)
  101c0b:	80 7d ef 00          	cmpb   $0x0,-0x11(%ebp)
  101c0f:	75 a5                	jne    101bb6 <drawGlyph+0x54>
  101c11:	c7 c0 f0 cf 12 00    	mov    $0x12cff0,%eax
  101c17:	8b 00                	mov    (%eax),%eax
  101c19:	01 45 f4             	add    %eax,-0xc(%ebp)
  101c1c:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
  101c20:	c7 c0 f0 2f 11 00    	mov    $0x112ff0,%eax
  101c26:	0f b6 40 01          	movzbl 0x1(%eax),%eax
  101c2a:	0f b6 c0             	movzbl %al,%eax
  101c2d:	39 45 f0             	cmp    %eax,-0x10(%ebp)
  101c30:	0f 8c 66 ff ff ff    	jl     101b9c <drawGlyph+0x3a>
  101c36:	90                   	nop
  101c37:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  101c3a:	c9                   	leave  
  101c3b:	c3                   	ret    

00101c3c <drawChar>:
  101c3c:	55                   	push   %ebp
  101c3d:	89 e5                	mov    %esp,%ebp
  101c3f:	83 ec 28             	sub    $0x28,%esp
  101c42:	e8 78 e9 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  101c47:	05 b9 13 01 00       	add    $0x113b9,%eax
  101c4c:	8b 4d 10             	mov    0x10(%ebp),%ecx
  101c4f:	8b 55 14             	mov    0x14(%ebp),%edx
  101c52:	88 4d e4             	mov    %cl,-0x1c(%ebp)
  101c55:	88 55 e0             	mov    %dl,-0x20(%ebp)
  101c58:	c7 c2 f0 2f 11 00    	mov    $0x112ff0,%edx
  101c5e:	8b 4a 0c             	mov    0xc(%edx),%ecx
  101c61:	0f be 55 e4          	movsbl -0x1c(%ebp),%edx
  101c65:	c7 c0 00 d0 12 00    	mov    $0x12d000,%eax
  101c6b:	8b 04 90             	mov    (%eax,%edx,4),%eax
  101c6e:	c1 e0 04             	shl    $0x4,%eax
  101c71:	01 c8                	add    %ecx,%eax
  101c73:	89 45 f4             	mov    %eax,-0xc(%ebp)
  101c76:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax
  101c7a:	50                   	push   %eax
  101c7b:	ff 75 f4             	pushl  -0xc(%ebp)
  101c7e:	ff 75 0c             	pushl  0xc(%ebp)
  101c81:	ff 75 08             	pushl  0x8(%ebp)
  101c84:	e8 d9 fe ff ff       	call   101b62 <drawGlyph>
  101c89:	83 c4 10             	add    $0x10,%esp
  101c8c:	90                   	nop
  101c8d:	c9                   	leave  
  101c8e:	c3                   	ret    

00101c8f <drawText>:
  101c8f:	55                   	push   %ebp
  101c90:	89 e5                	mov    %esp,%ebp
  101c92:	83 ec 18             	sub    $0x18,%esp
  101c95:	e8 25 e9 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  101c9a:	05 66 13 01 00       	add    $0x11366,%eax
  101c9f:	8b 45 14             	mov    0x14(%ebp),%eax
  101ca2:	88 45 f4             	mov    %al,-0xc(%ebp)
  101ca5:	eb 27                	jmp    101cce <drawText+0x3f>
  101ca7:	0f b6 55 f4          	movzbl -0xc(%ebp),%edx
  101cab:	8b 45 10             	mov    0x10(%ebp),%eax
  101cae:	8d 48 01             	lea    0x1(%eax),%ecx
  101cb1:	89 4d 10             	mov    %ecx,0x10(%ebp)
  101cb4:	0f b6 00             	movzbl (%eax),%eax
  101cb7:	0f be c0             	movsbl %al,%eax
  101cba:	52                   	push   %edx
  101cbb:	50                   	push   %eax
  101cbc:	ff 75 0c             	pushl  0xc(%ebp)
  101cbf:	ff 75 08             	pushl  0x8(%ebp)
  101cc2:	e8 75 ff ff ff       	call   101c3c <drawChar>
  101cc7:	83 c4 10             	add    $0x10,%esp
  101cca:	83 45 08 08          	addl   $0x8,0x8(%ebp)
  101cce:	8b 45 10             	mov    0x10(%ebp),%eax
  101cd1:	0f b6 00             	movzbl (%eax),%eax
  101cd4:	84 c0                	test   %al,%al
  101cd6:	75 cf                	jne    101ca7 <drawText+0x18>
  101cd8:	90                   	nop
  101cd9:	c9                   	leave  
  101cda:	c3                   	ret    

00101cdb <gotoxy>:
  101cdb:	55                   	push   %ebp
  101cdc:	89 e5                	mov    %esp,%ebp
  101cde:	e8 dc e8 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  101ce3:	05 1d 13 01 00       	add    $0x1131d,%eax
  101ce8:	c7 c2 f8 cf 12 00    	mov    $0x12cff8,%edx
  101cee:	8b 4d 08             	mov    0x8(%ebp),%ecx
  101cf1:	89 0a                	mov    %ecx,(%edx)
  101cf3:	c7 c0 e4 cf 12 00    	mov    $0x12cfe4,%eax
  101cf9:	8b 55 0c             	mov    0xc(%ebp),%edx
  101cfc:	89 10                	mov    %edx,(%eax)
  101cfe:	90                   	nop
  101cff:	5d                   	pop    %ebp
  101d00:	c3                   	ret    

00101d01 <putchar>:
  101d01:	55                   	push   %ebp
  101d02:	89 e5                	mov    %esp,%ebp
  101d04:	56                   	push   %esi
  101d05:	53                   	push   %ebx
  101d06:	83 ec 10             	sub    $0x10,%esp
  101d09:	e8 b5 e8 ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  101d0e:	81 c3 f2 12 01 00    	add    $0x112f2,%ebx
  101d14:	8b 55 08             	mov    0x8(%ebp),%edx
  101d17:	8b 45 0c             	mov    0xc(%ebp),%eax
  101d1a:	88 55 f4             	mov    %dl,-0xc(%ebp)
  101d1d:	88 45 f0             	mov    %al,-0x10(%ebp)
  101d20:	80 7d f4 0a          	cmpb   $0xa,-0xc(%ebp)
  101d24:	75 2d                	jne    101d53 <putchar+0x52>
  101d26:	c7 c0 f8 cf 12 00    	mov    $0x12cff8,%eax
  101d2c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
  101d32:	c7 c0 f0 2f 11 00    	mov    $0x112ff0,%eax
  101d38:	0f b6 40 01          	movzbl 0x1(%eax),%eax
  101d3c:	0f b6 d0             	movzbl %al,%edx
  101d3f:	c7 c0 e4 cf 12 00    	mov    $0x12cfe4,%eax
  101d45:	8b 00                	mov    (%eax),%eax
  101d47:	01 c2                	add    %eax,%edx
  101d49:	c7 c0 e4 cf 12 00    	mov    $0x12cfe4,%eax
  101d4f:	89 10                	mov    %edx,(%eax)
  101d51:	eb 6f                	jmp    101dc2 <putchar+0xc1>
  101d53:	80 7d f4 09          	cmpb   $0x9,-0xc(%ebp)
  101d57:	75 25                	jne    101d7e <putchar+0x7d>
  101d59:	c7 c0 f0 2f 11 00    	mov    $0x112ff0,%eax
  101d5f:	0f b6 00             	movzbl (%eax),%eax
  101d62:	0f b6 c0             	movzbl %al,%eax
  101d65:	c1 e0 02             	shl    $0x2,%eax
  101d68:	89 c2                	mov    %eax,%edx
  101d6a:	c7 c0 f8 cf 12 00    	mov    $0x12cff8,%eax
  101d70:	8b 00                	mov    (%eax),%eax
  101d72:	01 c2                	add    %eax,%edx
  101d74:	c7 c0 f8 cf 12 00    	mov    $0x12cff8,%eax
  101d7a:	89 10                	mov    %edx,(%eax)
  101d7c:	eb 44                	jmp    101dc2 <putchar+0xc1>
  101d7e:	0f b6 55 f0          	movzbl -0x10(%ebp),%edx
  101d82:	0f be 45 f4          	movsbl -0xc(%ebp),%eax
  101d86:	c7 c1 e4 cf 12 00    	mov    $0x12cfe4,%ecx
  101d8c:	8b 09                	mov    (%ecx),%ecx
  101d8e:	89 ce                	mov    %ecx,%esi
  101d90:	c7 c1 f8 cf 12 00    	mov    $0x12cff8,%ecx
  101d96:	8b 09                	mov    (%ecx),%ecx
  101d98:	52                   	push   %edx
  101d99:	50                   	push   %eax
  101d9a:	56                   	push   %esi
  101d9b:	51                   	push   %ecx
  101d9c:	e8 9b fe ff ff       	call   101c3c <drawChar>
  101da1:	83 c4 10             	add    $0x10,%esp
  101da4:	c7 c0 f0 2f 11 00    	mov    $0x112ff0,%eax
  101daa:	0f b6 00             	movzbl (%eax),%eax
  101dad:	0f b6 d0             	movzbl %al,%edx
  101db0:	c7 c0 f8 cf 12 00    	mov    $0x12cff8,%eax
  101db6:	8b 00                	mov    (%eax),%eax
  101db8:	01 c2                	add    %eax,%edx
  101dba:	c7 c0 f8 cf 12 00    	mov    $0x12cff8,%eax
  101dc0:	89 10                	mov    %edx,(%eax)
  101dc2:	c7 c0 f8 cf 12 00    	mov    $0x12cff8,%eax
  101dc8:	8b 10                	mov    (%eax),%edx
  101dca:	c7 c0 e8 cf 12 00    	mov    $0x12cfe8,%eax
  101dd0:	8b 00                	mov    (%eax),%eax
  101dd2:	39 c2                	cmp    %eax,%edx
  101dd4:	72 2b                	jb     101e01 <putchar+0x100>
  101dd6:	c7 c0 f8 cf 12 00    	mov    $0x12cff8,%eax
  101ddc:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
  101de2:	c7 c0 f0 2f 11 00    	mov    $0x112ff0,%eax
  101de8:	0f b6 40 01          	movzbl 0x1(%eax),%eax
  101dec:	0f b6 d0             	movzbl %al,%edx
  101def:	c7 c0 e4 cf 12 00    	mov    $0x12cfe4,%eax
  101df5:	8b 00                	mov    (%eax),%eax
  101df7:	01 c2                	add    %eax,%edx
  101df9:	c7 c0 e4 cf 12 00    	mov    $0x12cfe4,%eax
  101dff:	89 10                	mov    %edx,(%eax)
  101e01:	c7 c0 e4 cf 12 00    	mov    $0x12cfe4,%eax
  101e07:	8b 10                	mov    (%eax),%edx
  101e09:	c7 c0 ec cf 12 00    	mov    $0x12cfec,%eax
  101e0f:	8b 00                	mov    (%eax),%eax
  101e11:	39 c2                	cmp    %eax,%edx
  101e13:	72 0c                	jb     101e21 <putchar+0x120>
  101e15:	c7 c0 e4 cf 12 00    	mov    $0x12cfe4,%eax
  101e1b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
  101e21:	90                   	nop
  101e22:	8d 65 f8             	lea    -0x8(%ebp),%esp
  101e25:	5b                   	pop    %ebx
  101e26:	5e                   	pop    %esi
  101e27:	5d                   	pop    %ebp
  101e28:	c3                   	ret    

00101e29 <printstr>:
  101e29:	55                   	push   %ebp
  101e2a:	89 e5                	mov    %esp,%ebp
  101e2c:	83 ec 18             	sub    $0x18,%esp
  101e2f:	e8 8b e7 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  101e34:	05 cc 11 01 00       	add    $0x111cc,%eax
  101e39:	8b 45 0c             	mov    0xc(%ebp),%eax
  101e3c:	88 45 f4             	mov    %al,-0xc(%ebp)
  101e3f:	eb 20                	jmp    101e61 <printstr+0x38>
  101e41:	0f b6 55 f4          	movzbl -0xc(%ebp),%edx
  101e45:	8b 45 08             	mov    0x8(%ebp),%eax
  101e48:	8d 48 01             	lea    0x1(%eax),%ecx
  101e4b:	89 4d 08             	mov    %ecx,0x8(%ebp)
  101e4e:	0f b6 00             	movzbl (%eax),%eax
  101e51:	0f be c0             	movsbl %al,%eax
  101e54:	83 ec 08             	sub    $0x8,%esp
  101e57:	52                   	push   %edx
  101e58:	50                   	push   %eax
  101e59:	e8 a3 fe ff ff       	call   101d01 <putchar>
  101e5e:	83 c4 10             	add    $0x10,%esp
  101e61:	8b 45 08             	mov    0x8(%ebp),%eax
  101e64:	0f b6 00             	movzbl (%eax),%eax
  101e67:	84 c0                	test   %al,%al
  101e69:	75 d6                	jne    101e41 <printstr+0x18>
  101e6b:	90                   	nop
  101e6c:	c9                   	leave  
  101e6d:	c3                   	ret    

00101e6e <shtctl_init>:
  101e6e:	55                   	push   %ebp
  101e6f:	89 e5                	mov    %esp,%ebp
  101e71:	53                   	push   %ebx
  101e72:	83 ec 14             	sub    $0x14,%esp
  101e75:	e8 49 e7 ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  101e7a:	81 c3 86 11 01 00    	add    $0x11186,%ebx
  101e80:	83 ec 0c             	sub    $0xc,%esp
  101e83:	68 10 24 00 00       	push   $0x2410
  101e88:	e8 b7 0f 00 00       	call   102e44 <mm_alloc_4k>
  101e8d:	83 c4 10             	add    $0x10,%esp
  101e90:	89 c2                	mov    %eax,%edx
  101e92:	c7 c0 f4 cf 12 00    	mov    $0x12cff4,%eax
  101e98:	89 10                	mov    %edx,(%eax)
  101e9a:	c7 c0 f4 cf 12 00    	mov    $0x12cff4,%eax
  101ea0:	8b 00                	mov    (%eax),%eax
  101ea2:	85 c0                	test   %eax,%eax
  101ea4:	74 6f                	je     101f15 <shtctl_init+0xa7>
  101ea6:	c7 c0 f4 cf 12 00    	mov    $0x12cff4,%eax
  101eac:	8b 00                	mov    (%eax),%eax
  101eae:	8b 93 80 07 00 00    	mov    0x780(%ebx),%edx
  101eb4:	89 10                	mov    %edx,(%eax)
  101eb6:	c7 c0 f4 cf 12 00    	mov    $0x12cff4,%eax
  101ebc:	8b 00                	mov    (%eax),%eax
  101ebe:	8b 55 08             	mov    0x8(%ebp),%edx
  101ec1:	89 50 04             	mov    %edx,0x4(%eax)
  101ec4:	c7 c0 f4 cf 12 00    	mov    $0x12cff4,%eax
  101eca:	8b 00                	mov    (%eax),%eax
  101ecc:	8b 55 0c             	mov    0xc(%ebp),%edx
  101ecf:	89 50 08             	mov    %edx,0x8(%eax)
  101ed2:	c7 c0 f4 cf 12 00    	mov    $0x12cff4,%eax
  101ed8:	8b 00                	mov    (%eax),%eax
  101eda:	c7 40 0c ff ff ff ff 	movl   $0xffffffff,0xc(%eax)
  101ee1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  101ee8:	eb 20                	jmp    101f0a <shtctl_init+0x9c>
  101eea:	c7 c0 f4 cf 12 00    	mov    $0x12cff4,%eax
  101ef0:	8b 00                	mov    (%eax),%eax
  101ef2:	8b 55 f4             	mov    -0xc(%ebp),%edx
  101ef5:	83 c2 21             	add    $0x21,%edx
  101ef8:	c1 e2 05             	shl    $0x5,%edx
  101efb:	01 d0                	add    %edx,%eax
  101efd:	83 c0 0c             	add    $0xc,%eax
  101f00:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
  101f06:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
  101f0a:	81 7d f4 ff 00 00 00 	cmpl   $0xff,-0xc(%ebp)
  101f11:	7e d7                	jle    101eea <shtctl_init+0x7c>
  101f13:	eb 01                	jmp    101f16 <shtctl_init+0xa8>
  101f15:	90                   	nop
  101f16:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  101f19:	c9                   	leave  
  101f1a:	c3                   	ret    

00101f1b <sheet_alloc>:
  101f1b:	55                   	push   %ebp
  101f1c:	89 e5                	mov    %esp,%ebp
  101f1e:	83 ec 10             	sub    $0x10,%esp
  101f21:	e8 99 e6 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  101f26:	05 da 10 01 00       	add    $0x110da,%eax
  101f2b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  101f32:	eb 52                	jmp    101f86 <sheet_alloc+0x6b>
  101f34:	c7 c2 f4 cf 12 00    	mov    $0x12cff4,%edx
  101f3a:	8b 12                	mov    (%edx),%edx
  101f3c:	8b 4d fc             	mov    -0x4(%ebp),%ecx
  101f3f:	83 c1 21             	add    $0x21,%ecx
  101f42:	c1 e1 05             	shl    $0x5,%ecx
  101f45:	01 ca                	add    %ecx,%edx
  101f47:	83 c2 0c             	add    $0xc,%edx
  101f4a:	8b 12                	mov    (%edx),%edx
  101f4c:	85 d2                	test   %edx,%edx
  101f4e:	75 32                	jne    101f82 <sheet_alloc+0x67>
  101f50:	c7 c0 f4 cf 12 00    	mov    $0x12cff4,%eax
  101f56:	8b 00                	mov    (%eax),%eax
  101f58:	8b 55 fc             	mov    -0x4(%ebp),%edx
  101f5b:	c1 e2 05             	shl    $0x5,%edx
  101f5e:	81 c2 10 04 00 00    	add    $0x410,%edx
  101f64:	01 d0                	add    %edx,%eax
  101f66:	89 45 f8             	mov    %eax,-0x8(%ebp)
  101f69:	8b 45 f8             	mov    -0x8(%ebp),%eax
  101f6c:	c7 40 1c 01 00 00 00 	movl   $0x1,0x1c(%eax)
  101f73:	8b 45 f8             	mov    -0x8(%ebp),%eax
  101f76:	c7 40 18 ff ff ff ff 	movl   $0xffffffff,0x18(%eax)
  101f7d:	8b 45 f8             	mov    -0x8(%ebp),%eax
  101f80:	eb 12                	jmp    101f94 <sheet_alloc+0x79>
  101f82:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
  101f86:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
  101f8d:	7e a5                	jle    101f34 <sheet_alloc+0x19>
  101f8f:	b8 00 00 00 00       	mov    $0x0,%eax
  101f94:	c9                   	leave  
  101f95:	c3                   	ret    

00101f96 <sheet_setbuf>:
  101f96:	55                   	push   %ebp
  101f97:	89 e5                	mov    %esp,%ebp
  101f99:	e8 21 e6 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  101f9e:	05 62 10 01 00       	add    $0x11062,%eax
  101fa3:	8b 45 08             	mov    0x8(%ebp),%eax
  101fa6:	8b 55 0c             	mov    0xc(%ebp),%edx
  101fa9:	89 10                	mov    %edx,(%eax)
  101fab:	8b 45 08             	mov    0x8(%ebp),%eax
  101fae:	8b 55 10             	mov    0x10(%ebp),%edx
  101fb1:	89 50 04             	mov    %edx,0x4(%eax)
  101fb4:	8b 45 08             	mov    0x8(%ebp),%eax
  101fb7:	8b 55 14             	mov    0x14(%ebp),%edx
  101fba:	89 50 08             	mov    %edx,0x8(%eax)
  101fbd:	8b 45 08             	mov    0x8(%ebp),%eax
  101fc0:	8b 55 18             	mov    0x18(%ebp),%edx
  101fc3:	89 50 14             	mov    %edx,0x14(%eax)
  101fc6:	90                   	nop
  101fc7:	5d                   	pop    %ebp
  101fc8:	c3                   	ret    

00101fc9 <sheet_updown>:
  101fc9:	55                   	push   %ebp
  101fca:	89 e5                	mov    %esp,%ebp
  101fcc:	56                   	push   %esi
  101fcd:	53                   	push   %ebx
  101fce:	83 ec 10             	sub    $0x10,%esp
  101fd1:	e8 e9 e5 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  101fd6:	05 2a 10 01 00       	add    $0x1102a,%eax
  101fdb:	8b 55 08             	mov    0x8(%ebp),%edx
  101fde:	8b 52 18             	mov    0x18(%edx),%edx
  101fe1:	89 55 f0             	mov    %edx,-0x10(%ebp)
  101fe4:	c7 c2 f4 cf 12 00    	mov    $0x12cff4,%edx
  101fea:	8b 12                	mov    (%edx),%edx
  101fec:	8b 52 0c             	mov    0xc(%edx),%edx
  101fef:	83 c2 01             	add    $0x1,%edx
  101ff2:	39 55 0c             	cmp    %edx,0xc(%ebp)
  101ff5:	7e 11                	jle    102008 <sheet_updown+0x3f>
  101ff7:	c7 c2 f4 cf 12 00    	mov    $0x12cff4,%edx
  101ffd:	8b 12                	mov    (%edx),%edx
  101fff:	8b 52 0c             	mov    0xc(%edx),%edx
  102002:	83 c2 01             	add    $0x1,%edx
  102005:	89 55 0c             	mov    %edx,0xc(%ebp)
  102008:	83 7d 0c ff          	cmpl   $0xffffffff,0xc(%ebp)
  10200c:	7d 07                	jge    102015 <sheet_updown+0x4c>
  10200e:	c7 45 0c ff ff ff ff 	movl   $0xffffffff,0xc(%ebp)
  102015:	8b 55 08             	mov    0x8(%ebp),%edx
  102018:	8b 4d 0c             	mov    0xc(%ebp),%ecx
  10201b:	89 4a 18             	mov    %ecx,0x18(%edx)
  10201e:	8b 55 f0             	mov    -0x10(%ebp),%edx
  102021:	3b 55 0c             	cmp    0xc(%ebp),%edx
  102024:	0f 8e 20 01 00 00    	jle    10214a <sheet_updown+0x181>
  10202a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
  10202e:	78 66                	js     102096 <sheet_updown+0xcd>
  102030:	8b 55 f0             	mov    -0x10(%ebp),%edx
  102033:	89 55 f4             	mov    %edx,-0xc(%ebp)
  102036:	eb 40                	jmp    102078 <sheet_updown+0xaf>
  102038:	c7 c2 f4 cf 12 00    	mov    $0x12cff4,%edx
  10203e:	8b 0a                	mov    (%edx),%ecx
  102040:	8b 55 f4             	mov    -0xc(%ebp),%edx
  102043:	8d 5a ff             	lea    -0x1(%edx),%ebx
  102046:	c7 c2 f4 cf 12 00    	mov    $0x12cff4,%edx
  10204c:	8b 12                	mov    (%edx),%edx
  10204e:	83 c3 04             	add    $0x4,%ebx
  102051:	8b 0c 99             	mov    (%ecx,%ebx,4),%ecx
  102054:	8b 5d f4             	mov    -0xc(%ebp),%ebx
  102057:	83 c3 04             	add    $0x4,%ebx
  10205a:	89 0c 9a             	mov    %ecx,(%edx,%ebx,4)
  10205d:	c7 c2 f4 cf 12 00    	mov    $0x12cff4,%edx
  102063:	8b 12                	mov    (%edx),%edx
  102065:	8b 4d f4             	mov    -0xc(%ebp),%ecx
  102068:	83 c1 04             	add    $0x4,%ecx
  10206b:	8b 14 8a             	mov    (%edx,%ecx,4),%edx
  10206e:	8b 4d f4             	mov    -0xc(%ebp),%ecx
  102071:	89 4a 18             	mov    %ecx,0x18(%edx)
  102074:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
  102078:	8b 55 f4             	mov    -0xc(%ebp),%edx
  10207b:	3b 55 0c             	cmp    0xc(%ebp),%edx
  10207e:	7f b8                	jg     102038 <sheet_updown+0x6f>
  102080:	c7 c0 f4 cf 12 00    	mov    $0x12cff4,%eax
  102086:	8b 00                	mov    (%eax),%eax
  102088:	8b 55 0c             	mov    0xc(%ebp),%edx
  10208b:	8d 4a 04             	lea    0x4(%edx),%ecx
  10208e:	8b 55 08             	mov    0x8(%ebp),%edx
  102091:	89 14 88             	mov    %edx,(%eax,%ecx,4)
  102094:	eb 79                	jmp    10210f <sheet_updown+0x146>
  102096:	c7 c2 f4 cf 12 00    	mov    $0x12cff4,%edx
  10209c:	8b 12                	mov    (%edx),%edx
  10209e:	8b 52 0c             	mov    0xc(%edx),%edx
  1020a1:	39 55 f0             	cmp    %edx,-0x10(%ebp)
  1020a4:	7d 58                	jge    1020fe <sheet_updown+0x135>
  1020a6:	8b 55 f0             	mov    -0x10(%ebp),%edx
  1020a9:	89 55 f4             	mov    %edx,-0xc(%ebp)
  1020ac:	eb 40                	jmp    1020ee <sheet_updown+0x125>
  1020ae:	c7 c2 f4 cf 12 00    	mov    $0x12cff4,%edx
  1020b4:	8b 0a                	mov    (%edx),%ecx
  1020b6:	8b 55 f4             	mov    -0xc(%ebp),%edx
  1020b9:	8d 5a 01             	lea    0x1(%edx),%ebx
  1020bc:	c7 c2 f4 cf 12 00    	mov    $0x12cff4,%edx
  1020c2:	8b 12                	mov    (%edx),%edx
  1020c4:	83 c3 04             	add    $0x4,%ebx
  1020c7:	8b 0c 99             	mov    (%ecx,%ebx,4),%ecx
  1020ca:	8b 5d f4             	mov    -0xc(%ebp),%ebx
  1020cd:	83 c3 04             	add    $0x4,%ebx
  1020d0:	89 0c 9a             	mov    %ecx,(%edx,%ebx,4)
  1020d3:	c7 c2 f4 cf 12 00    	mov    $0x12cff4,%edx
  1020d9:	8b 12                	mov    (%edx),%edx
  1020db:	8b 4d f4             	mov    -0xc(%ebp),%ecx
  1020de:	83 c1 04             	add    $0x4,%ecx
  1020e1:	8b 14 8a             	mov    (%edx,%ecx,4),%edx
  1020e4:	8b 4d f4             	mov    -0xc(%ebp),%ecx
  1020e7:	89 4a 18             	mov    %ecx,0x18(%edx)
  1020ea:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
  1020ee:	c7 c2 f4 cf 12 00    	mov    $0x12cff4,%edx
  1020f4:	8b 12                	mov    (%edx),%edx
  1020f6:	8b 52 0c             	mov    0xc(%edx),%edx
  1020f9:	39 55 f4             	cmp    %edx,-0xc(%ebp)
  1020fc:	7c b0                	jl     1020ae <sheet_updown+0xe5>
  1020fe:	c7 c0 f4 cf 12 00    	mov    $0x12cff4,%eax
  102104:	8b 00                	mov    (%eax),%eax
  102106:	8b 50 0c             	mov    0xc(%eax),%edx
  102109:	83 ea 01             	sub    $0x1,%edx
  10210c:	89 50 0c             	mov    %edx,0xc(%eax)
  10210f:	8b 45 08             	mov    0x8(%ebp),%eax
  102112:	8b 50 10             	mov    0x10(%eax),%edx
  102115:	8b 45 08             	mov    0x8(%ebp),%eax
  102118:	8b 40 08             	mov    0x8(%eax),%eax
  10211b:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
  10211e:	8b 45 08             	mov    0x8(%ebp),%eax
  102121:	8b 50 0c             	mov    0xc(%eax),%edx
  102124:	8b 45 08             	mov    0x8(%ebp),%eax
  102127:	8b 40 04             	mov    0x4(%eax),%eax
  10212a:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
  10212d:	8b 45 08             	mov    0x8(%ebp),%eax
  102130:	8b 50 10             	mov    0x10(%eax),%edx
  102133:	8b 45 08             	mov    0x8(%ebp),%eax
  102136:	8b 40 0c             	mov    0xc(%eax),%eax
  102139:	53                   	push   %ebx
  10213a:	51                   	push   %ecx
  10213b:	52                   	push   %edx
  10213c:	50                   	push   %eax
  10213d:	e8 9f 01 00 00       	call   1022e1 <sheet_refreshsub>
  102142:	83 c4 10             	add    $0x10,%esp
  102145:	e9 34 01 00 00       	jmp    10227e <sheet_updown+0x2b5>
  10214a:	8b 55 f0             	mov    -0x10(%ebp),%edx
  10214d:	3b 55 0c             	cmp    0xc(%ebp),%edx
  102150:	0f 8d 28 01 00 00    	jge    10227e <sheet_updown+0x2b5>
  102156:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
  10215a:	78 69                	js     1021c5 <sheet_updown+0x1fc>
  10215c:	8b 55 f0             	mov    -0x10(%ebp),%edx
  10215f:	89 55 f4             	mov    %edx,-0xc(%ebp)
  102162:	eb 40                	jmp    1021a4 <sheet_updown+0x1db>
  102164:	c7 c2 f4 cf 12 00    	mov    $0x12cff4,%edx
  10216a:	8b 0a                	mov    (%edx),%ecx
  10216c:	8b 55 f4             	mov    -0xc(%ebp),%edx
  10216f:	8d 5a 01             	lea    0x1(%edx),%ebx
  102172:	c7 c2 f4 cf 12 00    	mov    $0x12cff4,%edx
  102178:	8b 12                	mov    (%edx),%edx
  10217a:	83 c3 04             	add    $0x4,%ebx
  10217d:	8b 0c 99             	mov    (%ecx,%ebx,4),%ecx
  102180:	8b 5d f4             	mov    -0xc(%ebp),%ebx
  102183:	83 c3 04             	add    $0x4,%ebx
  102186:	89 0c 9a             	mov    %ecx,(%edx,%ebx,4)
  102189:	c7 c2 f4 cf 12 00    	mov    $0x12cff4,%edx
  10218f:	8b 12                	mov    (%edx),%edx
  102191:	8b 4d f4             	mov    -0xc(%ebp),%ecx
  102194:	83 c1 04             	add    $0x4,%ecx
  102197:	8b 14 8a             	mov    (%edx,%ecx,4),%edx
  10219a:	8b 4d f4             	mov    -0xc(%ebp),%ecx
  10219d:	89 4a 18             	mov    %ecx,0x18(%edx)
  1021a0:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
  1021a4:	8b 55 f4             	mov    -0xc(%ebp),%edx
  1021a7:	3b 55 0c             	cmp    0xc(%ebp),%edx
  1021aa:	7c b8                	jl     102164 <sheet_updown+0x19b>
  1021ac:	c7 c0 f4 cf 12 00    	mov    $0x12cff4,%eax
  1021b2:	8b 00                	mov    (%eax),%eax
  1021b4:	8b 55 0c             	mov    0xc(%ebp),%edx
  1021b7:	8d 4a 04             	lea    0x4(%edx),%ecx
  1021ba:	8b 55 08             	mov    0x8(%ebp),%edx
  1021bd:	89 14 88             	mov    %edx,(%eax,%ecx,4)
  1021c0:	e9 83 00 00 00       	jmp    102248 <sheet_updown+0x27f>
  1021c5:	c7 c2 f4 cf 12 00    	mov    $0x12cff4,%edx
  1021cb:	8b 12                	mov    (%edx),%edx
  1021cd:	8b 52 0c             	mov    0xc(%edx),%edx
  1021d0:	89 55 f4             	mov    %edx,-0xc(%ebp)
  1021d3:	eb 46                	jmp    10221b <sheet_updown+0x252>
  1021d5:	c7 c2 f4 cf 12 00    	mov    $0x12cff4,%edx
  1021db:	8b 0a                	mov    (%edx),%ecx
  1021dd:	c7 c2 f4 cf 12 00    	mov    $0x12cff4,%edx
  1021e3:	8b 12                	mov    (%edx),%edx
  1021e5:	8b 5d f4             	mov    -0xc(%ebp),%ebx
  1021e8:	8d 73 01             	lea    0x1(%ebx),%esi
  1021eb:	8b 5d f4             	mov    -0xc(%ebp),%ebx
  1021ee:	83 c3 04             	add    $0x4,%ebx
  1021f1:	8b 0c 99             	mov    (%ecx,%ebx,4),%ecx
  1021f4:	8d 5e 04             	lea    0x4(%esi),%ebx
  1021f7:	89 0c 9a             	mov    %ecx,(%edx,%ebx,4)
  1021fa:	c7 c2 f4 cf 12 00    	mov    $0x12cff4,%edx
  102200:	8b 12                	mov    (%edx),%edx
  102202:	8b 4d f4             	mov    -0xc(%ebp),%ecx
  102205:	83 c1 01             	add    $0x1,%ecx
  102208:	83 c1 04             	add    $0x4,%ecx
  10220b:	8b 14 8a             	mov    (%edx,%ecx,4),%edx
  10220e:	8b 4d f4             	mov    -0xc(%ebp),%ecx
  102211:	83 c1 01             	add    $0x1,%ecx
  102214:	89 4a 18             	mov    %ecx,0x18(%edx)
  102217:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
  10221b:	8b 55 f4             	mov    -0xc(%ebp),%edx
  10221e:	3b 55 0c             	cmp    0xc(%ebp),%edx
  102221:	7d b2                	jge    1021d5 <sheet_updown+0x20c>
  102223:	c7 c2 f4 cf 12 00    	mov    $0x12cff4,%edx
  102229:	8b 12                	mov    (%edx),%edx
  10222b:	8b 4d 0c             	mov    0xc(%ebp),%ecx
  10222e:	8d 59 04             	lea    0x4(%ecx),%ebx
  102231:	8b 4d 08             	mov    0x8(%ebp),%ecx
  102234:	89 0c 9a             	mov    %ecx,(%edx,%ebx,4)
  102237:	c7 c0 f4 cf 12 00    	mov    $0x12cff4,%eax
  10223d:	8b 00                	mov    (%eax),%eax
  10223f:	8b 50 0c             	mov    0xc(%eax),%edx
  102242:	83 c2 01             	add    $0x1,%edx
  102245:	89 50 0c             	mov    %edx,0xc(%eax)
  102248:	8b 45 08             	mov    0x8(%ebp),%eax
  10224b:	8b 50 10             	mov    0x10(%eax),%edx
  10224e:	8b 45 08             	mov    0x8(%ebp),%eax
  102251:	8b 40 08             	mov    0x8(%eax),%eax
  102254:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
  102257:	8b 45 08             	mov    0x8(%ebp),%eax
  10225a:	8b 50 0c             	mov    0xc(%eax),%edx
  10225d:	8b 45 08             	mov    0x8(%ebp),%eax
  102260:	8b 40 04             	mov    0x4(%eax),%eax
  102263:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
  102266:	8b 45 08             	mov    0x8(%ebp),%eax
  102269:	8b 50 10             	mov    0x10(%eax),%edx
  10226c:	8b 45 08             	mov    0x8(%ebp),%eax
  10226f:	8b 40 0c             	mov    0xc(%eax),%eax
  102272:	53                   	push   %ebx
  102273:	51                   	push   %ecx
  102274:	52                   	push   %edx
  102275:	50                   	push   %eax
  102276:	e8 66 00 00 00       	call   1022e1 <sheet_refreshsub>
  10227b:	83 c4 10             	add    $0x10,%esp
  10227e:	90                   	nop
  10227f:	8d 65 f8             	lea    -0x8(%ebp),%esp
  102282:	5b                   	pop    %ebx
  102283:	5e                   	pop    %esi
  102284:	5d                   	pop    %ebp
  102285:	c3                   	ret    

00102286 <sheet_refresh>:
  102286:	55                   	push   %ebp
  102287:	89 e5                	mov    %esp,%ebp
  102289:	56                   	push   %esi
  10228a:	53                   	push   %ebx
  10228b:	e8 2f e3 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  102290:	05 70 0d 01 00       	add    $0x10d70,%eax
  102295:	8b 45 08             	mov    0x8(%ebp),%eax
  102298:	8b 40 18             	mov    0x18(%eax),%eax
  10229b:	85 c0                	test   %eax,%eax
  10229d:	78 3a                	js     1022d9 <sheet_refresh+0x53>
  10229f:	8b 45 08             	mov    0x8(%ebp),%eax
  1022a2:	8b 50 10             	mov    0x10(%eax),%edx
  1022a5:	8b 45 18             	mov    0x18(%ebp),%eax
  1022a8:	8d 1c 02             	lea    (%edx,%eax,1),%ebx
  1022ab:	8b 45 08             	mov    0x8(%ebp),%eax
  1022ae:	8b 50 0c             	mov    0xc(%eax),%edx
  1022b1:	8b 45 14             	mov    0x14(%ebp),%eax
  1022b4:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
  1022b7:	8b 45 08             	mov    0x8(%ebp),%eax
  1022ba:	8b 50 10             	mov    0x10(%eax),%edx
  1022bd:	8b 45 10             	mov    0x10(%ebp),%eax
  1022c0:	01 c2                	add    %eax,%edx
  1022c2:	8b 45 08             	mov    0x8(%ebp),%eax
  1022c5:	8b 70 0c             	mov    0xc(%eax),%esi
  1022c8:	8b 45 0c             	mov    0xc(%ebp),%eax
  1022cb:	01 f0                	add    %esi,%eax
  1022cd:	53                   	push   %ebx
  1022ce:	51                   	push   %ecx
  1022cf:	52                   	push   %edx
  1022d0:	50                   	push   %eax
  1022d1:	e8 0b 00 00 00       	call   1022e1 <sheet_refreshsub>
  1022d6:	83 c4 10             	add    $0x10,%esp
  1022d9:	90                   	nop
  1022da:	8d 65 f8             	lea    -0x8(%ebp),%esp
  1022dd:	5b                   	pop    %ebx
  1022de:	5e                   	pop    %esi
  1022df:	5d                   	pop    %ebp
  1022e0:	c3                   	ret    

001022e1 <sheet_refreshsub>:
  1022e1:	55                   	push   %ebp
  1022e2:	89 e5                	mov    %esp,%ebp
  1022e4:	53                   	push   %ebx
  1022e5:	83 ec 44             	sub    $0x44,%esp
  1022e8:	e8 d6 e2 ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  1022ed:	81 c3 13 0d 01 00    	add    $0x10d13,%ebx
  1022f3:	c7 c0 f4 cf 12 00    	mov    $0x12cff4,%eax
  1022f9:	8b 00                	mov    (%eax),%eax
  1022fb:	8b 00                	mov    (%eax),%eax
  1022fd:	89 45 d8             	mov    %eax,-0x28(%ebp)
  102300:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  102307:	e9 28 01 00 00       	jmp    102434 <sheet_refreshsub+0x153>
  10230c:	c7 c0 f4 cf 12 00    	mov    $0x12cff4,%eax
  102312:	8b 00                	mov    (%eax),%eax
  102314:	8b 55 f4             	mov    -0xc(%ebp),%edx
  102317:	83 c2 04             	add    $0x4,%edx
  10231a:	8b 04 90             	mov    (%eax,%edx,4),%eax
  10231d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
  102320:	8b 45 d4             	mov    -0x2c(%ebp),%eax
  102323:	8b 00                	mov    (%eax),%eax
  102325:	89 45 d0             	mov    %eax,-0x30(%ebp)
  102328:	8b 45 d4             	mov    -0x2c(%ebp),%eax
  10232b:	8b 40 0c             	mov    0xc(%eax),%eax
  10232e:	8b 55 08             	mov    0x8(%ebp),%edx
  102331:	29 c2                	sub    %eax,%edx
  102333:	89 d0                	mov    %edx,%eax
  102335:	89 45 f0             	mov    %eax,-0x10(%ebp)
  102338:	8b 45 d4             	mov    -0x2c(%ebp),%eax
  10233b:	8b 40 0c             	mov    0xc(%eax),%eax
  10233e:	8b 55 10             	mov    0x10(%ebp),%edx
  102341:	29 c2                	sub    %eax,%edx
  102343:	89 d0                	mov    %edx,%eax
  102345:	89 45 ec             	mov    %eax,-0x14(%ebp)
  102348:	8b 45 d4             	mov    -0x2c(%ebp),%eax
  10234b:	8b 40 10             	mov    0x10(%eax),%eax
  10234e:	8b 55 0c             	mov    0xc(%ebp),%edx
  102351:	29 c2                	sub    %eax,%edx
  102353:	89 d0                	mov    %edx,%eax
  102355:	89 45 e8             	mov    %eax,-0x18(%ebp)
  102358:	8b 45 d4             	mov    -0x2c(%ebp),%eax
  10235b:	8b 40 10             	mov    0x10(%eax),%eax
  10235e:	8b 55 14             	mov    0x14(%ebp),%edx
  102361:	29 c2                	sub    %eax,%edx
  102363:	89 d0                	mov    %edx,%eax
  102365:	89 45 e4             	mov    %eax,-0x1c(%ebp)
  102368:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
  10236c:	79 07                	jns    102375 <sheet_refreshsub+0x94>
  10236e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
  102375:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
  102379:	79 07                	jns    102382 <sheet_refreshsub+0xa1>
  10237b:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
  102382:	8b 45 d4             	mov    -0x2c(%ebp),%eax
  102385:	8b 40 04             	mov    0x4(%eax),%eax
  102388:	39 45 ec             	cmp    %eax,-0x14(%ebp)
  10238b:	7e 09                	jle    102396 <sheet_refreshsub+0xb5>
  10238d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
  102390:	8b 40 04             	mov    0x4(%eax),%eax
  102393:	89 45 ec             	mov    %eax,-0x14(%ebp)
  102396:	8b 45 d4             	mov    -0x2c(%ebp),%eax
  102399:	8b 40 08             	mov    0x8(%eax),%eax
  10239c:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
  10239f:	7e 09                	jle    1023aa <sheet_refreshsub+0xc9>
  1023a1:	8b 45 d4             	mov    -0x2c(%ebp),%eax
  1023a4:	8b 40 08             	mov    0x8(%eax),%eax
  1023a7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
  1023aa:	8b 45 e8             	mov    -0x18(%ebp),%eax
  1023ad:	89 45 e0             	mov    %eax,-0x20(%ebp)
  1023b0:	eb 76                	jmp    102428 <sheet_refreshsub+0x147>
  1023b2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
  1023b5:	8b 50 10             	mov    0x10(%eax),%edx
  1023b8:	8b 45 e0             	mov    -0x20(%ebp),%eax
  1023bb:	01 d0                	add    %edx,%eax
  1023bd:	89 45 cc             	mov    %eax,-0x34(%ebp)
  1023c0:	8b 45 f0             	mov    -0x10(%ebp),%eax
  1023c3:	89 45 dc             	mov    %eax,-0x24(%ebp)
  1023c6:	eb 54                	jmp    10241c <sheet_refreshsub+0x13b>
  1023c8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
  1023cb:	8b 50 0c             	mov    0xc(%eax),%edx
  1023ce:	8b 45 dc             	mov    -0x24(%ebp),%eax
  1023d1:	01 d0                	add    %edx,%eax
  1023d3:	89 45 c8             	mov    %eax,-0x38(%ebp)
  1023d6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
  1023d9:	8b 40 04             	mov    0x4(%eax),%eax
  1023dc:	0f af 45 e0          	imul   -0x20(%ebp),%eax
  1023e0:	89 c2                	mov    %eax,%edx
  1023e2:	8b 45 dc             	mov    -0x24(%ebp),%eax
  1023e5:	01 d0                	add    %edx,%eax
  1023e7:	89 c2                	mov    %eax,%edx
  1023e9:	8b 45 d0             	mov    -0x30(%ebp),%eax
  1023ec:	01 d0                	add    %edx,%eax
  1023ee:	0f b6 00             	movzbl (%eax),%eax
  1023f1:	88 45 c7             	mov    %al,-0x39(%ebp)
  1023f4:	0f b6 55 c7          	movzbl -0x39(%ebp),%edx
  1023f8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
  1023fb:	8b 40 14             	mov    0x14(%eax),%eax
  1023fe:	39 c2                	cmp    %eax,%edx
  102400:	74 16                	je     102418 <sheet_refreshsub+0x137>
  102402:	0f b6 45 c7          	movzbl -0x39(%ebp),%eax
  102406:	83 ec 04             	sub    $0x4,%esp
  102409:	50                   	push   %eax
  10240a:	ff 75 cc             	pushl  -0x34(%ebp)
  10240d:	ff 75 c8             	pushl  -0x38(%ebp)
  102410:	e8 a2 f5 ff ff       	call   1019b7 <putPixel>
  102415:	83 c4 10             	add    $0x10,%esp
  102418:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
  10241c:	8b 45 dc             	mov    -0x24(%ebp),%eax
  10241f:	3b 45 ec             	cmp    -0x14(%ebp),%eax
  102422:	7c a4                	jl     1023c8 <sheet_refreshsub+0xe7>
  102424:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)
  102428:	8b 45 e0             	mov    -0x20(%ebp),%eax
  10242b:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
  10242e:	7c 82                	jl     1023b2 <sheet_refreshsub+0xd1>
  102430:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
  102434:	c7 c0 f4 cf 12 00    	mov    $0x12cff4,%eax
  10243a:	8b 00                	mov    (%eax),%eax
  10243c:	8b 40 0c             	mov    0xc(%eax),%eax
  10243f:	39 45 f4             	cmp    %eax,-0xc(%ebp)
  102442:	0f 8e c4 fe ff ff    	jle    10230c <sheet_refreshsub+0x2b>
  102448:	90                   	nop
  102449:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  10244c:	c9                   	leave  
  10244d:	c3                   	ret    

0010244e <sheet_slide>:
  10244e:	55                   	push   %ebp
  10244f:	89 e5                	mov    %esp,%ebp
  102451:	83 ec 18             	sub    $0x18,%esp
  102454:	e8 66 e1 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  102459:	05 a7 0b 01 00       	add    $0x10ba7,%eax
  10245e:	8b 45 08             	mov    0x8(%ebp),%eax
  102461:	8b 40 0c             	mov    0xc(%eax),%eax
  102464:	89 45 f4             	mov    %eax,-0xc(%ebp)
  102467:	8b 45 08             	mov    0x8(%ebp),%eax
  10246a:	8b 40 10             	mov    0x10(%eax),%eax
  10246d:	89 45 f0             	mov    %eax,-0x10(%ebp)
  102470:	8b 45 08             	mov    0x8(%ebp),%eax
  102473:	8b 55 0c             	mov    0xc(%ebp),%edx
  102476:	89 50 0c             	mov    %edx,0xc(%eax)
  102479:	8b 45 08             	mov    0x8(%ebp),%eax
  10247c:	8b 55 10             	mov    0x10(%ebp),%edx
  10247f:	89 50 10             	mov    %edx,0x10(%eax)
  102482:	8b 45 08             	mov    0x8(%ebp),%eax
  102485:	8b 40 18             	mov    0x18(%eax),%eax
  102488:	85 c0                	test   %eax,%eax
  10248a:	78 4c                	js     1024d8 <sheet_slide+0x8a>
  10248c:	8b 45 08             	mov    0x8(%ebp),%eax
  10248f:	8b 50 08             	mov    0x8(%eax),%edx
  102492:	8b 45 f0             	mov    -0x10(%ebp),%eax
  102495:	01 c2                	add    %eax,%edx
  102497:	8b 45 08             	mov    0x8(%ebp),%eax
  10249a:	8b 48 04             	mov    0x4(%eax),%ecx
  10249d:	8b 45 f4             	mov    -0xc(%ebp),%eax
  1024a0:	01 c8                	add    %ecx,%eax
  1024a2:	52                   	push   %edx
  1024a3:	50                   	push   %eax
  1024a4:	ff 75 f0             	pushl  -0x10(%ebp)
  1024a7:	ff 75 f4             	pushl  -0xc(%ebp)
  1024aa:	e8 32 fe ff ff       	call   1022e1 <sheet_refreshsub>
  1024af:	83 c4 10             	add    $0x10,%esp
  1024b2:	8b 45 08             	mov    0x8(%ebp),%eax
  1024b5:	8b 50 08             	mov    0x8(%eax),%edx
  1024b8:	8b 45 10             	mov    0x10(%ebp),%eax
  1024bb:	01 c2                	add    %eax,%edx
  1024bd:	8b 45 08             	mov    0x8(%ebp),%eax
  1024c0:	8b 48 04             	mov    0x4(%eax),%ecx
  1024c3:	8b 45 0c             	mov    0xc(%ebp),%eax
  1024c6:	01 c8                	add    %ecx,%eax
  1024c8:	52                   	push   %edx
  1024c9:	50                   	push   %eax
  1024ca:	ff 75 10             	pushl  0x10(%ebp)
  1024cd:	ff 75 0c             	pushl  0xc(%ebp)
  1024d0:	e8 0c fe ff ff       	call   1022e1 <sheet_refreshsub>
  1024d5:	83 c4 10             	add    $0x10,%esp
  1024d8:	90                   	nop
  1024d9:	c9                   	leave  
  1024da:	c3                   	ret    

001024db <sheet_free>:
  1024db:	55                   	push   %ebp
  1024dc:	89 e5                	mov    %esp,%ebp
  1024de:	83 ec 08             	sub    $0x8,%esp
  1024e1:	e8 d9 e0 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  1024e6:	05 1a 0b 01 00       	add    $0x10b1a,%eax
  1024eb:	8b 45 08             	mov    0x8(%ebp),%eax
  1024ee:	8b 40 18             	mov    0x18(%eax),%eax
  1024f1:	85 c0                	test   %eax,%eax
  1024f3:	78 10                	js     102505 <sheet_free+0x2a>
  1024f5:	83 ec 08             	sub    $0x8,%esp
  1024f8:	6a ff                	push   $0xffffffff
  1024fa:	ff 75 08             	pushl  0x8(%ebp)
  1024fd:	e8 c7 fa ff ff       	call   101fc9 <sheet_updown>
  102502:	83 c4 10             	add    $0x10,%esp
  102505:	8b 45 08             	mov    0x8(%ebp),%eax
  102508:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
  10250f:	90                   	nop
  102510:	c9                   	leave  
  102511:	c3                   	ret    
  102512:	66 90                	xchg   %ax,%ax
  102514:	66 90                	xchg   %ax,%ax
  102516:	66 90                	xchg   %ax,%ax
  102518:	66 90                	xchg   %ax,%ax
  10251a:	66 90                	xchg   %ax,%ax
  10251c:	66 90                	xchg   %ax,%ax
  10251e:	66 90                	xchg   %ax,%ax

00102520 <io_hlt>:
  102520:	f4                   	hlt    

00102521 <io_sti>:
  102521:	fb                   	sti    
  102522:	c3                   	ret    

00102523 <io_cli>:
  102523:	fa                   	cli    
  102524:	c3                   	ret    

00102525 <io_load_eflags>:
  102525:	9c                   	pushf  
  102526:	58                   	pop    %eax
  102527:	c3                   	ret    

00102528 <io_store_eflags>:
  102528:	8b 44 24 04          	mov    0x4(%esp),%eax
  10252c:	50                   	push   %eax
  10252d:	9d                   	popf   
  10252e:	c3                   	ret    

0010252f <io_load_cr0>:
  10252f:	0f 20 c0             	mov    %cr0,%eax
  102532:	c3                   	ret    

00102533 <io_store_cr0>:
  102533:	8b 44 24 04          	mov    0x4(%esp),%eax
  102537:	0f 22 c0             	mov    %eax,%cr0
  10253a:	c3                   	ret    

0010253b <in8>:
  10253b:	8b 54 24 04          	mov    0x4(%esp),%edx
  10253f:	b8 00 00 00 00       	mov    $0x0,%eax
  102544:	ec                   	in     (%dx),%al
  102545:	c3                   	ret    

00102546 <in16>:
  102546:	8b 54 24 04          	mov    0x4(%esp),%edx
  10254a:	b8 00 00 00 00       	mov    $0x0,%eax
  10254f:	66 ed                	in     (%dx),%ax
  102551:	c3                   	ret    

00102552 <in32>:
  102552:	8b 54 24 04          	mov    0x4(%esp),%edx
  102556:	ed                   	in     (%dx),%eax
  102557:	c3                   	ret    

00102558 <out8>:
  102558:	8b 54 24 04          	mov    0x4(%esp),%edx
  10255c:	8a 44 24 08          	mov    0x8(%esp),%al
  102560:	ee                   	out    %al,(%dx)
  102561:	c3                   	ret    

00102562 <out16>:
  102562:	8b 54 24 04          	mov    0x4(%esp),%edx
  102566:	66 8b 44 24 08       	mov    0x8(%esp),%ax
  10256b:	66 ef                	out    %ax,(%dx)
  10256d:	c3                   	ret    

0010256e <out32>:
  10256e:	8b 54 24 04          	mov    0x4(%esp),%edx
  102572:	8b 44 24 08          	mov    0x8(%esp),%eax
  102576:	ef                   	out    %eax,(%dx)
  102577:	c3                   	ret    

00102578 <memcpy>:
  102578:	55                   	push   %ebp
  102579:	89 e5                	mov    %esp,%ebp
  10257b:	83 ec 10             	sub    $0x10,%esp
  10257e:	e8 3c e0 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  102583:	05 7d 0a 01 00       	add    $0x10a7d,%eax
  102588:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  10258f:	eb 1b                	jmp    1025ac <memcpy+0x34>
  102591:	8b 55 0c             	mov    0xc(%ebp),%edx
  102594:	8d 42 01             	lea    0x1(%edx),%eax
  102597:	89 45 0c             	mov    %eax,0xc(%ebp)
  10259a:	8b 45 08             	mov    0x8(%ebp),%eax
  10259d:	8d 48 01             	lea    0x1(%eax),%ecx
  1025a0:	89 4d 08             	mov    %ecx,0x8(%ebp)
  1025a3:	0f b6 12             	movzbl (%edx),%edx
  1025a6:	88 10                	mov    %dl,(%eax)
  1025a8:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
  1025ac:	8b 45 fc             	mov    -0x4(%ebp),%eax
  1025af:	3b 45 10             	cmp    0x10(%ebp),%eax
  1025b2:	7c dd                	jl     102591 <memcpy+0x19>
  1025b4:	90                   	nop
  1025b5:	c9                   	leave  
  1025b6:	c3                   	ret    

001025b7 <memset>:
  1025b7:	55                   	push   %ebp
  1025b8:	89 e5                	mov    %esp,%ebp
  1025ba:	83 ec 14             	sub    $0x14,%esp
  1025bd:	e8 fd df ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  1025c2:	05 3e 0a 01 00       	add    $0x10a3e,%eax
  1025c7:	8b 45 0c             	mov    0xc(%ebp),%eax
  1025ca:	88 45 ec             	mov    %al,-0x14(%ebp)
  1025cd:	8b 45 08             	mov    0x8(%ebp),%eax
  1025d0:	89 45 fc             	mov    %eax,-0x4(%ebp)
  1025d3:	eb 0f                	jmp    1025e4 <memset+0x2d>
  1025d5:	8b 45 fc             	mov    -0x4(%ebp),%eax
  1025d8:	8d 50 01             	lea    0x1(%eax),%edx
  1025db:	89 55 fc             	mov    %edx,-0x4(%ebp)
  1025de:	0f b6 55 ec          	movzbl -0x14(%ebp),%edx
  1025e2:	88 10                	mov    %dl,(%eax)
  1025e4:	8b 45 10             	mov    0x10(%ebp),%eax
  1025e7:	8d 50 ff             	lea    -0x1(%eax),%edx
  1025ea:	89 55 10             	mov    %edx,0x10(%ebp)
  1025ed:	85 c0                	test   %eax,%eax
  1025ef:	75 e4                	jne    1025d5 <memset+0x1e>
  1025f1:	90                   	nop
  1025f2:	c9                   	leave  
  1025f3:	c3                   	ret    

001025f4 <strcpy>:
  1025f4:	55                   	push   %ebp
  1025f5:	89 e5                	mov    %esp,%ebp
  1025f7:	e8 c3 df ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  1025fc:	05 04 0a 01 00       	add    $0x10a04,%eax
  102601:	eb 17                	jmp    10261a <strcpy+0x26>
  102603:	8b 55 0c             	mov    0xc(%ebp),%edx
  102606:	8d 42 01             	lea    0x1(%edx),%eax
  102609:	89 45 0c             	mov    %eax,0xc(%ebp)
  10260c:	8b 45 08             	mov    0x8(%ebp),%eax
  10260f:	8d 48 01             	lea    0x1(%eax),%ecx
  102612:	89 4d 08             	mov    %ecx,0x8(%ebp)
  102615:	0f b6 12             	movzbl (%edx),%edx
  102618:	88 10                	mov    %dl,(%eax)
  10261a:	8b 45 0c             	mov    0xc(%ebp),%eax
  10261d:	0f b6 00             	movzbl (%eax),%eax
  102620:	84 c0                	test   %al,%al
  102622:	75 df                	jne    102603 <strcpy+0xf>
  102624:	90                   	nop
  102625:	5d                   	pop    %ebp
  102626:	c3                   	ret    

00102627 <itoa>:
  102627:	55                   	push   %ebp
  102628:	89 e5                	mov    %esp,%ebp
  10262a:	83 ec 10             	sub    $0x10,%esp
  10262d:	e8 86 00 00 00       	call   1026b8 <__x86.get_pc_thunk.cx>
  102632:	81 c1 ce 09 01 00    	add    $0x109ce,%ecx
  102638:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  10263f:	8d 81 e2 0f 00 00    	lea    0xfe2(%ecx),%eax
  102645:	89 45 f8             	mov    %eax,-0x8(%ebp)
  102648:	83 6d f8 01          	subl   $0x1,-0x8(%ebp)
  10264c:	8b 45 f8             	mov    -0x8(%ebp),%eax
  10264f:	c6 00 00             	movb   $0x0,(%eax)
  102652:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
  102656:	79 0c                	jns    102664 <itoa+0x3d>
  102658:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)
  10265f:	f7 5d 08             	negl   0x8(%ebp)
  102662:	eb 39                	jmp    10269d <itoa+0x76>
  102664:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
  102668:	75 33                	jne    10269d <itoa+0x76>
  10266a:	83 6d f8 01          	subl   $0x1,-0x8(%ebp)
  10266e:	8b 45 f8             	mov    -0x8(%ebp),%eax
  102671:	c6 00 30             	movb   $0x30,(%eax)
  102674:	8b 45 f8             	mov    -0x8(%ebp),%eax
  102677:	eb 3d                	jmp    1026b6 <itoa+0x8f>
  102679:	8b 45 08             	mov    0x8(%ebp),%eax
  10267c:	99                   	cltd   
  10267d:	f7 7d 0c             	idivl  0xc(%ebp)
  102680:	89 d0                	mov    %edx,%eax
  102682:	83 6d f8 01          	subl   $0x1,-0x8(%ebp)
  102686:	0f b6 94 01 90 02 ff 	movzbl -0xfd70(%ecx,%eax,1),%edx
  10268d:	ff 
  10268e:	8b 45 f8             	mov    -0x8(%ebp),%eax
  102691:	88 10                	mov    %dl,(%eax)
  102693:	8b 45 08             	mov    0x8(%ebp),%eax
  102696:	99                   	cltd   
  102697:	f7 7d 0c             	idivl  0xc(%ebp)
  10269a:	89 45 08             	mov    %eax,0x8(%ebp)
  10269d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
  1026a1:	75 d6                	jne    102679 <itoa+0x52>
  1026a3:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
  1026a7:	74 0a                	je     1026b3 <itoa+0x8c>
  1026a9:	83 6d f8 01          	subl   $0x1,-0x8(%ebp)
  1026ad:	8b 45 f8             	mov    -0x8(%ebp),%eax
  1026b0:	c6 00 2d             	movb   $0x2d,(%eax)
  1026b3:	8b 45 f8             	mov    -0x8(%ebp),%eax
  1026b6:	c9                   	leave  
  1026b7:	c3                   	ret    

001026b8 <__x86.get_pc_thunk.cx>:
  1026b8:	8b 0c 24             	mov    (%esp),%ecx
  1026bb:	c3                   	ret    
  1026bc:	66 90                	xchg   %ax,%ax
  1026be:	66 90                	xchg   %ax,%ax

001026c0 <syscall>:
  1026c0:	8b 44 24 04          	mov    0x4(%esp),%eax
  1026c4:	cd 90                	int    $0x90
  1026c6:	c3                   	ret    

001026c7 <bga_write_register>:
  1026c7:	55                   	push   %ebp
  1026c8:	89 e5                	mov    %esp,%ebp
  1026ca:	53                   	push   %ebx
  1026cb:	83 ec 14             	sub    $0x14,%esp
  1026ce:	e8 f0 de ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  1026d3:	81 c3 2d 09 01 00    	add    $0x1092d,%ebx
  1026d9:	8b 55 08             	mov    0x8(%ebp),%edx
  1026dc:	8b 45 0c             	mov    0xc(%ebp),%eax
  1026df:	66 89 55 f4          	mov    %dx,-0xc(%ebp)
  1026e3:	66 89 45 f0          	mov    %ax,-0x10(%ebp)
  1026e7:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax
  1026eb:	83 ec 08             	sub    $0x8,%esp
  1026ee:	50                   	push   %eax
  1026ef:	68 ce 01 00 00       	push   $0x1ce
  1026f4:	e8 69 fe ff ff       	call   102562 <out16>
  1026f9:	83 c4 10             	add    $0x10,%esp
  1026fc:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax
  102700:	83 ec 08             	sub    $0x8,%esp
  102703:	50                   	push   %eax
  102704:	68 cf 01 00 00       	push   $0x1cf
  102709:	e8 54 fe ff ff       	call   102562 <out16>
  10270e:	83 c4 10             	add    $0x10,%esp
  102711:	90                   	nop
  102712:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  102715:	c9                   	leave  
  102716:	c3                   	ret    

00102717 <bga_read_register>:
  102717:	55                   	push   %ebp
  102718:	89 e5                	mov    %esp,%ebp
  10271a:	53                   	push   %ebx
  10271b:	83 ec 14             	sub    $0x14,%esp
  10271e:	e8 a0 de ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  102723:	81 c3 dd 08 01 00    	add    $0x108dd,%ebx
  102729:	8b 45 08             	mov    0x8(%ebp),%eax
  10272c:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
  102730:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax
  102734:	83 ec 08             	sub    $0x8,%esp
  102737:	50                   	push   %eax
  102738:	68 ce 01 00 00       	push   $0x1ce
  10273d:	e8 20 fe ff ff       	call   102562 <out16>
  102742:	83 c4 10             	add    $0x10,%esp
  102745:	83 ec 0c             	sub    $0xc,%esp
  102748:	68 cf 01 00 00       	push   $0x1cf
  10274d:	e8 f4 fd ff ff       	call   102546 <in16>
  102752:	83 c4 10             	add    $0x10,%esp
  102755:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  102758:	c9                   	leave  
  102759:	c3                   	ret    

0010275a <bga_set_video_mode>:
  10275a:	55                   	push   %ebp
  10275b:	89 e5                	mov    %esp,%ebp
  10275d:	83 ec 08             	sub    $0x8,%esp
  102760:	e8 5a de ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  102765:	05 9b 08 01 00       	add    $0x1089b,%eax
  10276a:	83 ec 08             	sub    $0x8,%esp
  10276d:	6a 00                	push   $0x0
  10276f:	6a 04                	push   $0x4
  102771:	e8 51 ff ff ff       	call   1026c7 <bga_write_register>
  102776:	83 c4 10             	add    $0x10,%esp
  102779:	8b 45 08             	mov    0x8(%ebp),%eax
  10277c:	0f b7 c0             	movzwl %ax,%eax
  10277f:	83 ec 08             	sub    $0x8,%esp
  102782:	50                   	push   %eax
  102783:	6a 01                	push   $0x1
  102785:	e8 3d ff ff ff       	call   1026c7 <bga_write_register>
  10278a:	83 c4 10             	add    $0x10,%esp
  10278d:	8b 45 0c             	mov    0xc(%ebp),%eax
  102790:	0f b7 c0             	movzwl %ax,%eax
  102793:	83 ec 08             	sub    $0x8,%esp
  102796:	50                   	push   %eax
  102797:	6a 02                	push   $0x2
  102799:	e8 29 ff ff ff       	call   1026c7 <bga_write_register>
  10279e:	83 c4 10             	add    $0x10,%esp
  1027a1:	8b 45 10             	mov    0x10(%ebp),%eax
  1027a4:	0f b7 c0             	movzwl %ax,%eax
  1027a7:	83 ec 08             	sub    $0x8,%esp
  1027aa:	50                   	push   %eax
  1027ab:	6a 03                	push   $0x3
  1027ad:	e8 15 ff ff ff       	call   1026c7 <bga_write_register>
  1027b2:	83 c4 10             	add    $0x10,%esp
  1027b5:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
  1027b9:	74 07                	je     1027c2 <bga_set_video_mode+0x68>
  1027bb:	ba 41 00 00 00       	mov    $0x41,%edx
  1027c0:	eb 05                	jmp    1027c7 <bga_set_video_mode+0x6d>
  1027c2:	ba 01 00 00 00       	mov    $0x1,%edx
  1027c7:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
  1027cb:	74 07                	je     1027d4 <bga_set_video_mode+0x7a>
  1027cd:	b8 00 00 00 00       	mov    $0x0,%eax
  1027d2:	eb 05                	jmp    1027d9 <bga_set_video_mode+0x7f>
  1027d4:	b8 80 00 00 00       	mov    $0x80,%eax
  1027d9:	09 d0                	or     %edx,%eax
  1027db:	0f b7 c0             	movzwl %ax,%eax
  1027de:	83 ec 08             	sub    $0x8,%esp
  1027e1:	50                   	push   %eax
  1027e2:	6a 04                	push   $0x4
  1027e4:	e8 de fe ff ff       	call   1026c7 <bga_write_register>
  1027e9:	83 c4 10             	add    $0x10,%esp
  1027ec:	90                   	nop
  1027ed:	c9                   	leave  
  1027ee:	c3                   	ret    

001027ef <bga_set_bank>:
  1027ef:	55                   	push   %ebp
  1027f0:	89 e5                	mov    %esp,%ebp
  1027f2:	83 ec 18             	sub    $0x18,%esp
  1027f5:	e8 c5 dd ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  1027fa:	05 06 08 01 00       	add    $0x10806,%eax
  1027ff:	8b 55 08             	mov    0x8(%ebp),%edx
  102802:	66 89 55 f4          	mov    %dx,-0xc(%ebp)
  102806:	0f b7 4d f4          	movzwl -0xc(%ebp),%ecx
  10280a:	c7 c2 04 d0 16 00    	mov    $0x16d004,%edx
  102810:	89 0a                	mov    %ecx,(%edx)
  102812:	c7 c2 04 d0 16 00    	mov    $0x16d004,%edx
  102818:	8b 12                	mov    (%edx),%edx
  10281a:	b9 00 00 01 00       	mov    $0x10000,%ecx
  10281f:	0f af ca             	imul   %edx,%ecx
  102822:	c7 c2 08 d0 16 00    	mov    $0x16d008,%edx
  102828:	89 0a                	mov    %ecx,(%edx)
  10282a:	c7 c2 08 d0 16 00    	mov    $0x16d008,%edx
  102830:	8b 12                	mov    (%edx),%edx
  102832:	b9 00 00 01 00       	mov    $0x10000,%ecx
  102837:	01 ca                	add    %ecx,%edx
  102839:	c7 c0 00 d0 16 00    	mov    $0x16d000,%eax
  10283f:	89 10                	mov    %edx,(%eax)
  102841:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax
  102845:	83 ec 08             	sub    $0x8,%esp
  102848:	50                   	push   %eax
  102849:	6a 05                	push   $0x5
  10284b:	e8 77 fe ff ff       	call   1026c7 <bga_write_register>
  102850:	83 c4 10             	add    $0x10,%esp
  102853:	90                   	nop
  102854:	c9                   	leave  
  102855:	c3                   	ret    

00102856 <fifo_init>:
  102856:	55                   	push   %ebp
  102857:	89 e5                	mov    %esp,%ebp
  102859:	e8 61 dd ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  10285e:	05 a2 07 01 00       	add    $0x107a2,%eax
  102863:	8b 45 08             	mov    0x8(%ebp),%eax
  102866:	8b 55 10             	mov    0x10(%ebp),%edx
  102869:	89 10                	mov    %edx,(%eax)
  10286b:	8b 45 08             	mov    0x8(%ebp),%eax
  10286e:	8b 55 10             	mov    0x10(%ebp),%edx
  102871:	89 50 04             	mov    %edx,0x4(%eax)
  102874:	8b 45 08             	mov    0x8(%ebp),%eax
  102877:	8b 55 10             	mov    0x10(%ebp),%edx
  10287a:	89 50 08             	mov    %edx,0x8(%eax)
  10287d:	8b 45 08             	mov    0x8(%ebp),%eax
  102880:	8b 55 0c             	mov    0xc(%ebp),%edx
  102883:	89 50 0c             	mov    %edx,0xc(%eax)
  102886:	8b 45 08             	mov    0x8(%ebp),%eax
  102889:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
  102890:	8b 45 08             	mov    0x8(%ebp),%eax
  102893:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
  10289a:	90                   	nop
  10289b:	5d                   	pop    %ebp
  10289c:	c3                   	ret    

0010289d <fifo_push>:
  10289d:	55                   	push   %ebp
  10289e:	89 e5                	mov    %esp,%ebp
  1028a0:	83 ec 04             	sub    $0x4,%esp
  1028a3:	e8 17 dd ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  1028a8:	05 58 07 01 00       	add    $0x10758,%eax
  1028ad:	8b 45 0c             	mov    0xc(%ebp),%eax
  1028b0:	88 45 fc             	mov    %al,-0x4(%ebp)
  1028b3:	8b 45 08             	mov    0x8(%ebp),%eax
  1028b6:	8b 50 10             	mov    0x10(%eax),%edx
  1028b9:	8b 45 08             	mov    0x8(%ebp),%eax
  1028bc:	8b 40 0c             	mov    0xc(%eax),%eax
  1028bf:	39 c2                	cmp    %eax,%edx
  1028c1:	7c 18                	jl     1028db <fifo_push+0x3e>
  1028c3:	8b 45 08             	mov    0x8(%ebp),%eax
  1028c6:	8b 40 14             	mov    0x14(%eax),%eax
  1028c9:	83 c8 01             	or     $0x1,%eax
  1028cc:	89 c2                	mov    %eax,%edx
  1028ce:	8b 45 08             	mov    0x8(%ebp),%eax
  1028d1:	89 50 14             	mov    %edx,0x14(%eax)
  1028d4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  1028d9:	eb 4b                	jmp    102926 <fifo_push+0x89>
  1028db:	8b 45 08             	mov    0x8(%ebp),%eax
  1028de:	8b 40 04             	mov    0x4(%eax),%eax
  1028e1:	8d 48 01             	lea    0x1(%eax),%ecx
  1028e4:	8b 55 08             	mov    0x8(%ebp),%edx
  1028e7:	89 4a 04             	mov    %ecx,0x4(%edx)
  1028ea:	0f b6 55 fc          	movzbl -0x4(%ebp),%edx
  1028ee:	88 10                	mov    %dl,(%eax)
  1028f0:	8b 45 08             	mov    0x8(%ebp),%eax
  1028f3:	8b 50 04             	mov    0x4(%eax),%edx
  1028f6:	8b 45 08             	mov    0x8(%ebp),%eax
  1028f9:	8b 08                	mov    (%eax),%ecx
  1028fb:	8b 45 08             	mov    0x8(%ebp),%eax
  1028fe:	8b 40 0c             	mov    0xc(%eax),%eax
  102901:	01 c8                	add    %ecx,%eax
  102903:	39 c2                	cmp    %eax,%edx
  102905:	75 0b                	jne    102912 <fifo_push+0x75>
  102907:	8b 45 08             	mov    0x8(%ebp),%eax
  10290a:	8b 10                	mov    (%eax),%edx
  10290c:	8b 45 08             	mov    0x8(%ebp),%eax
  10290f:	89 50 04             	mov    %edx,0x4(%eax)
  102912:	8b 45 08             	mov    0x8(%ebp),%eax
  102915:	8b 40 10             	mov    0x10(%eax),%eax
  102918:	8d 50 01             	lea    0x1(%eax),%edx
  10291b:	8b 45 08             	mov    0x8(%ebp),%eax
  10291e:	89 50 10             	mov    %edx,0x10(%eax)
  102921:	b8 00 00 00 00       	mov    $0x0,%eax
  102926:	c9                   	leave  
  102927:	c3                   	ret    

00102928 <fifo_pop>:
  102928:	55                   	push   %ebp
  102929:	89 e5                	mov    %esp,%ebp
  10292b:	83 ec 10             	sub    $0x10,%esp
  10292e:	e8 8c dc ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  102933:	05 cd 06 01 00       	add    $0x106cd,%eax
  102938:	8b 45 08             	mov    0x8(%ebp),%eax
  10293b:	8b 40 10             	mov    0x10(%eax),%eax
  10293e:	85 c0                	test   %eax,%eax
  102940:	75 07                	jne    102949 <fifo_pop+0x21>
  102942:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  102947:	eb 4c                	jmp    102995 <fifo_pop+0x6d>
  102949:	8b 45 08             	mov    0x8(%ebp),%eax
  10294c:	8b 40 08             	mov    0x8(%eax),%eax
  10294f:	8d 48 01             	lea    0x1(%eax),%ecx
  102952:	8b 55 08             	mov    0x8(%ebp),%edx
  102955:	89 4a 08             	mov    %ecx,0x8(%edx)
  102958:	0f b6 00             	movzbl (%eax),%eax
  10295b:	0f b6 c0             	movzbl %al,%eax
  10295e:	89 45 fc             	mov    %eax,-0x4(%ebp)
  102961:	8b 45 08             	mov    0x8(%ebp),%eax
  102964:	8b 50 08             	mov    0x8(%eax),%edx
  102967:	8b 45 08             	mov    0x8(%ebp),%eax
  10296a:	8b 08                	mov    (%eax),%ecx
  10296c:	8b 45 08             	mov    0x8(%ebp),%eax
  10296f:	8b 40 0c             	mov    0xc(%eax),%eax
  102972:	01 c8                	add    %ecx,%eax
  102974:	39 c2                	cmp    %eax,%edx
  102976:	75 0b                	jne    102983 <fifo_pop+0x5b>
  102978:	8b 45 08             	mov    0x8(%ebp),%eax
  10297b:	8b 10                	mov    (%eax),%edx
  10297d:	8b 45 08             	mov    0x8(%ebp),%eax
  102980:	89 50 08             	mov    %edx,0x8(%eax)
  102983:	8b 45 08             	mov    0x8(%ebp),%eax
  102986:	8b 40 10             	mov    0x10(%eax),%eax
  102989:	8d 50 ff             	lea    -0x1(%eax),%edx
  10298c:	8b 45 08             	mov    0x8(%ebp),%eax
  10298f:	89 50 10             	mov    %edx,0x10(%eax)
  102992:	8b 45 fc             	mov    -0x4(%ebp),%eax
  102995:	c9                   	leave  
  102996:	c3                   	ret    

00102997 <mm_init>:
  102997:	55                   	push   %ebp
  102998:	89 e5                	mov    %esp,%ebp
  10299a:	53                   	push   %ebx
  10299b:	83 ec 14             	sub    $0x14,%esp
  10299e:	e8 1c dc ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  1029a3:	05 5d 06 01 00       	add    $0x1065d,%eax
  1029a8:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  1029ae:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
  1029b4:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  1029ba:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
  1029c1:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  1029c7:	c7 42 08 00 00 00 00 	movl   $0x0,0x8(%edx)
  1029ce:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  1029d4:	c7 42 0c 00 00 00 00 	movl   $0x0,0xc(%edx)
  1029db:	83 ec 08             	sub    $0x8,%esp
  1029de:	68 00 00 48 00       	push   $0x480000
  1029e3:	68 00 00 40 00       	push   $0x400000
  1029e8:	89 c3                	mov    %eax,%ebx
  1029ea:	e8 b5 04 00 00       	call   102ea4 <memtest>
  1029ef:	83 c4 10             	add    $0x10,%esp
  1029f2:	89 45 f4             	mov    %eax,-0xc(%ebp)
  1029f5:	83 ec 08             	sub    $0x8,%esp
  1029f8:	68 00 e0 09 00       	push   $0x9e000
  1029fd:	68 00 10 00 00       	push   $0x1000
  102a02:	e8 82 01 00 00       	call   102b89 <mm_free>
  102a07:	83 c4 10             	add    $0x10,%esp
  102a0a:	8b 45 f4             	mov    -0xc(%ebp),%eax
  102a0d:	2d 00 00 40 00       	sub    $0x400000,%eax
  102a12:	83 ec 08             	sub    $0x8,%esp
  102a15:	50                   	push   %eax
  102a16:	68 00 00 40 00       	push   $0x400000
  102a1b:	e8 69 01 00 00       	call   102b89 <mm_free>
  102a20:	83 c4 10             	add    $0x10,%esp
  102a23:	8b 45 f4             	mov    -0xc(%ebp),%eax
  102a26:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  102a29:	c9                   	leave  
  102a2a:	c3                   	ret    

00102a2b <mm_total>:
  102a2b:	55                   	push   %ebp
  102a2c:	89 e5                	mov    %esp,%ebp
  102a2e:	83 ec 10             	sub    $0x10,%esp
  102a31:	e8 89 db ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  102a36:	05 ca 05 01 00       	add    $0x105ca,%eax
  102a3b:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
  102a42:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  102a49:	eb 17                	jmp    102a62 <mm_total+0x37>
  102a4b:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102a51:	8b 4d fc             	mov    -0x4(%ebp),%ecx
  102a54:	83 c1 02             	add    $0x2,%ecx
  102a57:	8b 54 ca 04          	mov    0x4(%edx,%ecx,8),%edx
  102a5b:	01 55 f8             	add    %edx,-0x8(%ebp)
  102a5e:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
  102a62:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102a68:	8b 12                	mov    (%edx),%edx
  102a6a:	39 55 fc             	cmp    %edx,-0x4(%ebp)
  102a6d:	72 dc                	jb     102a4b <mm_total+0x20>
  102a6f:	8b 45 f8             	mov    -0x8(%ebp),%eax
  102a72:	c9                   	leave  
  102a73:	c3                   	ret    

00102a74 <mm_alloc>:
  102a74:	55                   	push   %ebp
  102a75:	89 e5                	mov    %esp,%ebp
  102a77:	57                   	push   %edi
  102a78:	56                   	push   %esi
  102a79:	53                   	push   %ebx
  102a7a:	83 ec 10             	sub    $0x10,%esp
  102a7d:	e8 3d db ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  102a82:	05 7e 05 01 00       	add    $0x1057e,%eax
  102a87:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
  102a8e:	e9 d8 00 00 00       	jmp    102b6b <mm_alloc+0xf7>
  102a93:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102a99:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102a9c:	83 c1 02             	add    $0x2,%ecx
  102a9f:	8b 54 ca 04          	mov    0x4(%edx,%ecx,8),%edx
  102aa3:	39 55 08             	cmp    %edx,0x8(%ebp)
  102aa6:	0f 87 bb 00 00 00    	ja     102b67 <mm_alloc+0xf3>
  102aac:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102ab2:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102ab5:	83 c1 02             	add    $0x2,%ecx
  102ab8:	8b 14 ca             	mov    (%edx,%ecx,8),%edx
  102abb:	89 55 ec             	mov    %edx,-0x14(%ebp)
  102abe:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102ac4:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102ac7:	83 c1 02             	add    $0x2,%ecx
  102aca:	8b 1c ca             	mov    (%edx,%ecx,8),%ebx
  102acd:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102ad3:	8b 4d 08             	mov    0x8(%ebp),%ecx
  102ad6:	01 cb                	add    %ecx,%ebx
  102ad8:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102adb:	83 c1 02             	add    $0x2,%ecx
  102ade:	89 1c ca             	mov    %ebx,(%edx,%ecx,8)
  102ae1:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102ae7:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102aea:	83 c1 02             	add    $0x2,%ecx
  102aed:	8b 4c ca 04          	mov    0x4(%edx,%ecx,8),%ecx
  102af1:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102af7:	2b 4d 08             	sub    0x8(%ebp),%ecx
  102afa:	8b 5d f0             	mov    -0x10(%ebp),%ebx
  102afd:	83 c3 02             	add    $0x2,%ebx
  102b00:	89 4c da 04          	mov    %ecx,0x4(%edx,%ebx,8)
  102b04:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102b0a:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102b0d:	83 c1 02             	add    $0x2,%ecx
  102b10:	8b 54 ca 04          	mov    0x4(%edx,%ecx,8),%edx
  102b14:	85 d2                	test   %edx,%edx
  102b16:	75 4a                	jne    102b62 <mm_alloc+0xee>
  102b18:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102b1e:	8b 0a                	mov    (%edx),%ecx
  102b20:	83 e9 01             	sub    $0x1,%ecx
  102b23:	89 0a                	mov    %ecx,(%edx)
  102b25:	eb 2e                	jmp    102b55 <mm_alloc+0xe1>
  102b27:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102b2d:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102b30:	8d 79 01             	lea    0x1(%ecx),%edi
  102b33:	8b 98 84 07 00 00    	mov    0x784(%eax),%ebx
  102b39:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102b3c:	8d 71 02             	lea    0x2(%ecx),%esi
  102b3f:	8d 4f 02             	lea    0x2(%edi),%ecx
  102b42:	8d 0c ca             	lea    (%edx,%ecx,8),%ecx
  102b45:	8b 11                	mov    (%ecx),%edx
  102b47:	8b 49 04             	mov    0x4(%ecx),%ecx
  102b4a:	89 14 f3             	mov    %edx,(%ebx,%esi,8)
  102b4d:	89 4c f3 04          	mov    %ecx,0x4(%ebx,%esi,8)
  102b51:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
  102b55:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102b5b:	8b 12                	mov    (%edx),%edx
  102b5d:	39 55 f0             	cmp    %edx,-0x10(%ebp)
  102b60:	7c c5                	jl     102b27 <mm_alloc+0xb3>
  102b62:	8b 45 ec             	mov    -0x14(%ebp),%eax
  102b65:	eb 1a                	jmp    102b81 <mm_alloc+0x10d>
  102b67:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
  102b6b:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102b71:	8b 12                	mov    (%edx),%edx
  102b73:	39 55 f0             	cmp    %edx,-0x10(%ebp)
  102b76:	0f 8c 17 ff ff ff    	jl     102a93 <mm_alloc+0x1f>
  102b7c:	b8 00 00 00 00       	mov    $0x0,%eax
  102b81:	83 c4 10             	add    $0x10,%esp
  102b84:	5b                   	pop    %ebx
  102b85:	5e                   	pop    %esi
  102b86:	5f                   	pop    %edi
  102b87:	5d                   	pop    %ebp
  102b88:	c3                   	ret    

00102b89 <mm_free>:
  102b89:	55                   	push   %ebp
  102b8a:	89 e5                	mov    %esp,%ebp
  102b8c:	57                   	push   %edi
  102b8d:	56                   	push   %esi
  102b8e:	53                   	push   %ebx
  102b8f:	83 ec 10             	sub    $0x10,%esp
  102b92:	e8 28 da ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  102b97:	05 69 04 01 00       	add    $0x10469,%eax
  102b9c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
  102ba3:	eb 18                	jmp    102bbd <mm_free+0x34>
  102ba5:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102bab:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102bae:	83 c1 02             	add    $0x2,%ecx
  102bb1:	8b 14 ca             	mov    (%edx,%ecx,8),%edx
  102bb4:	39 55 08             	cmp    %edx,0x8(%ebp)
  102bb7:	72 13                	jb     102bcc <mm_free+0x43>
  102bb9:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
  102bbd:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102bc3:	8b 12                	mov    (%edx),%edx
  102bc5:	39 55 f0             	cmp    %edx,-0x10(%ebp)
  102bc8:	7c db                	jl     102ba5 <mm_free+0x1c>
  102bca:	eb 01                	jmp    102bcd <mm_free+0x44>
  102bcc:	90                   	nop
  102bcd:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
  102bd1:	0f 8e 18 01 00 00    	jle    102cef <mm_free+0x166>
  102bd7:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102bdd:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102be0:	83 e9 01             	sub    $0x1,%ecx
  102be3:	83 c1 02             	add    $0x2,%ecx
  102be6:	8b 0c ca             	mov    (%edx,%ecx,8),%ecx
  102be9:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102bef:	8b 5d f0             	mov    -0x10(%ebp),%ebx
  102bf2:	83 eb 01             	sub    $0x1,%ebx
  102bf5:	83 c3 02             	add    $0x2,%ebx
  102bf8:	8b 54 da 04          	mov    0x4(%edx,%ebx,8),%edx
  102bfc:	01 ca                	add    %ecx,%edx
  102bfe:	39 55 08             	cmp    %edx,0x8(%ebp)
  102c01:	0f 85 e8 00 00 00    	jne    102cef <mm_free+0x166>
  102c07:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102c0d:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102c10:	83 e9 01             	sub    $0x1,%ecx
  102c13:	83 c1 02             	add    $0x2,%ecx
  102c16:	8b 5c ca 04          	mov    0x4(%edx,%ecx,8),%ebx
  102c1a:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102c20:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102c23:	8d 71 ff             	lea    -0x1(%ecx),%esi
  102c26:	8b 4d 0c             	mov    0xc(%ebp),%ecx
  102c29:	01 cb                	add    %ecx,%ebx
  102c2b:	8d 4e 02             	lea    0x2(%esi),%ecx
  102c2e:	89 5c ca 04          	mov    %ebx,0x4(%edx,%ecx,8)
  102c32:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102c38:	8b 12                	mov    (%edx),%edx
  102c3a:	39 55 f0             	cmp    %edx,-0x10(%ebp)
  102c3d:	0f 8d a2 00 00 00    	jge    102ce5 <mm_free+0x15c>
  102c43:	8b 4d 08             	mov    0x8(%ebp),%ecx
  102c46:	8b 55 0c             	mov    0xc(%ebp),%edx
  102c49:	8d 1c 11             	lea    (%ecx,%edx,1),%ebx
  102c4c:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102c52:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102c55:	83 c1 02             	add    $0x2,%ecx
  102c58:	8b 14 ca             	mov    (%edx,%ecx,8),%edx
  102c5b:	39 d3                	cmp    %edx,%ebx
  102c5d:	0f 85 82 00 00 00    	jne    102ce5 <mm_free+0x15c>
  102c63:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102c69:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102c6c:	83 e9 01             	sub    $0x1,%ecx
  102c6f:	83 c1 02             	add    $0x2,%ecx
  102c72:	8b 5c ca 04          	mov    0x4(%edx,%ecx,8),%ebx
  102c76:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102c7c:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102c7f:	83 c1 02             	add    $0x2,%ecx
  102c82:	8b 4c ca 04          	mov    0x4(%edx,%ecx,8),%ecx
  102c86:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102c8c:	8b 75 f0             	mov    -0x10(%ebp),%esi
  102c8f:	83 ee 01             	sub    $0x1,%esi
  102c92:	01 cb                	add    %ecx,%ebx
  102c94:	8d 4e 02             	lea    0x2(%esi),%ecx
  102c97:	89 5c ca 04          	mov    %ebx,0x4(%edx,%ecx,8)
  102c9b:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102ca1:	8b 0a                	mov    (%edx),%ecx
  102ca3:	83 e9 01             	sub    $0x1,%ecx
  102ca6:	89 0a                	mov    %ecx,(%edx)
  102ca8:	eb 2e                	jmp    102cd8 <mm_free+0x14f>
  102caa:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102cb0:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102cb3:	8d 79 01             	lea    0x1(%ecx),%edi
  102cb6:	8b 98 84 07 00 00    	mov    0x784(%eax),%ebx
  102cbc:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102cbf:	8d 71 02             	lea    0x2(%ecx),%esi
  102cc2:	8d 4f 02             	lea    0x2(%edi),%ecx
  102cc5:	8d 0c ca             	lea    (%edx,%ecx,8),%ecx
  102cc8:	8b 11                	mov    (%ecx),%edx
  102cca:	8b 49 04             	mov    0x4(%ecx),%ecx
  102ccd:	89 14 f3             	mov    %edx,(%ebx,%esi,8)
  102cd0:	89 4c f3 04          	mov    %ecx,0x4(%ebx,%esi,8)
  102cd4:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
  102cd8:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102cde:	8b 12                	mov    (%edx),%edx
  102ce0:	39 55 f0             	cmp    %edx,-0x10(%ebp)
  102ce3:	7c c5                	jl     102caa <mm_free+0x121>
  102ce5:	b8 00 00 00 00       	mov    $0x0,%eax
  102cea:	e9 4d 01 00 00       	jmp    102e3c <mm_free+0x2b3>
  102cef:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102cf5:	8b 12                	mov    (%edx),%edx
  102cf7:	39 55 f0             	cmp    %edx,-0x10(%ebp)
  102cfa:	7d 5d                	jge    102d59 <mm_free+0x1d0>
  102cfc:	8b 4d 08             	mov    0x8(%ebp),%ecx
  102cff:	8b 55 0c             	mov    0xc(%ebp),%edx
  102d02:	8d 1c 11             	lea    (%ecx,%edx,1),%ebx
  102d05:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102d0b:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102d0e:	83 c1 02             	add    $0x2,%ecx
  102d11:	8b 14 ca             	mov    (%edx,%ecx,8),%edx
  102d14:	39 d3                	cmp    %edx,%ebx
  102d16:	75 41                	jne    102d59 <mm_free+0x1d0>
  102d18:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102d1e:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102d21:	8d 59 02             	lea    0x2(%ecx),%ebx
  102d24:	8b 4d 08             	mov    0x8(%ebp),%ecx
  102d27:	89 0c da             	mov    %ecx,(%edx,%ebx,8)
  102d2a:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102d30:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102d33:	83 c1 02             	add    $0x2,%ecx
  102d36:	8b 4c ca 04          	mov    0x4(%edx,%ecx,8),%ecx
  102d3a:	8b 80 84 07 00 00    	mov    0x784(%eax),%eax
  102d40:	8b 55 0c             	mov    0xc(%ebp),%edx
  102d43:	01 d1                	add    %edx,%ecx
  102d45:	8b 55 f0             	mov    -0x10(%ebp),%edx
  102d48:	83 c2 02             	add    $0x2,%edx
  102d4b:	89 4c d0 04          	mov    %ecx,0x4(%eax,%edx,8)
  102d4f:	b8 00 00 00 00       	mov    $0x0,%eax
  102d54:	e9 e3 00 00 00       	jmp    102e3c <mm_free+0x2b3>
  102d59:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102d5f:	8b 12                	mov    (%edx),%edx
  102d61:	81 fa f9 0f 00 00    	cmp    $0xff9,%edx
  102d67:	0f 8f a2 00 00 00    	jg     102e0f <mm_free+0x286>
  102d6d:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102d73:	8b 12                	mov    (%edx),%edx
  102d75:	89 55 ec             	mov    %edx,-0x14(%ebp)
  102d78:	eb 2e                	jmp    102da8 <mm_free+0x21f>
  102d7a:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102d80:	8b 4d ec             	mov    -0x14(%ebp),%ecx
  102d83:	8d 79 ff             	lea    -0x1(%ecx),%edi
  102d86:	8b 98 84 07 00 00    	mov    0x784(%eax),%ebx
  102d8c:	8b 4d ec             	mov    -0x14(%ebp),%ecx
  102d8f:	8d 71 02             	lea    0x2(%ecx),%esi
  102d92:	8d 4f 02             	lea    0x2(%edi),%ecx
  102d95:	8d 0c ca             	lea    (%edx,%ecx,8),%ecx
  102d98:	8b 11                	mov    (%ecx),%edx
  102d9a:	8b 49 04             	mov    0x4(%ecx),%ecx
  102d9d:	89 14 f3             	mov    %edx,(%ebx,%esi,8)
  102da0:	89 4c f3 04          	mov    %ecx,0x4(%ebx,%esi,8)
  102da4:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
  102da8:	8b 55 ec             	mov    -0x14(%ebp),%edx
  102dab:	3b 55 f0             	cmp    -0x10(%ebp),%edx
  102dae:	7f ca                	jg     102d7a <mm_free+0x1f1>
  102db0:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102db6:	8b 0a                	mov    (%edx),%ecx
  102db8:	83 c1 01             	add    $0x1,%ecx
  102dbb:	89 0a                	mov    %ecx,(%edx)
  102dbd:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102dc3:	8b 4a 04             	mov    0x4(%edx),%ecx
  102dc6:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102dcc:	8b 12                	mov    (%edx),%edx
  102dce:	39 d1                	cmp    %edx,%ecx
  102dd0:	7d 11                	jge    102de3 <mm_free+0x25a>
  102dd2:	8b 88 84 07 00 00    	mov    0x784(%eax),%ecx
  102dd8:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102dde:	8b 09                	mov    (%ecx),%ecx
  102de0:	89 4a 04             	mov    %ecx,0x4(%edx)
  102de3:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102de9:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  102dec:	8d 59 02             	lea    0x2(%ecx),%ebx
  102def:	8b 4d 08             	mov    0x8(%ebp),%ecx
  102df2:	89 0c da             	mov    %ecx,(%edx,%ebx,8)
  102df5:	8b 80 84 07 00 00    	mov    0x784(%eax),%eax
  102dfb:	8b 55 f0             	mov    -0x10(%ebp),%edx
  102dfe:	8d 4a 02             	lea    0x2(%edx),%ecx
  102e01:	8b 55 0c             	mov    0xc(%ebp),%edx
  102e04:	89 54 c8 04          	mov    %edx,0x4(%eax,%ecx,8)
  102e08:	b8 00 00 00 00       	mov    $0x0,%eax
  102e0d:	eb 2d                	jmp    102e3c <mm_free+0x2b3>
  102e0f:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102e15:	8b 4a 0c             	mov    0xc(%edx),%ecx
  102e18:	83 c1 01             	add    $0x1,%ecx
  102e1b:	89 4a 0c             	mov    %ecx,0xc(%edx)
  102e1e:	8b 90 84 07 00 00    	mov    0x784(%eax),%edx
  102e24:	8b 52 08             	mov    0x8(%edx),%edx
  102e27:	89 d1                	mov    %edx,%ecx
  102e29:	8b 55 0c             	mov    0xc(%ebp),%edx
  102e2c:	01 ca                	add    %ecx,%edx
  102e2e:	8b 80 84 07 00 00    	mov    0x784(%eax),%eax
  102e34:	89 50 08             	mov    %edx,0x8(%eax)
  102e37:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  102e3c:	83 c4 10             	add    $0x10,%esp
  102e3f:	5b                   	pop    %ebx
  102e40:	5e                   	pop    %esi
  102e41:	5f                   	pop    %edi
  102e42:	5d                   	pop    %ebp
  102e43:	c3                   	ret    

00102e44 <mm_alloc_4k>:
  102e44:	55                   	push   %ebp
  102e45:	89 e5                	mov    %esp,%ebp
  102e47:	e8 73 d7 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  102e4c:	05 b4 01 01 00       	add    $0x101b4,%eax
  102e51:	8b 45 08             	mov    0x8(%ebp),%eax
  102e54:	05 ff 0f 00 00       	add    $0xfff,%eax
  102e59:	25 00 f0 ff ff       	and    $0xfffff000,%eax
  102e5e:	89 45 08             	mov    %eax,0x8(%ebp)
  102e61:	ff 75 08             	pushl  0x8(%ebp)
  102e64:	e8 0b fc ff ff       	call   102a74 <mm_alloc>
  102e69:	83 c4 04             	add    $0x4,%esp
  102e6c:	c9                   	leave  
  102e6d:	c3                   	ret    

00102e6e <mm_free_4k>:
  102e6e:	55                   	push   %ebp
  102e6f:	89 e5                	mov    %esp,%ebp
  102e71:	83 ec 10             	sub    $0x10,%esp
  102e74:	e8 46 d7 ff ff       	call   1005bf <__x86.get_pc_thunk.ax>
  102e79:	05 87 01 01 00       	add    $0x10187,%eax
  102e7e:	8b 45 0c             	mov    0xc(%ebp),%eax
  102e81:	05 ff 0f 00 00       	add    $0xfff,%eax
  102e86:	25 00 f0 ff ff       	and    $0xfffff000,%eax
  102e8b:	89 45 0c             	mov    %eax,0xc(%ebp)
  102e8e:	ff 75 0c             	pushl  0xc(%ebp)
  102e91:	ff 75 08             	pushl  0x8(%ebp)
  102e94:	e8 f0 fc ff ff       	call   102b89 <mm_free>
  102e99:	83 c4 08             	add    $0x8,%esp
  102e9c:	89 45 fc             	mov    %eax,-0x4(%ebp)
  102e9f:	8b 45 fc             	mov    -0x4(%ebp),%eax
  102ea2:	c9                   	leave  
  102ea3:	c3                   	ret    

00102ea4 <memtest>:
  102ea4:	55                   	push   %ebp
  102ea5:	89 e5                	mov    %esp,%ebp
  102ea7:	53                   	push   %ebx
  102ea8:	83 ec 14             	sub    $0x14,%esp
  102eab:	e8 13 d7 ff ff       	call   1005c3 <__x86.get_pc_thunk.bx>
  102eb0:	81 c3 50 01 01 00    	add    $0x10150,%ebx
  102eb6:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)
  102eba:	e8 66 f6 ff ff       	call   102525 <io_load_eflags>
  102ebf:	89 45 f0             	mov    %eax,-0x10(%ebp)
  102ec2:	81 4d f0 00 00 04 00 	orl    $0x40000,-0x10(%ebp)
  102ec9:	83 ec 0c             	sub    $0xc,%esp
  102ecc:	ff 75 f0             	pushl  -0x10(%ebp)
  102ecf:	e8 54 f6 ff ff       	call   102528 <io_store_eflags>
  102ed4:	83 c4 10             	add    $0x10,%esp
  102ed7:	e8 49 f6 ff ff       	call   102525 <io_load_eflags>
  102edc:	89 45 f0             	mov    %eax,-0x10(%ebp)
  102edf:	8b 45 f0             	mov    -0x10(%ebp),%eax
  102ee2:	25 00 00 04 00       	and    $0x40000,%eax
  102ee7:	85 c0                	test   %eax,%eax
  102ee9:	74 04                	je     102eef <memtest+0x4b>
  102eeb:	c6 45 f7 01          	movb   $0x1,-0x9(%ebp)
  102eef:	81 65 f0 ff ff fb ff 	andl   $0xfffbffff,-0x10(%ebp)
  102ef6:	83 ec 0c             	sub    $0xc,%esp
  102ef9:	ff 75 f0             	pushl  -0x10(%ebp)
  102efc:	e8 27 f6 ff ff       	call   102528 <io_store_eflags>
  102f01:	83 c4 10             	add    $0x10,%esp
  102f04:	80 7d f7 00          	cmpb   $0x0,-0x9(%ebp)
  102f08:	74 1d                	je     102f27 <memtest+0x83>
  102f0a:	e8 20 f6 ff ff       	call   10252f <io_load_cr0>
  102f0f:	89 45 ec             	mov    %eax,-0x14(%ebp)
  102f12:	81 4d ec 00 00 00 60 	orl    $0x60000000,-0x14(%ebp)
  102f19:	83 ec 0c             	sub    $0xc,%esp
  102f1c:	ff 75 ec             	pushl  -0x14(%ebp)
  102f1f:	e8 0f f6 ff ff       	call   102533 <io_store_cr0>
  102f24:	83 c4 10             	add    $0x10,%esp
  102f27:	83 ec 08             	sub    $0x8,%esp
  102f2a:	ff 75 0c             	pushl  0xc(%ebp)
  102f2d:	ff 75 08             	pushl  0x8(%ebp)
  102f30:	e8 3b 00 00 00       	call   102f70 <memtest_sub>
  102f35:	83 c4 10             	add    $0x10,%esp
  102f38:	89 45 e8             	mov    %eax,-0x18(%ebp)
  102f3b:	80 7d f7 00          	cmpb   $0x0,-0x9(%ebp)
  102f3f:	74 1d                	je     102f5e <memtest+0xba>
  102f41:	e8 e9 f5 ff ff       	call   10252f <io_load_cr0>
  102f46:	89 45 ec             	mov    %eax,-0x14(%ebp)
  102f49:	81 65 ec ff ff ff 9f 	andl   $0x9fffffff,-0x14(%ebp)
  102f50:	83 ec 0c             	sub    $0xc,%esp
  102f53:	ff 75 ec             	pushl  -0x14(%ebp)
  102f56:	e8 d8 f5 ff ff       	call   102533 <io_store_cr0>
  102f5b:	83 c4 10             	add    $0x10,%esp
  102f5e:	8b 45 e8             	mov    -0x18(%ebp),%eax
  102f61:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  102f64:	c9                   	leave  
  102f65:	c3                   	ret    
  102f66:	66 90                	xchg   %ax,%ax
  102f68:	66 90                	xchg   %ax,%ax
  102f6a:	66 90                	xchg   %ax,%ax
  102f6c:	66 90                	xchg   %ax,%ax
  102f6e:	66 90                	xchg   %ax,%ax

00102f70 <memtest_sub>:
  102f70:	57                   	push   %edi
  102f71:	56                   	push   %esi
  102f72:	53                   	push   %ebx
  102f73:	be 55 aa 55 aa       	mov    $0xaa55aa55,%esi
  102f78:	bf aa 55 aa 55       	mov    $0x55aa55aa,%edi
  102f7d:	8b 44 24 10          	mov    0x10(%esp),%eax

00102f81 <mts_loop>:
  102f81:	89 c3                	mov    %eax,%ebx
  102f83:	81 c3 fc 0f 00 00    	add    $0xffc,%ebx
  102f89:	8b 13                	mov    (%ebx),%edx
  102f8b:	89 33                	mov    %esi,(%ebx)
  102f8d:	83 33 ff             	xorl   $0xffffffff,(%ebx)
  102f90:	3b 3b                	cmp    (%ebx),%edi
  102f92:	75 18                	jne    102fac <mts_fin>
  102f94:	83 33 ff             	xorl   $0xffffffff,(%ebx)
  102f97:	3b 33                	cmp    (%ebx),%esi
  102f99:	75 11                	jne    102fac <mts_fin>
  102f9b:	89 13                	mov    %edx,(%ebx)
  102f9d:	05 00 10 00 00       	add    $0x1000,%eax
  102fa2:	3b 44 24 14          	cmp    0x14(%esp),%eax
  102fa6:	76 d9                	jbe    102f81 <mts_loop>
  102fa8:	5b                   	pop    %ebx
  102fa9:	5e                   	pop    %esi
  102faa:	5f                   	pop    %edi
  102fab:	c3                   	ret    

00102fac <mts_fin>:
  102fac:	89 13                	mov    %edx,(%ebx)
  102fae:	5b                   	pop    %ebx
  102faf:	5e                   	pop    %esi
  102fb0:	5f                   	pop    %edi
  102fb1:	c3                   	ret    
